{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_5802845b.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_export_value__({\n  \"className\": \"inter_5802845b-module__9kuUBG__className\",\n  \"variable\": \"inter_5802845b-module__9kuUBG__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack://[next]/internal/font/google/inter_5802845b.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Inter%22,%22arguments%22:[{%22variable%22:%22--font-inter%22,%22subsets%22:[%22latin%22],%22display%22:%22swap%22}],%22variableName%22:%22inter%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Inter', 'Inter Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,wJAAA,CAAA,UAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,wJAAA,CAAA,UAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,wJAAA,CAAA,UAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0]}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/app/%28blog%29/alert-banner.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(blog)/alert-banner.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(blog)/alert-banner.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,sZAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA"}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/app/%28blog%29/alert-banner.tsx/proxy.js"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/(blog)/alert-banner.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/(blog)/alert-banner.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,sZAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA2Q,GACxS,yCACA"}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 70, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 76, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/app/%28blog%29/portable-text.tsx"],"sourcesContent":["/**\r\n * This component uses Portable Text to render a post body.\r\n *\r\n * You can learn more about Portable Text on:\r\n * https://www.sanity.io/docs/block-content\r\n * https://github.com/portabletext/react-portabletext\r\n * https://portabletext.org/\r\n *\r\n */\r\n\r\nimport {\r\n  PortableText,\r\n  type PortableTextComponents,\r\n  type PortableTextBlock,\r\n} from \"next-sanity\";\r\n\r\nexport default function CustomPortableText({\r\n  className,\r\n  value,\r\n}: {\r\n  className?: string;\r\n  value: PortableTextBlock[];\r\n}) {\r\n  const components: PortableTextComponents = {\r\n    block: {\r\n      h5: ({ children }) => (\r\n        <h5 className=\"mb-2 text-sm font-semibold\">{children}</h5>\r\n      ),\r\n      h6: ({ children }) => (\r\n        <h6 className=\"mb-1 text-xs font-semibold\">{children}</h6>\r\n      ),\r\n    },\r\n    marks: {\r\n      link: ({ children, value }) => {\r\n        return (\r\n          <a href={value?.href} rel=\"noreferrer noopener\">\r\n            {children}\r\n          </a>\r\n        );\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div className={[\"prose\", className].filter(Boolean).join(\" \")}>\r\n      <PortableText components={components} value={value} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"AAAA;;;;;;;;CAQC;;;;AAED;;;AAMe,SAAS,mBAAmB,EACzC,SAAS,EACT,KAAK,EAIN;IACC,MAAM,aAAqC;QACzC,OAAO;YACL,IAAI,CAAC,EAAE,QAAQ,EAAE,iBACf,+YAAC;oBAAG,WAAU;8BAA8B;;;;;;YAE9C,IAAI,CAAC,EAAE,QAAQ,EAAE,iBACf,+YAAC;oBAAG,WAAU;8BAA8B;;;;;;QAEhD;QACA,OAAO;YACL,MAAM,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE;gBACxB,qBACE,+YAAC;oBAAE,MAAM,OAAO;oBAAM,KAAI;8BACvB;;;;;;YAGP;QACF;IACF;IAEA,qBACE,+YAAC;QAAI,WAAW;YAAC;YAAS;SAAU,CAAC,MAAM,CAAC,SAAS,IAAI,CAAC;kBACxD,cAAA,+YAAC,kQAAA,CAAA,eAAY;YAAC,YAAY;YAAY,OAAO;;;;;;;;;;;AAGnD"}},
    {"offset": {"line": 144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 150, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/demo.ts"],"sourcesContent":["/**\r\n * Demo data used as placeholders and initial values for the blog\r\n */\r\n\r\nexport const title = \"Blog.\";\r\n\r\nexport const description = [\r\n  {\r\n    _key: \"9f1a629887fd\",\r\n    _type: \"block\",\r\n    children: [\r\n      {\r\n        _key: \"4a58edd077880\",\r\n        _type: \"span\",\r\n        marks: [],\r\n        text: \"A statically generated blog example using \",\r\n      },\r\n      {\r\n        _key: \"4a58edd077881\",\r\n        _type: \"span\",\r\n        marks: [\"ec5b66c9b1e0\"],\r\n        text: \"Next.js\",\r\n      },\r\n      {\r\n        _key: \"4a58edd077882\",\r\n        _type: \"span\",\r\n        marks: [],\r\n        text: \" and \",\r\n      },\r\n      {\r\n        _key: \"4a58edd077883\",\r\n        _type: \"span\",\r\n        marks: [\"1f8991913ea8\"],\r\n        text: \"Sanity\",\r\n      },\r\n      {\r\n        _key: \"4a58edd077884\",\r\n        _type: \"span\",\r\n        marks: [],\r\n        text: \".\",\r\n      },\r\n    ],\r\n    markDefs: [\r\n      {\r\n        _key: \"ec5b66c9b1e0\",\r\n        _type: \"link\",\r\n        href: \"https://nextjs.org/\",\r\n      },\r\n      {\r\n        _key: \"1f8991913ea8\",\r\n        _type: \"link\",\r\n        href: \"https://sanity.io/\",\r\n      },\r\n    ],\r\n    style: \"normal\",\r\n  },\r\n];\r\n\r\nexport const ogImageTitle = \"A Next.js Blog with a Native Authoring Experience\";\r\n"],"names":[],"mappings":"AAAA;;CAEC;;;;;AAEM,MAAM,QAAQ;AAEd,MAAM,cAAc;IACzB;QACE,MAAM;QACN,OAAO;QACP,UAAU;YACR;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE;gBACT,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO;oBAAC;iBAAe;gBACvB,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE;gBACT,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO;oBAAC;iBAAe;gBACvB,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,OAAO,EAAE;gBACT,MAAM;YACR;SACD;QACD,UAAU;YACR;gBACE,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;YACA;gBACE,MAAM;gBACN,OAAO;gBACP,MAAM;YACR;SACD;QACD,OAAO;IACT;CACD;AAEM,MAAM,eAAe"}},
    {"offset": {"line": 214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 220, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/api.ts"],"sourcesContent":["/**\r\n * As this file is reused in several other files, try to keep it lean and small.\r\n * Importing other npm packages here could lead to needlessly increasing the client bundle size, or end up in a server-only function that don't need it.\r\n */\r\n\r\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\r\n  if (v === undefined) {\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  return v;\r\n}\r\n\r\nexport const dataset = assertValue(\r\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\r\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_DATASET\",\r\n);\r\n\r\nexport const projectId = assertValue(\r\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\r\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID\",\r\n);\r\n\r\n/**\r\n * see https://www.sanity.io/docs/api-versioning for how versioning works\r\n */\r\nexport const apiVersion =\r\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || \"2024-02-28\";\r\n\r\n/**\r\n * Used to configure edit intent links, for Presentation Mode, as well as to configure where the Studio is mounted in the router.\r\n */\r\nexport const studioUrl = \"/studio\";\r\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AAED,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEO,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAMK,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAKzC,MAAM,YAAY"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from \"next-sanity\";\r\n\r\nimport { apiVersion, dataset, projectId, studioUrl } from \"@/sanity/lib/api\";\r\n\r\nexport const client = createClient({\r\n  projectId,\r\n  dataset,\r\n  apiVersion,\r\n  useCdn: true,\r\n  perspective: \"published\",\r\n  stega: {\r\n    studioUrl,\r\n    logger: console,\r\n    filter: (props) => {\r\n      if (props.sourcePath.at(-1) === \"title\") {\r\n        return true;\r\n      }\r\n\r\n      return props.filterDefault(props);\r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;;AAIO,MAAM,SAAS,CAAA,GAAA,mQAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,oHAAA,CAAA,YAAS;IACT,SAAA,oHAAA,CAAA,UAAO;IACP,YAAA,oHAAA,CAAA,aAAU;IACV,QAAQ;IACR,aAAa;IACb,OAAO;QACL,WAAA,oHAAA,CAAA,YAAS;QACT,QAAQ;QACR,QAAQ,CAAC;YACP,IAAI,MAAM,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS;gBACvC,OAAO;YACT;YAEA,OAAO,MAAM,aAAa,CAAC;QAC7B;IACF;AACF"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/token.ts"],"sourcesContent":["import \"server-only\";\r\n\r\nexport const token = process.env.SANITY_API_READ_TOKEN;\r\n\r\nif (!token) {\r\n  throw new Error(\"Missing SANITY_API_READ_TOKEN\");\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,QAAQ,GAAG,CAAC,qBAAqB;AAEtD,IAAI,CAAC,OAAO;IACV,MAAM,IAAI,MAAM;AAClB"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/fetch.ts"],"sourcesContent":["import type { ClientPerspective, QueryParams } from \"next-sanity\";\r\nimport { draftMode } from \"next/headers\";\r\n\r\nimport { client } from \"@/sanity/lib/client\";\r\nimport { token } from \"@/sanity/lib/token\";\r\n\r\n/**\r\n * Used to fetch data in Server Components, it has built in support for handling Draft Mode and perspectives.\r\n * When using the \"published\" perspective then time-based revalidation is used, set to match the time-to-live on Sanity's API CDN (60 seconds)\r\n * and will also fetch from the CDN.\r\n * When using the \"previewDrafts\" perspective then the data is fetched from the live API and isn't cached, it will also fetch draft content that isn't published yet.\r\n */\r\nexport async function sanityFetch<const QueryString extends string>({\r\n  query,\r\n  params = {},\r\n  perspective: _perspective,\r\n  /**\r\n   * Stega embedded Content Source Maps are used by Visual Editing by both the Sanity Presentation Tool and Vercel Visual Editing.\r\n   * The Sanity Presentation Tool will enable Draft Mode when loading up the live preview, and we use it as a signal for when to embed source maps.\r\n   * When outside of the Sanity Studio we also support the Vercel Toolbar Visual Editing feature, which is only enabled in production when it's a Vercel Preview Deployment.\r\n   */\r\n  stega: _stega,\r\n}: {\r\n  query: QueryString;\r\n  params?: QueryParams | Promise<QueryParams>;\r\n  perspective?: Omit<ClientPerspective, \"raw\">;\r\n  stega?: boolean;\r\n}) {\r\n  const perspective =\r\n    _perspective || (await draftMode()).isEnabled\r\n      ? \"previewDrafts\"\r\n      : \"published\";\r\n  const stega =\r\n    _stega ||\r\n    perspective === \"previewDrafts\" ||\r\n    process.env.VERCEL_ENV === \"preview\";\r\n  if (perspective === \"previewDrafts\") {\r\n    return client.fetch(query, await params, {\r\n      stega,\r\n      perspective: \"previewDrafts\",\r\n      // The token is required to fetch draft content\r\n      token,\r\n      // The `previewDrafts` perspective isn't available on the API CDN\r\n      useCdn: false,\r\n      // And we can't cache the responses as it would slow down the live preview experience\r\n      next: { revalidate: 0 },\r\n    });\r\n  }\r\n  return client.fetch(query, await params, {\r\n    stega,\r\n    perspective: \"published\",\r\n    // The `published` perspective is available on the API CDN\r\n    useCdn: true,\r\n    // Only enable Stega in production if it's a Vercel Preview Deployment, as the Vercel Toolbar supports Visual Editing\r\n    // When using the `published` perspective we use time-based revalidation to match the time-to-live on Sanity's API CDN (60 seconds)\r\n    next: { revalidate: 60 },\r\n  });\r\n}\r\n"],"names":[],"mappings":";;;AACA;AAEA;AACA;;;;AAQO,eAAe,YAA8C,EAClE,KAAK,EACL,SAAS,CAAC,CAAC,EACX,aAAa,YAAY,EACzB;;;;GAIC,GACD,OAAO,MAAM,EAMd;IACC,MAAM,cACJ,gBAAgB,CAAC,MAAM,CAAA,GAAA,gSAAA,CAAA,YAAS,AAAD,GAAG,EAAE,SAAS,GACzC,kBACA;IACN,MAAM,QACJ,UACA,gBAAgB,mBAChB,QAAQ,GAAG,CAAC,UAAU,KAAK;IAC7B,IAAI,gBAAgB,iBAAiB;QACnC,OAAO,uHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,OAAO,MAAM,QAAQ;YACvC;YACA,aAAa;YACb,+CAA+C;YAC/C,OAAA,sHAAA,CAAA,QAAK;YACL,iEAAiE;YACjE,QAAQ;YACR,qFAAqF;YACrF,MAAM;gBAAE,YAAY;YAAE;QACxB;IACF;IACA,OAAO,uHAAA,CAAA,SAAM,CAAC,KAAK,CAAC,OAAO,MAAM,QAAQ;QACvC;QACA,aAAa;QACb,0DAA0D;QAC1D,QAAQ;QACR,qHAAqH;QACrH,mIAAmI;QACnI,MAAM;YAAE,YAAY;QAAG;IACzB;AACF"}},
    {"offset": {"line": 332, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 338, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/queries.ts"],"sourcesContent":["import { defineQuery } from \"next-sanity\";\r\n\r\nexport const settingsQuery = defineQuery(`*[_type == \"settings\"][0]`);\r\n\r\nconst postFields = /* groq */ `\r\n  _id,\r\n  \"status\": select(_originalId in path(\"drafts.**\") => \"draft\", \"published\"),\r\n  \"title\": coalesce(title, \"Untitled\"),\r\n  \"slug\": slug.current,\r\n  excerpt,\r\n  coverImage,\r\n  \"date\": coalesce(date, _updatedAt),\r\n  \"author\": author->{\"name\": coalesce(name, \"Anonymous\"), picture},\r\n`;\r\n\r\nexport const heroQuery = defineQuery(`\r\n  *[_type == \"post\" && defined(slug.current)] | order(date desc, _updatedAt desc) [0] {\r\n    content,\r\n    ${postFields}\r\n  }\r\n`);\r\n\r\nexport const moreStoriesQuery = defineQuery(`\r\n  *[_type == \"post\" && _id != $skip && defined(slug.current)] | order(date desc, _updatedAt desc) [0...$limit] {\r\n    ${postFields}\r\n  }\r\n`);\r\n\r\nexport const postQuery = defineQuery(`\r\n  *[_type == \"post\" && slug.current == $slug] [0] {\r\n    content,\r\n    ${postFields}\r\n  }\r\n`);\r\n"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,gBAAgB,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE,CAAC,yBAAyB,CAAC;AAEpE,MAAM,aAAa,QAAQ,GAAG,CAAC;;;;;;;;;AAS/B,CAAC;AAEM,MAAM,YAAY,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;IAGlC,EAAE,WAAW;;AAEjB,CAAC;AAEM,MAAM,mBAAmB,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;IAEzC,EAAE,WAAW;;AAEjB,CAAC;AAEM,MAAM,YAAY,CAAA,GAAA,qLAAA,CAAA,cAAW,AAAD,EAAE,CAAC;;;IAGlC,EAAE,WAAW;;AAEjB,CAAC"}},
    {"offset": {"line": 374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/utils.ts"],"sourcesContent":["import createImageUrlBuilder from \"@sanity/image-url\";\r\n\r\nimport { dataset, projectId } from \"@/sanity/lib/api\";\r\n\r\nconst imageBuilder = createImageUrlBuilder({\r\n  projectId: projectId || \"\",\r\n  dataset: dataset || \"\",\r\n});\r\n\r\nexport const urlForImage = (source: any) => {\r\n  // Ensure that source image contains a valid reference\r\n  if (!source?.asset?._ref) {\r\n    return undefined;\r\n  }\r\n\r\n  return imageBuilder?.image(source).auto(\"format\").fit(\"max\");\r\n};\r\n\r\nexport function resolveOpenGraphImage(image: any, width = 1200, height = 627) {\r\n  if (!image) return;\r\n  const url = urlForImage(image)?.width(1200).height(627).fit(\"crop\").url();\r\n  if (!url) return;\r\n  return { url, alt: image?.alt as string, width, height };\r\n}\r\n\r\nexport function resolveHref(\r\n  documentType?: string,\r\n  slug?: string,\r\n): string | undefined {\r\n  switch (documentType) {\r\n    case \"post\":\r\n      return slug ? `/posts/${slug}` : undefined;\r\n    default:\r\n      console.warn(\"Invalid document type:\", documentType);\r\n      return undefined;\r\n  }\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAIA,MAAM,eAAe,CAAA,GAAA,qOAAA,CAAA,UAAqB,AAAD,EAAE;IACzC,WAAW,oHAAA,CAAA,YAAS,IAAI;IACxB,SAAS,oHAAA,CAAA,UAAO,IAAI;AACtB;AAEO,MAAM,cAAc,CAAC;IAC1B,sDAAsD;IACtD,IAAI,CAAC,QAAQ,OAAO,MAAM;QACxB,OAAO;IACT;IAEA,OAAO,cAAc,MAAM,QAAQ,KAAK,UAAU,IAAI;AACxD;AAEO,SAAS,sBAAsB,KAAU,EAAE,QAAQ,IAAI,EAAE,SAAS,GAAG;IAC1E,IAAI,CAAC,OAAO;IACZ,MAAM,MAAM,YAAY,QAAQ,MAAM,MAAM,OAAO,KAAK,IAAI,QAAQ;IACpE,IAAI,CAAC,KAAK;IACV,OAAO;QAAE;QAAK,KAAK,OAAO;QAAe;QAAO;IAAO;AACzD;AAEO,SAAS,YACd,YAAqB,EACrB,IAAa;IAEb,OAAQ;QACN,KAAK;YACH,OAAO,OAAO,CAAC,OAAO,EAAE,MAAM,GAAG;QACnC;YACE,QAAQ,IAAI,CAAC,0BAA0B;YACvC,OAAO;IACX;AACF"}},
    {"offset": {"line": 420, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 426, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/app/%28blog%29/layout.tsx"],"sourcesContent":["import \"../globals.css\";\r\n\r\nimport { SpeedInsights } from \"@vercel/speed-insights/next\";\r\nimport type { Metadata } from \"next\";\r\nimport {\r\n  VisualEditing,\r\n  toPlainText,\r\n  type PortableTextBlock,\r\n} from \"next-sanity\";\r\nimport { Inter } from \"next/font/google\";\r\nimport { draftMode } from \"next/headers\";\r\n\r\nimport AlertBanner from \"./alert-banner\";\r\nimport PortableText from \"./portable-text\";\r\n\r\nimport * as demo from \"@/sanity/lib/demo\";\r\nimport { sanityFetch } from \"@/sanity/lib/fetch\";\r\nimport { settingsQuery } from \"@/sanity/lib/queries\";\r\nimport { resolveOpenGraphImage } from \"@/sanity/lib/utils\";\r\n\r\nexport async function generateMetadata(): Promise<Metadata> {\r\n  const settings = await sanityFetch({\r\n    query: settingsQuery,\r\n    // Metadata should never contain stega\r\n    stega: false,\r\n  });\r\n  const title = settings?.title || demo.title;\r\n  const description = settings?.description || demo.description;\r\n\r\n  const ogImage = resolveOpenGraphImage(settings?.ogImage);\r\n  let metadataBase: URL | undefined = undefined;\r\n  try {\r\n    metadataBase = settings?.ogImage?.metadataBase\r\n      ? new URL(settings.ogImage.metadataBase)\r\n      : undefined;\r\n  } catch {\r\n    // ignore\r\n  }\r\n  return {\r\n    metadataBase,\r\n    title: {\r\n      template: `%s | ${title}`,\r\n      default: title,\r\n    },\r\n    description: toPlainText(description),\r\n    openGraph: {\r\n      images: ogImage ? [ogImage] : [],\r\n    },\r\n  };\r\n}\r\n\r\nconst inter = Inter({\r\n  variable: \"--font-inter\",\r\n  subsets: [\"latin\"],\r\n  display: \"swap\",\r\n});\r\n\r\nexport default async function RootLayout({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  const data = await sanityFetch({ query: settingsQuery });\r\n  const footer = data?.footer || [];\r\n  const { isEnabled: isDraftMode } = await draftMode();\r\n\r\n  return (\r\n    <html lang=\"en\" className={`${inter.variable} bg-white text-black`}>\r\n      <body>\r\n        <section className=\"min-h-screen\">\r\n          {isDraftMode && <AlertBanner />}\r\n          <main>{children}</main>\r\n          <footer className=\"bg-accent-1 border-accent-2 border-t\">\r\n            <div className=\"container mx-auto px-5\">\r\n              {footer.length > 0 ? (\r\n                <PortableText\r\n                  className=\"prose-sm text-pretty bottom-0 w-full max-w-none bg-white py-12 text-center md:py-20\"\r\n                  value={footer as PortableTextBlock[]}\r\n                />\r\n              ) : (\r\n                <div className=\"flex flex-col items-center py-28 lg:flex-row\">\r\n                  <h3 className=\"mb-10 text-center text-4xl font-bold leading-tight tracking-tighter lg:mb-0 lg:w-1/2 lg:pr-4 lg:text-left lg:text-5xl\">\r\n                    Built with Next.js.\r\n                  </h3>\r\n                  <div className=\"flex flex-col items-center justify-center lg:w-1/2 lg:flex-row lg:pl-4\">\r\n                    <a\r\n                      href=\"https://nextjs.org/docs\"\r\n                      className=\"mx-3 mb-6 border border-black bg-black py-3 px-12 font-bold text-white transition-colors duration-200 hover:bg-white hover:text-black lg:mb-0 lg:px-8\"\r\n                    >\r\n                      Read Documentation\r\n                    </a>\r\n                    <a\r\n                      href=\"https://github.com/vercel/next.js/tree/canary/examples/cms-sanity\"\r\n                      className=\"mx-3 font-bold hover:underline\"\r\n                    >\r\n                      View on GitHub\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </footer>\r\n        </section>\r\n        {isDraftMode && <VisualEditing />}\r\n        <SpeedInsights />\r\n      </body>\r\n    </html>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;;AAQA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAdA;AAAA;;;;;;;;;;;;;AAgBO,eAAe;IACpB,MAAM,WAAW,MAAM,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE;QACjC,OAAO,wHAAA,CAAA,gBAAa;QACpB,sCAAsC;QACtC,OAAO;IACT;IACA,MAAM,QAAQ,UAAU,SAAS,sHAAK,KAAK;IAC3C,MAAM,cAAc,UAAU,eAAe,sHAAK,WAAW;IAE7D,MAAM,UAAU,CAAA,GAAA,sHAAA,CAAA,wBAAqB,AAAD,EAAE,UAAU;IAChD,IAAI,eAAgC;IACpC,IAAI;QACF,eAAe,UAAU,SAAS,eAC9B,IAAI,IAAI,SAAS,OAAO,CAAC,YAAY,IACrC;IACN,EAAE,OAAM;IACN,SAAS;IACX;IACA,OAAO;QACL;QACA,OAAO;YACL,UAAU,CAAC,KAAK,EAAE,OAAO;YACzB,SAAS;QACX;QACA,aAAa,CAAA,GAAA,iOAAA,CAAA,cAAW,AAAD,EAAE;QACzB,WAAW;YACT,QAAQ,UAAU;gBAAC;aAAQ,GAAG,EAAE;QAClC;IACF;AACF;AAQe,eAAe,WAAW,EACvC,QAAQ,EAGT;IACC,MAAM,OAAO,MAAM,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE;QAAE,OAAO,wHAAA,CAAA,gBAAa;IAAC;IACtD,MAAM,SAAS,MAAM,UAAU,EAAE;IACjC,MAAM,EAAE,WAAW,WAAW,EAAE,GAAG,MAAM,CAAA,GAAA,gSAAA,CAAA,YAAS,AAAD;IAEjD,qBACE,+YAAC;QAAK,MAAK;QAAK,WAAW,GAAG,yIAAA,CAAA,UAAK,CAAC,QAAQ,CAAC,oBAAoB,CAAC;kBAChE,cAAA,+YAAC;;8BACC,+YAAC;oBAAQ,WAAU;;wBAChB,6BAAe,+YAAC,mIAAA,CAAA,UAAW;;;;;sCAC5B,+YAAC;sCAAM;;;;;;sCACP,+YAAC;4BAAO,WAAU;sCAChB,cAAA,+YAAC;gCAAI,WAAU;0CACZ,OAAO,MAAM,GAAG,kBACf,+YAAC,oIAAA,CAAA,UAAY;oCACX,WAAU;oCACV,OAAO;;;;;yDAGT,+YAAC;oCAAI,WAAU;;sDACb,+YAAC;4CAAG,WAAU;sDAAwH;;;;;;sDAGtI,+YAAC;4CAAI,WAAU;;8DACb,+YAAC;oDACC,MAAK;oDACL,WAAU;8DACX;;;;;;8DAGD,+YAAC;oDACC,MAAK;oDACL,WAAU;8DACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBASZ,6BAAe,+YAAC,qXAAA,CAAA,gBAAa;;;;;8BAC9B,+YAAC,+YAAA,CAAA,gBAAa;;;;;;;;;;;;;;;;AAItB"}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}