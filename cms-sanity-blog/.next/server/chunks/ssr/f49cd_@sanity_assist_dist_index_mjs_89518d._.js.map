{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.mjs","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/fixedListenQuery.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/useListeningQuery.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/types.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/helpers/typeUtils.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/helpers/assistSupported.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/schemas/serialize/schemaUtils.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/schemas/serialize/serializeSchema.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/schemas/serialize/SchemTypeTool.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/translate/paths.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/constants.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/form/constants.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/form/DocumentForm.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/AssistTypeContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/helpers/ids.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/hooks/useDocumentState.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/hooks/useStudioAssistDocument.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/helpers/misc.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/useApiClient.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistLayout/AiAssistanceConfigContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistLayout/RunInstructionProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/RequestRunInstructionProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/helpers/conditionalMembers.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/onboarding/InspectorOnboarding.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/onboarding/onboardingStore.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/SelectedFieldContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistInspector/helpers.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistInspector/FieldAutocomplete.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/components/TimeAgo.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistInspector/InstructionTaskHistoryButton.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistInspector/AssistInspector.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistInspector/constants.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistInspector/index.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/components/AssistFeatureBadge.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/onboarding/FieldActionsOnboarding.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/onboarding/FirstAssistedPathProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/components/FadeInContent.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/node_modules/%40sanity/color/dist/index.js","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/presence/AssistAvatar.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/presence/AiFieldPresence.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/AssistDocumentContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/presence/useAssistPresence.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistFormComponents/AssistField.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/helpers.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/useRegionRects.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/ConnectorRegion.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/ConnectorsStoreContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/useConnectorsStore.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/ConnectFromRegion.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/ConnectorsStore.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/ConnectorsProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/connector/mapConnectorToLine.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistConnectors/draw/arrowPath.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistConnectors/draw/connectorPath.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistConnectors/ConnectorPath.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistConnectors/AssistConnectorsOverlay.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/translate/getLanguageParams.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/translate/languageStore.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/translate/FieldTranslationProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistLayout/AssistLayout.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/components/SafeValueInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistFormComponents/AssistFormBlock.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistFormComponents/AssistItem.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/BackToInstructionsLink.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/AssistDocumentForm.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistFormComponents/AssistInlineFormBlock.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/FieldRefPreview.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/generic/HiddenFieldTitle.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/appearance/IconInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/appearance/InstructionVisibility.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/FieldRefInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/helpers.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/InstructionInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/InstructionOutputField.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/InstructionOutputInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/node_modules/get-random-values-esm/index.mjs","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/_lib/randomKey.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/instruction/PromptInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/InstructionsArrayField.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/components/InstructionsArrayInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/components/HideReferenceChangedBannerInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/schemas/contextDocumentSchema.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/schemas/assistDocumentSchema.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/schemas/index.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/hooks/useAssistDocumentContextValue.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/helpers/useAssistSupported.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/translate/translateActions.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/components/ImageContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/fieldActions/generateCaptionActions.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/fieldActions/generateImageActions.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/fieldActions/PrivateIcon.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/fieldActions/assistFieldActions.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/AssistDocumentContextProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/hooks/useInstructionToaster.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/assistDocument/AssistDocumentInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/presence/AssistDocumentPresence.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bassist%403.0.9_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bmutator%403.67.1_react-dom%4018.3.1_rea_wsvpi63xybiwitbdfsbv7t3lhm/node_modules/%40sanity/assist/src/plugin.tsx"],"sourcesContent":["import {SanityClient} from '@sanity/client'\nimport {defer, delay, merge, Observable, of, partition, switchMap, throwError} from 'rxjs'\nimport {filter, mergeMap, share, take} from 'rxjs/operators'\nimport {exhaustMapToWithTrailing} from 'rxjs-exhaustmap-with-trailing'\nimport {MutationEvent, ReconnectEvent, WelcomeEvent} from 'sanity'\n\n/** @internal */\nexport type ListenQueryParams = Record<string, string | number | boolean | string[]>\n\n/** @beta */\nexport interface ListenQueryOptions {\n  tag?: string\n  apiVersion?: string\n  throttleTime?: number\n  transitions?: ('update' | 'appear' | 'disappear')[]\n}\n\nconst fetch = (\n  client: SanityClient,\n  query: string,\n  params: ListenQueryParams,\n  options: ListenQueryOptions,\n) =>\n  defer(() =>\n    // getVersionedClient(options.apiVersion)\n    client.observable.fetch(query, params, {\n      tag: options.tag,\n      filterResponse: true,\n    }),\n  )\n\nconst listen = (\n  client: SanityClient,\n  query: string,\n  params: ListenQueryParams,\n  options: ListenQueryOptions,\n) =>\n  defer(() =>\n    // getVersionedClient(options.apiVersion)\n    client.listen(query, params, {\n      events: ['welcome', 'mutation', 'reconnect'],\n      includeResult: false,\n      visibility: 'query',\n      tag: options.tag,\n    }),\n  ) as Observable<ReconnectEvent | WelcomeEvent | MutationEvent>\n\nfunction isWelcomeEvent(\n  event: MutationEvent | ReconnectEvent | WelcomeEvent,\n): event is WelcomeEvent {\n  return event.type === 'welcome'\n}\n\n/** @internal */\nexport const listenQuery = (\n  client: SanityClient,\n  query: string | {fetch: string; listen: string},\n  params: ListenQueryParams = {},\n  options: ListenQueryOptions = {},\n) => {\n  const fetchQuery = typeof query === 'string' ? query : query.fetch\n  const listenerQuery = typeof query === 'string' ? query : query.listen\n\n  const fetchOnce$ = fetch(client, fetchQuery, params, options)\n\n  const events$ = listen(client, listenerQuery, params, options).pipe(\n    mergeMap((ev, i) => {\n      const isFirst = i === 0\n      if (isFirst && !isWelcomeEvent(ev)) {\n        // if the first event is not welcome, it is most likely a reconnect and\n        // if it's not a reconnect something is very wrong\n        return throwError(\n          new Error(\n            ev.type === 'reconnect'\n              ? 'Could not establish EventSource connection'\n              : `Received unexpected type of first event \"${ev.type}\"`,\n          ),\n        )\n      }\n      return of(ev)\n    }),\n    share(),\n  )\n\n  const [welcome$, mutationAndReconnect$] = partition(events$, isWelcomeEvent)\n  const isRelevantEvent = (event: MutationEvent | ReconnectEvent | WelcomeEvent): boolean => {\n    if (!options.transitions || event.type !== 'mutation') {\n      return true\n    }\n\n    return options.transitions.includes(event.transition)\n  }\n\n  return merge(\n    welcome$.pipe(take(1)),\n    mutationAndReconnect$.pipe(\n      filter(isRelevantEvent),\n      switchMap((event) => merge(of(event), of(event).pipe(delay(options.throttleTime || 1000)))),\n    ),\n  ).pipe(exhaustMapToWithTrailing(fetchOnce$))\n}\n","import {useEffect, useRef, useState} from 'react'\nimport isEqual from 'react-fast-compare'\nimport {catchError, distinctUntilChanged} from 'rxjs/operators'\nimport {ListenQueryOptions, useClient} from 'sanity'\n\nimport {listenQuery} from './fixedListenQuery'\n\ntype Params = Record<string, string | number | boolean | string[]>\n\ntype ReturnShape<T> = {\n  loading: boolean\n  error: boolean\n  data: T | null\n}\n\ntype Observable = {\n  unsubscribe: () => void\n}\n\nconst DEFAULT_PARAMS = {}\nconst DEFAULT_OPTIONS: ListenQueryOptions = {apiVersion: `v2022-05-09`}\n\nexport function useListeningQuery<T>(\n  query: string,\n  params: Params = DEFAULT_PARAMS,\n  options: ListenQueryOptions = DEFAULT_OPTIONS,\n): ReturnShape<T> {\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState(false)\n  const [data, setData] = useState<T | null>(null)\n  const subscription = useRef<null | Observable>(null)\n\n  const client = useClient({apiVersion: `v2022-05-09`})\n\n  useEffect(() => {\n    if (query) {\n      subscription.current = listenQuery(client, query, params, options)\n        .pipe(\n          distinctUntilChanged(isEqual),\n          catchError((err) => {\n            console.error(err)\n            setError(err)\n            setLoading(false)\n            setData(null)\n\n            return err\n          }),\n        )\n        .subscribe((documents) => {\n          setData((current) => (isEqual(current, documents) ? current : documents))\n          setLoading(false)\n          setError(false)\n        })\n    }\n\n    return () => {\n      return subscription.current ? subscription.current.unsubscribe() : undefined\n    }\n  }, [query, params, options, client])\n\n  return {loading, error, data}\n}\n","import {SanityDocument} from 'sanity'\nimport {PortableTextBlock, PortableTextMarkDefinition, PortableTextSpan} from '@portabletext/types'\n\n//id prefixes\nexport const assistDocumentIdPrefix = 'sanity.assist.schemaType.'\nexport const assistDocumentStatusIdPrefix = 'sanity.assist.status.'\nexport const assistSchemaIdPrefix = 'sanity.assist.schema.'\n\n// type names\nexport const assistDocumentTypeName = 'sanity.assist.schemaType.annotations' as const\nexport const assistFieldTypeName = 'sanity.assist.schemaType.field' as const\nexport const instructionTypeName = 'sanity.assist.instruction' as const\nexport const promptTypeName = 'sanity.assist.instruction.prompt' as const\n\nexport const userInputTypeName = 'sanity.assist.instruction.userInput' as const\nexport const instructionContextTypeName = 'sanity.assist.instruction.context' as const\nexport const fieldReferenceTypeName = 'sanity.assist.instruction.fieldRef' as const\n\n// user-facing type. Intentionally does not have sanity. prefix\nexport const contextDocumentTypeName = 'assist.instruction.context' as const\n\nexport const assistTasksStatusTypeName = 'sanity.assist.task.status' as const\nexport const instructionTaskTypeName = 'sanity.assist.instructionTask' as const\nexport const fieldPresenceTypeName = 'sanity.assist.instructionTask.presence' as const\n\nexport const assistSerializedTypeName = 'sanity.assist.serialized.type' as const\nexport const assistSerializedFieldTypeName = 'sanity.assist.serialized.field' as const\n\nexport const outputFieldTypeName = 'sanity.assist.output.field' as const\nexport const outputTypeTypeName = 'sanity.assist.output.type' as const\n\n//url params\nexport const inspectParam = 'inspect' as const\nexport const fieldPathParam = 'pathKey' as const\nexport const instructionParam = 'instruction' as const\n\n// other constants\nexport const documentRootKey = '<document>'\n\nexport type SerializedSchemaMember = Omit<SerializedSchemaType, 'name' | '_type'> & {\n  _type?: typeof assistSerializedFieldTypeName\n  name?: string\n}\n\nexport interface SerializedSchemaType {\n  _type?: typeof assistSerializedTypeName\n  _id?: string\n  type: string\n  name: string\n  title?: string\n  fields?: SerializedSchemaMember[]\n  of?: SerializedSchemaMember[]\n  to?: SerializedSchemaMember[]\n  annotations?: SerializedSchemaMember[]\n  inlineOf?: SerializedSchemaMember[]\n  values?: string[] | {value: string; title?: string}[]\n  hidden?: boolean | 'function'\n  readOnly?: boolean | 'function'\n  options?: {\n    /** equivalent to options.aiAssist.imageDescriptionField - not renamed in the api for backwards compatability */\n    imagePromptField?: string\n    embeddingsIndex?: string\n  }\n}\n\nexport interface AssistDocument extends SanityDocument {\n  fields?: AssistField[]\n  instructions?: StudioInstruction[]\n}\n\nexport interface PresetInstruction {\n  _key: string\n  prompt?: PromptTextBlock[]\n\n  title?: string\n  /**\n   * String key from @sanity/icons IconMap\n   */\n  icon?: string\n\n  /**\n   * Type/field filter\n   */\n  output?: (OutputFieldItem | OutputTypeItem)[]\n}\n\nexport interface PresetField {\n  path?: string\n  instructions?: PresetInstruction[]\n}\n\nexport interface AssistPreset {\n  fields?: PresetField[]\n}\n\nexport interface SanityAssistDocument {\n  _id: string\n  _type: typeof assistDocumentTypeName\n  fields?: StudioAssistField[]\n}\n\nexport interface StudioAssistDocument extends SanityAssistDocument {\n  // added after loading\n  tasks?: InstructionTask[]\n}\n\nexport interface AssistField {\n  _key: string\n  _type: typeof assistFieldTypeName\n  path?: string\n  instructions?: StudioInstruction[]\n}\n\nexport interface StudioAssistField {\n  _key: string\n  path?: string\n  instructions?: StudioInstruction[]\n\n  // added\n  tasks?: InstructionTask[]\n}\n\nexport interface FieldRef extends PortableTextMarkDefinition {\n  _type: typeof fieldReferenceTypeName\n  path?: string\n}\n\nexport interface ContextBlock {\n  _type: typeof instructionContextTypeName\n  reference?: {\n    _type: 'reference'\n    _ref?: string\n  }\n}\n\nexport interface UserInputBlock {\n  _type: typeof userInputTypeName\n  _key: string\n  message?: string\n  description?: string\n}\n\nexport type InlinePromptBlock = PortableTextSpan | FieldRef | UserInputBlock | ContextBlock\nexport type PromptTextBlock = Omit<\n  PortableTextBlock<never, InlinePromptBlock, 'normal', never>,\n  '_type'\n> & {_type: 'block'}\n\nexport type PromptBlock = PromptTextBlock | FieldRef | ContextBlock | UserInputBlock\n\nexport interface AiPresence {\n  _key: string\n  _type: typeof fieldPresenceTypeName\n  path?: string\n  started?: string\n}\n\nexport type TaskEndedReason = 'success' | 'error' | 'aborted' | 'timeout'\n\nexport interface InstructionTask {\n  _key: string\n  _type: typeof instructionTaskTypeName\n  instructionKey?: string\n  title?: string\n  path?: string\n  started?: string\n  updated?: string\n  ended?: string\n  message?: string\n  reason?: TaskEndedReason\n  presence?: AiPresence[]\n  startedByUserId?: string\n\n  //added by studio\n  // eslint-disable-next-line no-use-before-define\n  instruction?: StudioInstruction\n}\n\nexport interface StudioInstruction {\n  _key: string\n  _type: typeof instructionTypeName\n  prompt?: PromptBlock[]\n\n  icon?: string\n  userId?: string\n  title?: string\n  placeholder?: string\n  output?: (OutputFieldItem | OutputTypeItem)[]\n\n  //added after query / synthetic fields\n  tasks?: InstructionTask[]\n}\n\nexport interface AssistTasksStatus {\n  _id: string\n  _type: typeof assistTasksStatusTypeName\n  tasks?: InstructionTask[]\n}\n\nexport interface AssistInspectorRouteParams {\n  [inspectParam]?: string\n  [fieldPathParam]?: string\n  [instructionParam]?: string\n}\n\nexport interface OutputFieldItem {\n  _type: typeof outputFieldTypeName\n  _key: string\n  //path relative to the field the instruction is for (same as _key)\n  relativePath?: string\n}\n\nexport interface OutputTypeItem {\n  _type: typeof outputTypeTypeName\n  _key: string\n  /* array item type name */\n  type?: string\n  //path relative to the array-field the instruction is for, can be empty string (the array itself, same as _key)\n  relativePath?: string\n}\n","import {ArraySchemaType, ImageOptions, SchemaType} from 'sanity'\n\nexport function isPortableTextArray(type: ArraySchemaType) {\n  return type.of.find((t) => isType(t, 'block'))\n}\n\nexport function isType(schemaType: SchemaType, typeName: string): boolean {\n  if (schemaType.name === typeName) {\n    return true\n  }\n  if (!schemaType.type) {\n    return false\n  }\n  return isType(schemaType.type, typeName)\n}\n\nexport function isImage(schemaType: SchemaType) {\n  return isType(schemaType, 'image')\n}\n\nexport function getDescriptionFieldOption(schemaType: SchemaType | undefined): string | undefined {\n  if (!schemaType) {\n    return undefined\n  }\n  const descriptionField = (schemaType.options as ImageOptions)?.aiAssist?.imageDescriptionField\n  if (descriptionField) {\n    return descriptionField\n  }\n  return getDescriptionFieldOption(schemaType.type)\n}\n\nexport function getImageInstructionFieldOption(\n  schemaType: SchemaType | undefined,\n): string | undefined {\n  if (!schemaType) {\n    return undefined\n  }\n  const imageInstructionField = (schemaType.options as ImageOptions)?.aiAssist\n    ?.imageInstructionField\n  if (imageInstructionField) {\n    return imageInstructionField\n  }\n  return getImageInstructionFieldOption(schemaType.type)\n}\n","import {ReferenceOptions, SchemaType} from 'sanity'\n\nimport {AssistOptions} from '../schemas/typeDefExtensions'\nimport {isType} from './typeUtils'\n\nexport function isSchemaAssistEnabled(type: SchemaType) {\n  return !(type.options as AssistOptions | undefined)?.aiAssist?.exclude\n}\n\nexport function isAssistSupported(type: SchemaType) {\n  if (!isSchemaAssistEnabled(type)) {\n    return false\n  }\n\n  if (isDisabled(type)) {\n    return false\n  }\n\n  if (type.jsonType === 'array') {\n    const unsupportedArray = type.of.every((t) => isDisabled(t))\n    return !unsupportedArray\n  }\n\n  if (type.jsonType === 'object') {\n    const unsupportedObject = type.fields.every((field) => isDisabled(field.type))\n    return !unsupportedObject\n  }\n  return true\n}\n\nfunction isDisabled(type: SchemaType) {\n  return !isSchemaAssistEnabled(type) || isUnsupportedType(type)\n}\n\nfunction isUnsupportedType(type: SchemaType) {\n  return (\n    type.jsonType === 'number' ||\n    type.name === 'sanity.imageCrop' ||\n    type.name === 'sanity.imageHotspot' ||\n    (isType(type, 'reference') &&\n      !(type?.options as ReferenceOptions)?.aiAssist?.embeddingsIndex) ||\n    isType(type, 'crossDatasetReference') ||\n    isType(type, 'slug') ||\n    isType(type, 'url') ||\n    isType(type, 'date') ||\n    isType(type, 'datetime') ||\n    isType(type, 'file')\n  )\n}\n","import {assistSerializedFieldTypeName, assistSerializedTypeName} from '../../types'\n\nexport const hiddenTypes = [\n  'any',\n  'array',\n  'block',\n  'boolean',\n  'crossDatasetReference',\n  'date',\n  'datetime',\n  'document',\n  'email',\n  'file',\n  'image',\n  'number',\n  'object',\n  'reference',\n  'span',\n  'string',\n  'text',\n  'url',\n  'slug',\n  'geopoint',\n  'sanity.assetSourceData',\n  'sanity.imageAsset',\n  'sanity.fileAsset',\n  'sanity.imageCrop',\n  'sanity.imageHotspot',\n  'sanity.imageMetadata',\n  'sanity.imageDimensions',\n  'sanity.imagePalette',\n  'sanity.imagePaletteSwatch',\n\n  assistSerializedTypeName,\n  assistSerializedFieldTypeName,\n  'sanity-agent.job.document',\n]\n","import {\n  ArraySchemaType,\n  ImageOptions,\n  isArraySchemaType,\n  ObjectSchemaType,\n  ReferenceOptions,\n  ReferenceSchemaType,\n  Schema,\n  SchemaType,\n  typed,\n} from 'sanity'\n\nimport {isAssistSupported} from '../../helpers/assistSupported'\nimport {isType} from '../../helpers/typeUtils'\nimport {\n  assistSchemaIdPrefix,\n  assistSerializedFieldTypeName,\n  assistSerializedTypeName,\n  SerializedSchemaMember,\n  SerializedSchemaType,\n} from '../../types'\nimport {hiddenTypes} from './schemaUtils'\n\ninterface Options {\n  leanFormat?: boolean\n}\n\nconst inlineTypes = ['document', 'object', 'image', 'file']\n\nexport function serializeSchema(schema: Schema, options?: Options): SerializedSchemaType[] {\n  const list = schema\n    .getTypeNames()\n    .filter((t) => !(hiddenTypes.includes(t) || t.startsWith('sanity.')))\n    .map((t) => schema.get(t))\n    .filter((t): t is SchemaType => !!t)\n    // because a field can override exclude at the type level, we have to also serialize excluded types\n    // so don't do this: .filter((t) => isAssistSupported(t))\n    .map((t) => getSchemaStub(t, schema, options))\n    .filter((t) => {\n      if ('to' in t && t.to && !t.to.length) {\n        return false\n      }\n      if ('of' in t && t.of && !t.of.length) {\n        return false\n      }\n      if ('fields' in t && t.fields && !t.fields.length) {\n        return false\n      }\n      return true\n    })\n  list.sort((a, b) => (a?.name ?? '').localeCompare(b?.name ?? ''))\n  return list\n}\n\nfunction getSchemaStub(\n  schemaType: SchemaType,\n  schema: Schema,\n  options?: Options,\n): SerializedSchemaType {\n  if (!schemaType.type?.name) {\n    console.error('Missing type name', schemaType.type)\n    throw new Error('Type is missing name!')\n  }\n  const baseSchema: SerializedSchemaType = {\n    // we dont need type or id when we send using POST, so leave these out to save bandwidth\n    ...(options?.leanFormat\n      ? {}\n      : {_id: `${assistSchemaIdPrefix}${schemaType.name}`, _type: assistSerializedTypeName}),\n    name: schemaType.name,\n    title: schemaType.title,\n    type: schemaType.type.name,\n    ...getBaseFields(schema, schemaType, schemaType.type.name, options),\n  }\n\n  return removeUndef(baseSchema)\n}\n\nfunction getBaseFields(\n  schema: Schema,\n  type: SchemaType,\n  typeName: string,\n  options: Options | undefined,\n) {\n  const schemaOptions: SerializedSchemaType['options'] = removeUndef({\n    imagePromptField: (type.options as ImageOptions)?.aiAssist?.imageInstructionField,\n    embeddingsIndex: (type.options as ReferenceOptions)?.aiAssist?.embeddingsIndex,\n  })\n  return removeUndef({\n    options: Object.keys(schemaOptions).length ? schemaOptions : undefined,\n    values: Array.isArray(type?.options?.list)\n      ? type?.options?.list.map((v: string | {value: string; title: string}) =>\n          typeof v === 'string' ? v : (v.value ?? `${v.title}`),\n        )\n      : undefined,\n    of: 'of' in type && typeName === 'array' ? arrayOf(type, schema, options) : undefined,\n    to:\n      'to' in type && typeName === 'reference'\n        ? refToTypeNames(type as ReferenceSchemaType)\n        : undefined,\n    fields:\n      'fields' in type && inlineTypes.includes(typeName)\n        ? serializeFields(schema, type, options)\n        : undefined,\n    annotations:\n      typeName === 'block' && 'fields' in type\n        ? serializeAnnotations(type, schema, options)\n        : undefined,\n    inlineOf:\n      typeName === 'block' && 'fields' in type\n        ? serializeInlineOf(type, schema, options)\n        : undefined,\n    hidden:\n      typeof type.hidden === 'function' ? ('function' as const) : type.hidden ? true : undefined,\n    readOnly:\n      typeof type.readOnly === 'function'\n        ? ('function' as const)\n        : type.readOnly\n          ? true\n          : undefined,\n  })\n}\n\nfunction serializeFields(\n  schema: Schema,\n  schemaType: ObjectSchemaType,\n  options: Options | undefined,\n) {\n  const fields = schemaType.fieldsets\n    ? schemaType.fieldsets.flatMap((fs) =>\n        fs.single\n          ? fs.field\n          : fs.fields.map((f) => ({\n              ...f,\n              type: {\n                ...f.type,\n                // if fieldset is (conditionally) hidden, the field must be considered the same way\n                // ie, if the field does not show up in conditionalMembers, it is hidden\n                // regardless of weather or not it is the field function or the fieldset function that hides it\n                hidden:\n                  typeof fs.hidden === 'function' ? fs.hidden : fs.hidden ? true : f.type.hidden,\n              },\n            })),\n      )\n    : schemaType.fields\n\n  return fields\n    .filter((f) => !['sanity.imageHotspot', 'sanity.imageCrop'].includes(f.type?.name ?? ''))\n    .filter((f) => isAssistSupported(f.type))\n    .map((field) => serializeMember(schema, field.type, field.name, options))\n}\n\nfunction serializeMember(\n  schema: Schema,\n  type: SchemaType,\n  name: string,\n  options: Options | undefined,\n): SerializedSchemaMember {\n  const typeNameExists = !!schema.get(type?.name)\n  const typeName = typeNameExists ? type.name : (type.type?.name ?? '')\n  return removeUndef({\n    ...(options?.leanFormat ? {} : {_type: assistSerializedFieldTypeName}),\n    name: name,\n    type: typeName,\n    title: type.title,\n    ...getBaseFields(schema, type, typeName, options),\n  })\n}\n\nfunction serializeInlineOf(\n  blockSchemaType: ObjectSchemaType,\n  schema: Schema,\n  options: Options | undefined,\n): SerializedSchemaMember[] | undefined {\n  const childrenField = blockSchemaType.fields.find((f) => f.name === 'children')\n  const childrenType = childrenField?.type\n  if (!childrenType || !isArraySchemaType(childrenType)) {\n    return undefined\n  }\n  return arrayOf(\n    {\n      ...childrenType,\n      of: childrenType.of.filter((t) => !isType(t, 'span')),\n    },\n    schema,\n    options,\n  )\n}\n\nfunction serializeAnnotations(\n  blockSchemaType: ObjectSchemaType,\n  schema: Schema,\n  options: Options | undefined,\n): SerializedSchemaMember[] | undefined {\n  const markDefs = blockSchemaType.fields.find((f) => f.name === 'markDefs')\n  const marksType = markDefs?.type\n  if (!marksType || !isArraySchemaType(marksType)) {\n    return undefined\n  }\n  return arrayOf(marksType, schema, options)\n}\n\nfunction arrayOf(\n  arrayType: ArraySchemaType,\n  schema: Schema,\n  options: Options | undefined,\n): SerializedSchemaMember[] {\n  return arrayType.of\n    .filter((type) => isAssistSupported(type))\n    .map((t) => {\n      return serializeMember(schema, t, t.name, options)\n    })\n}\n\nfunction refToTypeNames(type: ReferenceSchemaType) {\n  return type.to.map((t) => ({\n    type: typed<string>(t.name),\n  }))\n}\n\nfunction removeUndef<T extends Record<string, any>>(obj: T): T {\n  Object.keys(obj).forEach((key) => (obj[key] === undefined ? delete obj[key] : {}))\n  return obj\n}\n","import {SyncIcon} from '@sanity/icons'\nimport {Box, Button, Card, Flex, Label, Spinner, Stack} from '@sanity/ui'\nimport {useCallback, useMemo, useState} from 'react'\nimport {useClient, useSchema} from 'sanity'\n\nimport {useListeningQuery} from '../../_lib/useListeningQuery'\nimport {assistSerializedTypeName, SerializedSchemaType} from '../../types'\nimport {serializeSchema} from './serializeSchema'\n\nconst NO_DATA: SerializedSchemaType[] = []\n\nconst defaultTitle = 'Sync schema'\n\nexport function SchemaTypeTool() {\n  const schema = useSchema()\n  const client = useClient({apiVersion: '2023-01-01'})\n  const [saving, setSaving] = useState(false)\n  const [syncTitle, setSyncTitle] = useState(defaultTitle)\n\n  const {data} = useListeningQuery<SerializedSchemaType[]>('*[_type==$type] | order(_type)', {\n    type: assistSerializedTypeName,\n  })\n\n  const types = useMemo(() => {\n    return serializeSchema(schema)\n  }, [schema])\n\n  const storeTypes = useCallback(() => {\n    setSaving(true)\n    let canSave = true\n    async function store() {\n      setSyncTitle(`Syncing 0/${types.length}`)\n      const transaction = client.transaction()\n      for (let i = 0; i < types.length; i++) {\n        if (!canSave) {\n          break\n        }\n        const type = types[i]\n        await transaction.createOrReplace(type as Required<typeof type>)\n        if (i > 0 && i % 50 === 0) {\n          await transaction.commit()\n          transaction.reset()\n          setSyncTitle(`Syncing ${i}/${types.length}`)\n        }\n      }\n      await transaction.commit()\n    }\n    store()\n      .catch(console.error)\n      .finally(() => {\n        setSaving(false)\n        setSyncTitle(defaultTitle)\n      })\n    return () => {\n      canSave = false\n      setSaving(false)\n      setSyncTitle(defaultTitle)\n    }\n  }, [types, client, setSaving, setSyncTitle])\n\n  return (\n    <Card padding={4} overflow=\"auto\" style={{height: 'calc(100vh - 81px)'}}>\n      <Stack space={4}>\n        <Box>\n          <Button\n            icon={saving ? <Spinner style={{marginTop: 5}} /> : SyncIcon}\n            text={syncTitle}\n            disabled={saving}\n            onClick={storeTypes}\n          />\n        </Box>\n        <Flex gap={2}>\n          <Stack space={2}>\n            <Label>Studio schema</Label>\n            <ul>\n              {types.map((type) => (\n                <li key={type.name}>\n                  <SchemaEntry schemaStub={type} />\n                </li>\n              ))}\n            </ul>\n          </Stack>\n\n          <Stack space={2}>\n            <Label>Stored schema</Label>\n            <ul>\n              {(data ?? NO_DATA).map((type) => (\n                <li key={type.name}>\n                  <SchemaEntry schemaStub={type} />\n                </li>\n              ))}\n            </ul>\n          </Stack>\n        </Flex>\n      </Stack>\n    </Card>\n  )\n}\n\nfunction SchemaEntry({schemaStub}: {schemaStub: SerializedSchemaType}) {\n  const out = useMemo(() => JSON.stringify(schemaStub, null, 2), [schemaStub])\n  return <pre>{out}</pre>\n}\n","import {extractWithPath} from '@sanity/mutator'\nimport {\n  isDocumentSchemaType,\n  isKeySegment,\n  type ObjectSchemaType,\n  type Path,\n  pathToString,\n  type SanityDocumentLike,\n} from 'sanity'\n\nimport type {DocumentMember, TranslationOutput, TranslationOutputsFunction} from './types'\n\nexport interface FieldLanguageMap {\n  inputLanguageId: string\n  inputPath: Path\n  outputs: TranslationOutput[]\n}\n\nconst MAX_DEPTH = 6\n\nexport function getDocumentMembersFlat(doc: SanityDocumentLike, schemaType: ObjectSchemaType) {\n  if (!isDocumentSchemaType(schemaType)) {\n    console.error(`Schema type is not a document`)\n    return []\n  }\n\n  return extractPaths(doc, schemaType, [], MAX_DEPTH)\n}\n\nfunction extractPaths(\n  doc: SanityDocumentLike,\n  schemaType: ObjectSchemaType,\n  path: Path,\n  maxDepth: number,\n): DocumentMember[] {\n  if (path.length >= maxDepth) {\n    return []\n  }\n\n  return schemaType.fields.reduce<DocumentMember[]>((acc, field) => {\n    const fieldPath = [...path, field.name]\n    const fieldSchema = field.type\n    const {value} = extractWithPath(pathToString(fieldPath), doc)[0] ?? {}\n    if (!value) {\n      return acc\n    }\n\n    const thisFieldWithPath: DocumentMember = {\n      path: fieldPath,\n      name: field.name,\n      schemaType: fieldSchema,\n      value,\n    }\n\n    if (fieldSchema.jsonType === 'object') {\n      const innerFields = extractPaths(doc, fieldSchema, fieldPath, maxDepth)\n\n      return [...acc, thisFieldWithPath, ...innerFields]\n    } else if (\n      fieldSchema.jsonType === 'array' &&\n      fieldSchema.of.length &&\n      fieldSchema.of.some((item) => 'fields' in item)\n    ) {\n      const {value: arrayValue} = extractWithPath(pathToString(fieldPath), doc)[0] ?? {}\n\n      let arrayPaths: DocumentMember[] = []\n      if ((arrayValue as any)?.length) {\n        for (const item of arrayValue as any[]) {\n          const itemPath = [...fieldPath, {_key: item._key}]\n          let itemSchema = fieldSchema.of.find((t) => t.name === item._type)\n          if (!item._type) {\n            itemSchema = fieldSchema.of[0]\n            console.warn(\n              'Array item is missing _type - using the first defined type in the array.of schema',\n              {\n                itemPath,\n                item,\n                itemSchema,\n              },\n            )\n          }\n          if (item._key && itemSchema) {\n            const innerFields = extractPaths(\n              doc,\n              itemSchema as ObjectSchemaType,\n              itemPath,\n              maxDepth,\n            )\n            const arrayMember = {\n              path: itemPath,\n              name: item._key,\n              schemaType: itemSchema,\n              value: item,\n            }\n            arrayPaths = [...arrayPaths, arrayMember, ...innerFields]\n          }\n        }\n      }\n\n      return [...acc, thisFieldWithPath, ...arrayPaths]\n    }\n\n    return [...acc, thisFieldWithPath]\n  }, [])\n}\n\n/**\n * Default implementation for plugin config `translate.field.translationOutputs`\n *\n * @see FieldTranslationConfig#translationOutputs\n */\nexport const defaultLanguageOutputs: TranslationOutputsFunction = function (\n  member,\n  enclosingType,\n  translateFromLanguageId,\n  translateToLanguageIds,\n) {\n  if (\n    member.schemaType.jsonType === 'object' &&\n    member.schemaType.name.startsWith('internationalizedArray')\n  ) {\n    const pathEnd = member.path.slice(-1)\n\n    const language = isKeySegment(pathEnd[0]) ? pathEnd[0]._key : null\n    return language === translateFromLanguageId\n      ? translateToLanguageIds.map((translateToId) => ({\n          id: translateToId,\n          outputPath: [...member.path.slice(0, -1), {_key: translateToId}],\n        }))\n      : undefined\n  }\n\n  if (enclosingType.jsonType === 'object' && enclosingType.name.startsWith('locale')) {\n    return translateFromLanguageId === member.name\n      ? translateToLanguageIds.map((translateToId) => ({\n          id: translateToId,\n          outputPath: [...member.path.slice(0, -1), translateToId],\n        }))\n      : undefined\n  }\n\n  return undefined\n}\n\nexport function getFieldLanguageMap(\n  documentSchema: ObjectSchemaType,\n  documentMembers: DocumentMember[],\n  translateFromLanguageId: string,\n  outputLanguageIds: string[],\n  langFn: TranslationOutputsFunction,\n): FieldLanguageMap[] {\n  const translationMaps: FieldLanguageMap[] = []\n  for (const member of documentMembers) {\n    const parentPath = member.path.slice(0, -1)\n    const enclosingType =\n      documentMembers.find((m) => pathToString(m.path) === pathToString(parentPath))?.schemaType ??\n      documentSchema\n\n    const translations = langFn(\n      member,\n      enclosingType,\n      translateFromLanguageId,\n      outputLanguageIds,\n    )?.filter((translation) => translation.id !== translateFromLanguageId)\n\n    if (translations) {\n      translationMaps.push({\n        inputLanguageId: translateFromLanguageId,\n        inputPath: member.path,\n        outputs: translations,\n      })\n    }\n  }\n\n  return translationMaps\n}\n","import {minutesToMilliseconds} from 'date-fns'\n\nexport const releaseAnnouncementUrl =\n  'https://www.sanity.io/blog/sanity-ai-assist-announcement?utm_source=sanity-assist-plugin&utm_medium=organic_social&utm_campaign=ai-assist&utm_content='\n\nexport const instructionGuideUrl =\n  'https://sanity.io/guides/getting-started-with-ai-assist-instructions?utm_source=sanity-assist-plugin&utm_medium=organic_social&utm_campaign=ai-assist&utm_content='\n\nexport const giveFeedbackUrl = 'https://forms.gle/Kwz7CThxGeA2GiEU8'\n\nexport const salesUrl =\n  'https://www.sanity.io/contact/sales?utm_source=sanity-assist-plugin&utm_medium=organic_social&utm_campaign=ai-assist&utm_content='\n\nexport const packageName = '@sanity/assist'\n\nexport const pluginTitle = 'Sanity AI Assist'\n\nexport const pluginTitleShort = 'AI Assist'\n\nexport const maxHistoryVisibilityMs = minutesToMilliseconds(30)\n","export const assistFormId = 'assist'\n","import {Box, type BoxProps, Flex, focusFirstDescendant, Spinner, Text} from '@sanity/ui'\nimport type React from 'react'\nimport {type HTMLProps, useEffect, useMemo, useRef} from 'react'\nimport {tap} from 'rxjs/operators'\nimport {\n  createPatchChannel,\n  type DocumentMutationEvent,\n  type DocumentRebaseEvent,\n  FormBuilder,\n  fromMutationPatches,\n  type PatchMsg,\n  useDocumentPresence,\n  useDocumentStore,\n} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {assistFormId} from './constants'\n\nconst preventDefault = (ev: React.FormEvent) => ev.preventDefault()\n\nexport function DocumentForm(\n  props: Omit<BoxProps, 'as'> & Omit<HTMLProps<HTMLDivElement>, 'as' | 'onSubmit' | 'ref'>,\n) {\n  const {\n    collapsedFieldSets,\n    collapsedPaths,\n    displayed: value,\n    documentId,\n    documentType,\n    editState,\n    formState,\n    onBlur,\n    onChange,\n    onFocus,\n    onPathOpen,\n    onSetActiveFieldGroup,\n    onSetCollapsedFieldSet,\n    onSetCollapsedPath,\n    ready,\n    validation,\n  } = useDocumentPane()\n\n  const documentStore = useDocumentStore()\n  const presence = useDocumentPresence(documentId)\n\n  // The `patchChannel` is an INTERNAL publish/subscribe channel that we use to notify form-builder\n  // nodes about both remote and local patches.\n  // - Used by the Portable Text input to modify selections.\n  // - Used by `withDocument` to reset value.\n  const patchChannel = useMemo(() => createPatchChannel(), [])\n\n  const isLocked = editState?.transactionSyncLock?.enabled\n\n  useEffect(() => {\n    const sub = documentStore.pair\n      .documentEvents(documentId, documentType)\n      .pipe(\n        tap((event) => {\n          if (event.type === 'mutation') {\n            patchChannel.publish(prepareMutationEvent(event))\n          }\n\n          if (event.type === 'rebase') {\n            patchChannel.publish(prepareRebaseEvent(event))\n          }\n        }),\n      )\n      .subscribe()\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [documentId, documentStore, documentType, patchChannel])\n\n  const hasRev = Boolean(value?._rev)\n  useEffect(() => {\n    if (hasRev) {\n      // this is a workaround for an issue that caused the document pushed to withDocument to get\n      // stuck at the first initial value.\n      // This effect is triggered only when the document goes from not having a revision, to getting one\n      // so it will kick in as soon as the document is received from the backend\n      patchChannel.publish({\n        type: 'mutation',\n        patches: [],\n        snapshot: value,\n      })\n    }\n    // React to changes in hasRev only\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [hasRev])\n\n  const formRef = useRef<null | HTMLDivElement>(null)\n\n  useEffect(() => {\n    focusFirstDescendant(formRef.current!)\n  }, [])\n\n  if (isLocked) {\n    return (\n      <Box as=\"form\" {...props} ref={formRef}>\n        <Flex\n          align=\"center\"\n          direction=\"column\"\n          height=\"fill\"\n          justify=\"center\"\n          padding={3}\n          sizing=\"border\"\n        >\n          <Text size={1}>\n            Please hold tight while the document is synced. This usually happens right after the\n            document has been published, and it shouldn’t take more than a few seconds\n          </Text>\n        </Flex>\n      </Box>\n    )\n  }\n\n  return (\n    <Box as=\"form\" {...props} onSubmit={preventDefault} ref={formRef}>\n      {ready ? (\n        formState === null ? (\n          <Flex\n            align=\"center\"\n            direction=\"column\"\n            height=\"fill\"\n            justify=\"center\"\n            padding={3}\n            sizing=\"border\"\n          >\n            <Text size={1}>This form is hidden</Text>\n          </Flex>\n        ) : (\n          <FormBuilder\n            __internal_patchChannel={patchChannel}\n            collapsedFieldSets={collapsedFieldSets}\n            collapsedPaths={collapsedPaths}\n            focusPath={formState.focusPath}\n            changed={formState.changed}\n            focused={formState.focused}\n            groups={formState.groups}\n            id={assistFormId}\n            members={formState.members}\n            onChange={onChange}\n            onFieldGroupSelect={onSetActiveFieldGroup}\n            onPathBlur={onBlur}\n            onPathFocus={onFocus}\n            onPathOpen={onPathOpen}\n            onSetFieldSetCollapsed={onSetCollapsedFieldSet}\n            onSetPathCollapsed={onSetCollapsedPath}\n            presence={presence}\n            readOnly={formState.readOnly}\n            schemaType={formState.schemaType}\n            validation={validation}\n            value={formState.value as any}\n          />\n        )\n      ) : (\n        <Flex\n          align=\"center\"\n          direction=\"column\"\n          height=\"fill\"\n          justify=\"center\"\n          padding={3}\n          sizing=\"border\"\n        >\n          <Spinner muted />\n\n          <Box marginTop={3}>\n            <Text align=\"center\" muted size={1}>\n              Loading document\n            </Text>\n          </Box>\n        </Flex>\n      )}\n    </Box>\n  )\n}\n\nfunction prepareMutationEvent(event: DocumentMutationEvent): PatchMsg {\n  const patches = event.mutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'mutation',\n    snapshot: event.document,\n    patches: fromMutationPatches(event.origin, patches),\n  }\n}\n\nfunction prepareRebaseEvent(event: DocumentRebaseEvent): PatchMsg {\n  const remotePatches = event.remoteMutations.map((mut) => mut.patch).filter(Boolean)\n  const localPatches = event.localMutations.map((mut) => mut.patch).filter(Boolean)\n\n  return {\n    type: 'rebase',\n    snapshot: event.document,\n    patches: fromMutationPatches('remote', remotePatches).concat(\n      fromMutationPatches('local', localPatches),\n    ),\n  }\n}\n","import {createContext} from 'react'\n\nexport interface AssistTypeContextValue {\n  typePath?: string\n  documentType?: string\n}\nexport const AssistTypeContext = createContext<AssistTypeContextValue>({})\n","import {assistDocumentIdPrefix, assistDocumentStatusIdPrefix} from '../types'\n\nconst illegalIdChars = /[^a-zA-Z0-9._-]/g\n\nexport function publicId(id: string) {\n  return id.replace('drafts.', '')\n}\n\nexport function assistDocumentId(documentType: string) {\n  return `${assistDocumentIdPrefix}${documentType}`.replace(illegalIdChars, '_')\n}\n\nexport function assistTasksStatusId(documentId: string) {\n  return `${assistDocumentStatusIdPrefix}${publicId(documentId)}`\n}\n","import {useEditState} from 'sanity'\n\nexport function useDocumentState<T>(id: string, docType: string): T | undefined {\n  const state = useEditState(id, docType)\n  return (state.draft || state.published) as T | undefined\n}\n","import {useEffect, useMemo} from 'react'\nimport {type ObjectSchemaType, typed, useClient, useCurrentUser} from 'sanity'\n\nimport {maxHistoryVisibilityMs} from '../../constants'\nimport {assistDocumentId, assistTasksStatusId} from '../../helpers/ids'\nimport {\n  assistDocumentTypeName,\n  type AssistTasksStatus,\n  assistTasksStatusTypeName,\n  type InstructionTask,\n  type StudioAssistDocument,\n  type StudioAssistField,\n  type StudioInstruction,\n} from '../../types'\nimport {useDocumentState} from './useDocumentState'\n\ninterface UseAssistDocumentProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n  initDoc?: boolean\n}\n\nexport function useStudioAssistDocument({\n  documentId,\n  schemaType,\n  initDoc,\n}: UseAssistDocumentProps): StudioAssistDocument | undefined {\n  const documentTypeName = schemaType.name\n  const currentUser = useCurrentUser()\n\n  const assistDocument = useDocumentState<StudioAssistDocument>(\n    assistDocumentId(documentTypeName),\n    assistDocumentTypeName,\n  )\n  const assistTasksStatus = useDocumentState<AssistTasksStatus>(\n    assistTasksStatusId(documentId ?? ''),\n    assistTasksStatusTypeName,\n  )\n\n  const client = useClient({apiVersion: '2023-01-01'})\n\n  useEffect(() => {\n    if (!assistDocument && initDoc) {\n      client\n        .createIfNotExists({\n          _id: assistDocumentId(documentTypeName),\n          _type: assistDocumentTypeName,\n        })\n        .catch(() => {\n          // best effort\n        })\n    }\n  }, [client, assistDocument, documentTypeName, initDoc])\n\n  return useMemo(() => {\n    if (!assistDocument) {\n      return undefined\n    }\n    const tasks = assistTasksStatus?.tasks ?? []\n    const fields = (assistDocument?.fields ?? []).map((assistField): StudioAssistField => {\n      return {\n        ...assistField,\n        tasks: tasks.filter((task) => task.path === assistField.path),\n        instructions: assistField.instructions\n          ?.filter((p) => !p.userId || p.userId === currentUser?.id)\n          .map((instruction) => asStudioInstruction(instruction, tasks)),\n      }\n    })\n    return typed<StudioAssistDocument>({\n      ...assistDocument,\n      tasks: tasks?.map((task) => {\n        const instruction = fields\n          .find((f) => f.path === task.path)\n          ?.instructions?.find((i) => i._key === task.instructionKey)\n        return {\n          ...task,\n          instruction,\n        }\n      }),\n      fields: fields,\n    })\n  }, [assistDocument, assistTasksStatus, currentUser])\n}\n\nfunction asStudioInstruction(\n  instruction: StudioInstruction,\n  run: InstructionTask[],\n): StudioInstruction {\n  return {\n    ...instruction,\n    tasks: run\n      .filter((task) => task.instructionKey === instruction._key)\n      .filter(\n        (task) =>\n          task.started &&\n          new Date().getTime() - new Date(task.started).getTime() < maxHistoryVisibilityMs,\n      ),\n  }\n}\n","import {useMemo} from 'react'\nimport {Path, pathToString} from 'sanity'\n\nimport {documentRootKey, StudioInstruction} from '../types'\n\nexport function usePathKey(path: Path | string) {\n  return useMemo(() => {\n    return getPathKey(path)\n  }, [path])\n}\n\nexport function getPathKey(path: Path | string) {\n  if (path.length) {\n    return Array.isArray(path) ? pathToString(path) : path\n  }\n  return documentRootKey\n}\n\nexport function getInstructionTitle(instruction?: StudioInstruction) {\n  return instruction?.title ?? 'Untitled'\n}\n","import {Path, pathToString, useClient, useCurrentUser, useSchema} from 'sanity'\nimport {useCallback, useMemo, useState} from 'react'\nimport {serializeSchema} from './schemas/serialize/serializeSchema'\nimport {useToast} from '@sanity/ui'\nimport {SanityClient} from '@sanity/client'\nimport {FieldLanguageMap} from './translate/paths'\nimport {documentRootKey} from './types'\nimport {ConditionalMemberState} from './helpers/conditionalMembers'\n\nexport interface UserTextInstance {\n  blockKey: string\n  userInput: string\n}\n\nexport interface RunInstructionRequest {\n  documentId: string\n  assistDocumentId: string\n  path: string\n  typePath?: string\n  instructionKey: string\n  userId?: string\n  userTexts?: UserTextInstance[]\n  conditionalMembers?: ConditionalMemberState[]\n}\n\nexport interface InstructStatus {\n  enabled: boolean\n  initialized: boolean\n  validToken: boolean\n}\n\nexport interface TranslateRequest {\n  documentId: string\n  translatePath: Path\n  languagePath?: string\n  fieldLanguageMap?: FieldLanguageMap[]\n  conditionalMembers?: ConditionalMemberState[]\n}\n\nconst basePath = '/assist/tasks/instruction'\n\nexport function canUseAssist(status: InstructStatus | undefined) {\n  return status?.enabled && status.initialized && status.validToken\n}\n\nexport function useApiClient(customApiClient?: (defaultClient: SanityClient) => SanityClient) {\n  const client = useClient({apiVersion: '2023-06-05'})\n  return useMemo(\n    () => (customApiClient ? customApiClient(client) : client),\n    [client, customApiClient],\n  )\n}\n\nexport function useTranslate(apiClient: SanityClient) {\n  const [loading, setLoading] = useState(false)\n  const user = useCurrentUser()\n  const schema = useSchema()\n  const types = useMemo(() => serializeSchema(schema, {leanFormat: true}), [schema])\n  const toast = useToast()\n\n  const translate = useCallback(\n    ({\n      documentId,\n      languagePath,\n      translatePath,\n      fieldLanguageMap,\n      conditionalMembers,\n    }: TranslateRequest) => {\n      setLoading(true)\n\n      return apiClient\n        .request({\n          method: 'POST',\n          url: `/assist/tasks/translate/${apiClient.config().dataset}?projectId=${\n            apiClient.config().projectId\n          }`,\n          body: {\n            documentId,\n            types,\n            languagePath,\n            fieldLanguageMap,\n            conditionalMembers,\n            translatePath:\n              translatePath.length === 0 ? documentRootKey : pathToString(translatePath),\n            userId: user?.id,\n          },\n        })\n        .catch((e) => {\n          toast.push({\n            status: 'error',\n            title: 'Translate failed',\n            description: e.message,\n          })\n          setLoading(false)\n          throw e\n        })\n        .finally(() => {\n          // adding some artificial delay here\n          // server responds with 201 then proceeds; we dont need to allow spamming the button\n          setTimeout(() => {\n            setLoading(false)\n          }, 2000)\n        })\n    },\n    [setLoading, apiClient, toast, user, types],\n  )\n\n  return useMemo(\n    () => ({\n      translate,\n      loading,\n    }),\n    [translate, loading],\n  )\n}\n\nexport function useGenerateCaption(apiClient: SanityClient) {\n  const [loading, setLoading] = useState(false)\n  const user = useCurrentUser()\n  const schema = useSchema()\n  const types = useMemo(() => serializeSchema(schema, {leanFormat: true}), [schema])\n  const toast = useToast()\n\n  const generateCaption = useCallback(\n    ({path, documentId}: {path: string; documentId: string}) => {\n      setLoading(true)\n\n      return apiClient\n        .request({\n          method: 'POST',\n          url: `/assist/tasks/generate-caption/${apiClient.config().dataset}?projectId=${\n            apiClient.config().projectId\n          }`,\n          body: {\n            path,\n            documentId,\n            types,\n            userId: user?.id,\n          },\n        })\n        .catch((e) => {\n          toast.push({\n            status: 'error',\n            title: 'Generate image description failed',\n            description: e.message,\n          })\n          setLoading(false)\n          throw e\n        })\n        .finally(() => {\n          // adding some artificial delay here\n          // server responds with 201 then proceeds; we dont need to allow spamming the button\n          setTimeout(() => {\n            setLoading(false)\n          }, 2000)\n        })\n    },\n    [setLoading, apiClient, toast, user, types],\n  )\n\n  return useMemo(\n    () => ({\n      generateCaption,\n      loading,\n    }),\n    [generateCaption, loading],\n  )\n}\n\nexport function useGenerateImage(apiClient: SanityClient) {\n  const [loading, setLoading] = useState(false)\n  const user = useCurrentUser()\n  const schema = useSchema()\n  const types = useMemo(() => serializeSchema(schema, {leanFormat: true}), [schema])\n  const toast = useToast()\n\n  const generateImage = useCallback(\n    ({path, documentId}: {path: string; documentId: string}) => {\n      setLoading(true)\n\n      return apiClient\n        .request({\n          method: 'POST',\n          url: `/assist/tasks/generate-image/${apiClient.config().dataset}?projectId=${\n            apiClient.config().projectId\n          }`,\n          body: {\n            path,\n            documentId,\n            types,\n            userId: user?.id,\n          },\n        })\n        .catch((e) => {\n          toast.push({\n            status: 'error',\n            title: 'Generate image from prompt failed',\n            description: e.message,\n          })\n          setLoading(false)\n          throw e\n        })\n        .finally(() => {\n          // adding some artificial delay here\n          // server responds with 201 then proceeds; we dont need to allow spamming the button\n          setTimeout(() => {\n            setLoading(false)\n          }, 2000)\n        })\n    },\n    [setLoading, apiClient, toast, user, types],\n  )\n\n  return useMemo(\n    () => ({\n      generateImage,\n      loading,\n    }),\n    [generateImage, loading],\n  )\n}\n\nexport function useGetInstructStatus(apiClient: SanityClient) {\n  const [loading, setLoading] = useState(true)\n\n  const getInstructStatus = useCallback(async () => {\n    setLoading(true)\n\n    const projectId = apiClient.config().projectId\n    try {\n      const status = await apiClient.request<InstructStatus>({\n        method: 'GET',\n        url: `${basePath}/${apiClient.config().dataset}/status?projectId=${projectId}`,\n      })\n\n      return status\n    } finally {\n      setLoading(false)\n    }\n  }, [setLoading, apiClient])\n\n  return {\n    loading,\n    getInstructStatus,\n  }\n}\n\nexport function useInitInstruct(apiClient: SanityClient) {\n  const [loading, setLoading] = useState(false)\n  const initInstruct = useCallback(() => {\n    setLoading(true)\n    return apiClient\n      .request({\n        method: 'GET',\n        url: `${basePath}/${apiClient.config().dataset}/init?projectId=${\n          apiClient.config().projectId\n        }`,\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [setLoading, apiClient])\n\n  return {\n    loading,\n    initInstruct,\n  }\n}\n\nexport function useRunInstructionApi(apiClient: SanityClient) {\n  const toast = useToast()\n  const [loading, setLoading] = useState(false)\n  const user = useCurrentUser()\n  const schema = useSchema()\n  const types = useMemo(() => serializeSchema(schema, {leanFormat: true}), [schema])\n\n  const runInstruction = useCallback(\n    (request: RunInstructionRequest) => {\n      setLoading(true)\n      return apiClient\n        .request({\n          method: 'POST',\n          url: `${basePath}/${apiClient.config().dataset}?projectId=${\n            apiClient.config().projectId\n          }`,\n          body: {\n            ...request,\n            types,\n            userId: user?.id,\n          },\n        })\n        .catch((e) => {\n          toast.push({\n            status: 'error',\n            title: 'Instruction failed',\n            description: e.message,\n          })\n          throw e\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    },\n    [apiClient, types, user, toast],\n  )\n\n  return useMemo(\n    () => ({\n      runInstruction,\n      loading,\n    }),\n    [runInstruction, loading],\n  )\n}\n","import {\n  createContext,\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\n\nimport {AssistPluginConfig} from '../plugin'\nimport {InstructStatus, useApiClient, useGetInstructStatus, useInitInstruct} from '../useApiClient'\n\nexport interface AiAssistanceConfigContextValue {\n  config: AssistPluginConfig\n  status?: InstructStatus\n  statusLoading: boolean\n  initLoading: boolean\n  init: () => void\n  error?: Error\n}\n\nexport const AiAssistanceConfigContext = createContext<AiAssistanceConfigContextValue>({} as any)\n\nexport function useAiAssistanceConfig() {\n  const context = useContext(AiAssistanceConfigContext)\n  if (!context) {\n    throw new Error('Missing AiAssistanceConfigContext')\n  }\n  return context\n}\n\nexport function AiAssistanceConfigProvider(props: {\n  children?: ReactNode\n  config: AssistPluginConfig\n}) {\n  const [status, setStatus] = useState<InstructStatus | undefined>()\n  const [error, setError] = useState<Error | undefined>()\n\n  const apiClient = useApiClient(props.config?.__customApiClient)\n  const {getInstructStatus, loading: statusLoading} = useGetInstructStatus(apiClient)\n  const {initInstruct, loading: initLoading} = useInitInstruct(apiClient)\n\n  useEffect(() => {\n    getInstructStatus()\n      .then((s) => setStatus(s))\n      .catch((e) => {\n        console.error(e)\n        setError(e as Error)\n      })\n  }, [getInstructStatus])\n\n  const init = useCallback(async () => {\n    setError(undefined)\n    try {\n      await initInstruct()\n      const status = await getInstructStatus()\n      setStatus(status)\n    } catch (e) {\n      console.error('Failed to init ai assistance', e)\n      setError(e as Error)\n    }\n  }, [initInstruct, getInstructStatus, setStatus])\n\n  const {config, children} = props\n  const context = useMemo<AiAssistanceConfigContextValue>(() => {\n    return {\n      config,\n      status,\n      statusLoading,\n      init,\n      initLoading,\n      error,\n    }\n  }, [config, status, init, statusLoading, initLoading, error])\n\n  return (\n    <AiAssistanceConfigContext.Provider value={context}>\n      {children}\n    </AiAssistanceConfigContext.Provider>\n  )\n}\n","import {PlayIcon} from '@sanity/icons'\nimport {Button, Dialog, Flex, Stack, Text, TextArea, Tooltip} from '@sanity/ui'\nimport {\n  createContext,\n  type Dispatch,\n  type FormEvent,\n  type PropsWithChildren,\n  type SetStateAction,\n  useCallback,\n  useContext,\n  useEffect,\n  useId,\n  useMemo,\n  useRef,\n  useState,\n} from 'react'\nimport {FormFieldHeaderText} from 'sanity'\n\nimport {getInstructionTitle} from '../helpers/misc'\nimport {type UserInputBlock, userInputTypeName} from '../types'\nimport {useApiClient, useRunInstructionApi} from '../useApiClient'\nimport {useAiAssistanceConfig} from './AiAssistanceConfigContext'\nimport type {RunInstructionArgs} from './AssistLayout'\n\ntype BlockInputs = Record<string, string>\nconst NO_INPUT: BlockInputs = {}\n\nexport interface RunInstructionContextValue {\n  runInstruction: (req: RunInstructionArgs) => void\n  instructionLoading: boolean\n}\n\nexport const RunInstructionContext = createContext<RunInstructionContextValue>({\n  runInstruction: () => {},\n  instructionLoading: false,\n})\n\nexport function useRunInstruction() {\n  return useContext(RunInstructionContext)\n}\n\nfunction isUserInputBlock(block: {_type: string}): block is UserInputBlock {\n  return block._type === userInputTypeName\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function RunInstructionProvider(props: PropsWithChildren<{}>) {\n  const {config} = useAiAssistanceConfig()\n  const apiClient = useApiClient(config?.__customApiClient)\n  const {runInstruction: runInstructionRequest, loading} = useRunInstructionApi(apiClient)\n\n  const id = useId()\n\n  const [inputs, setInputs] = useState(NO_INPUT)\n  const [runRequest, setRunRequest] = useState<\n    (RunInstructionArgs & {userInputBlocks: UserInputBlock[]}) | undefined\n  >()\n\n  const runInstruction = useCallback(\n    (req: RunInstructionArgs) => {\n      if (loading) {\n        return\n      }\n      const {instruction, ...request} = req\n      const instructionKey = instruction._key\n      const userInputBlocks = instruction?.prompt\n        ?.flatMap((block) =>\n          block._type === 'block' ? block.children.filter(isUserInputBlock) : [block],\n        )\n        .filter(isUserInputBlock)\n\n      if (!userInputBlocks?.length) {\n        runInstructionRequest({\n          ...request,\n          instructionKey,\n          userTexts: undefined,\n        })\n        return\n      }\n\n      setRunRequest({\n        ...req,\n        userInputBlocks,\n      })\n    },\n    [runInstructionRequest, loading],\n  )\n\n  const close = useCallback(() => {\n    setRunRequest(undefined)\n    setInputs(NO_INPUT)\n  }, [])\n\n  const runWithInput = useCallback(() => {\n    if (runRequest) {\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      const {instruction, userTexts, ...request} = runRequest\n      runInstructionRequest({\n        ...request,\n        instructionKey: instruction._key,\n        userTexts: Object.entries(inputs).map(([key, value]) => ({\n          blockKey: key,\n          userInput: value,\n        })),\n      })\n    }\n    close()\n  }, [close, runInstructionRequest, runRequest, inputs])\n\n  const open = !!runRequest\n\n  const runDisabled = useMemo(\n    () =>\n      (runRequest?.userInputBlocks?.length ?? 0) >\n      Object.entries(inputs).filter(([, value]) => !!value).length,\n    [runRequest?.userInputBlocks, inputs],\n  )\n\n  const runButton = (\n    <Button\n      text=\"Run instruction\"\n      onClick={runWithInput}\n      tone=\"primary\"\n      icon={PlayIcon}\n      style={{width: '100%'}}\n      disabled={runDisabled}\n    />\n  )\n\n  const contextValue: RunInstructionContextValue = useMemo(\n    () => ({runInstruction, instructionLoading: loading}),\n    [runInstruction, loading],\n  )\n\n  return (\n    <RunInstructionContext.Provider value={contextValue}>\n      {open ? (\n        <Dialog\n          id={id}\n          open={open}\n          onClose={close}\n          width={1}\n          header={getInstructionTitle(runRequest?.instruction)}\n          footer={\n            <Flex justify=\"space-between\" padding={2} flex={1}>\n              {runDisabled ? (\n                <Tooltip\n                  content={\n                    <Flex padding={2}>\n                      <Text>Unable to run instruction. All fields must have a value.</Text>\n                    </Flex>\n                  }\n                  placement=\"top\"\n                >\n                  <Flex flex={1}>{runButton}</Flex>\n                </Tooltip>\n              ) : (\n                runButton\n              )}\n            </Flex>\n          }\n        >\n          <Stack padding={4} space={2}>\n            {runRequest?.userInputBlocks?.map((block, i) => (\n              <UserInput\n                key={block._key}\n                block={block}\n                autoFocus={i === 0}\n                inputs={inputs}\n                setInputs={setInputs}\n              />\n            ))}\n          </Stack>\n        </Dialog>\n      ) : null}\n      {props.children}\n    </RunInstructionContext.Provider>\n  )\n}\n\nfunction UserInput(props: {\n  block: UserInputBlock\n  inputs: BlockInputs\n  setInputs: Dispatch<SetStateAction<BlockInputs>>\n  autoFocus?: boolean\n}) {\n  const {block, autoFocus, setInputs, inputs} = props\n  const key = block._key\n  const textAreaRef = useRef<HTMLTextAreaElement>(null)\n\n  const onChange = useCallback(\n    (e: FormEvent<HTMLTextAreaElement>) => {\n      setInputs((current) => ({\n        ...current,\n        [key]: (e.currentTarget ?? e.target).value,\n      }))\n    },\n    [key, setInputs],\n  )\n\n  const value = useMemo(() => inputs[key], [inputs, key])\n\n  useEffect(() => {\n    if (!autoFocus) {\n      return\n    }\n    setTimeout(() => textAreaRef.current?.focus(), 0)\n  }, [autoFocus])\n\n  return (\n    <Stack padding={2} space={3}>\n      <FormFieldHeaderText\n        title={block?.message ?? 'Provide more context'}\n        description={block.description}\n      />\n      <TextArea\n        ref={textAreaRef}\n        rows={4}\n        value={value}\n        onChange={onChange}\n        style={{resize: 'vertical'}}\n      />\n    </Stack>\n  )\n}\n","import {useCallback, useEffect, useState} from 'react'\nimport {ObjectSchemaType, PatchEvent, SanityDocument, unset} from 'sanity'\n\nimport {useRunInstruction} from '../assistLayout/RunInstructionProvider'\nimport {publicId} from '../helpers/ids'\n\nexport interface DraftDelayedTaskArgs<T> {\n  documentOnChange: (event: PatchEvent) => void\n  // indicates if the document is a draft or liveEditable currently\n  isDocAssistable: boolean\n  task: (args: T) => void\n}\n\nexport function isDocAssistable(\n  documentSchemaType: ObjectSchemaType,\n  published?: SanityDocument | null,\n  draft?: SanityDocument | null,\n) {\n  return !!(documentSchemaType.liveEdit ? published : draft)\n}\n\nexport function getAssistableDocId(documentSchemaType: ObjectSchemaType, documentId: string) {\n  const baseId = publicId(documentId)\n  return documentSchemaType.liveEdit ? baseId : `drafts.${baseId}`\n}\n\nexport function useRequestRunInstruction(args: {\n  documentOnChange: (event: PatchEvent) => void\n  // indicates if the document is a draft or liveEditable currently\n  isDocAssistable: boolean\n}) {\n  const {runInstruction, instructionLoading} = useRunInstruction()\n  const requestRunInstruction = useDraftDelayedTask({\n    ...args,\n    task: runInstruction,\n  })\n\n  return {\n    instructionLoading,\n    requestRunInstruction,\n  }\n}\n\n/**\n * Ensures that the current document is a draft before running task\n */\nexport function useDraftDelayedTask<T>(args: DraftDelayedTaskArgs<T>) {\n  const {documentOnChange, isDocAssistable, task} = args\n\n  const [queuedArgs, setQueuedArgs] = useState<T | undefined>(undefined)\n\n  useEffect(() => {\n    if (queuedArgs && isDocAssistable) {\n      task(queuedArgs)\n      setQueuedArgs(undefined)\n    }\n  }, [queuedArgs, isDocAssistable, task])\n\n  return useCallback(\n    (taskArgs: T) => {\n      // make a dummy edit: this will trigger the document/draft to be created\n      documentOnChange(PatchEvent.from([unset(['_force_document_creation'])]))\n      setQueuedArgs(taskArgs)\n    },\n    [setQueuedArgs, documentOnChange],\n  )\n}\n","/* eslint-disable max-depth */\nimport {\n  type ArrayOfObjectsFormNode,\n  type ArrayOfObjectsItemMember,\n  type ArrayOfPrimitivesFormNode,\n  type DocumentFormNode,\n  type FieldsetState,\n  isObjectSchemaType,\n  type ObjectFormNode,\n  type Path,\n  pathToString,\n  type SchemaType,\n} from 'sanity'\n\nconst MAX_DEPTH = 8\n\nexport interface ConditionalMemberState {\n  path: string\n  hidden: boolean\n  readOnly: boolean\n}\n\ninterface ConditionalMemberInnerState extends ConditionalMemberState {\n  conditional: boolean\n}\n\n/**\n * This is used to statically determine the state of the functions on the server-side.\n * Paths which has a schema with conditional config should be considered hidden: true and/or readOnly: true\n * Only conditional paths are included, as static props can be determined from schema.\n *\n * Returns paths that has conditional hidden or readOnly schema config (function) and that.\n * Form-state does not contain hidden members.\n *\n * Note:\n * * If a parent path is hidden, no child paths are included\n * * If a parent path is readOnly, no child paths are included\n * * If a path is hidden, it is not included; only conditionally visible paths will be returned, with hidden: false\n */\nexport function getConditionalMembers(docState: DocumentFormNode): ConditionalMemberState[] {\n  const doc: ConditionalMemberInnerState = {\n    path: '',\n    hidden: false,\n    readOnly: !!docState.readOnly,\n    conditional: isConditional(docState.schemaType),\n  }\n  return (\n    [doc, ...extractConditionalPaths(docState, MAX_DEPTH)]\n      .filter((v) => v.conditional)\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      .map(({conditional, ...state}) => ({...state}))\n  )\n}\n\nfunction isConditional(schemaType: SchemaType) {\n  return typeof schemaType.hidden === 'function' || typeof schemaType.readOnly === 'function'\n}\n\nfunction conditionalState(memberState: {\n  path: Path\n  schemaType: SchemaType\n  readOnly?: boolean\n}): ConditionalMemberInnerState {\n  return {\n    path: pathToString(memberState.path),\n    readOnly: !!memberState.readOnly,\n    hidden: false, // if its in members, its not hidden\n    conditional: isConditional(memberState.schemaType),\n  }\n}\n\nfunction extractConditionalPaths(\n  node: ObjectFormNode | FieldsetState,\n  maxDepth: number,\n): ConditionalMemberInnerState[] {\n  if (node.path.length >= maxDepth) {\n    return []\n  }\n\n  return node.members.reduce<ConditionalMemberInnerState[]>((acc, member) => {\n    if (member.kind === 'error') {\n      return acc\n    }\n    if (member.kind === 'field') {\n      const schemaType = member.field.schemaType\n      if (schemaType.jsonType === 'object') {\n        const innerFields = member.field.readOnly\n          ? []\n          : extractConditionalPaths(member.field as ObjectFormNode, maxDepth)\n        return [...acc, conditionalState(member.field), ...innerFields]\n      } else if (schemaType.jsonType === 'array') {\n        const array = member.field as ArrayOfObjectsFormNode | ArrayOfPrimitivesFormNode\n\n        let arrayPaths: ConditionalMemberInnerState[] = []\n        const isObjectsArray = array.members.some(\n          (m) => m.kind === 'item' && isObjectSchemaType(m.item.schemaType),\n        )\n        if (!array.readOnly) {\n          for (const arrayMember of array.members) {\n            if (arrayMember.kind === 'error') {\n              continue\n            }\n\n            const innerFields =\n              isObjectsArray && !arrayMember.item.readOnly\n                ? extractConditionalPaths((arrayMember as ArrayOfObjectsItemMember).item, maxDepth)\n                : []\n\n            arrayPaths = [...arrayPaths, conditionalState(arrayMember.item), ...innerFields]\n          }\n        }\n        return [...acc, conditionalState(array), ...arrayPaths]\n      }\n\n      return [...acc, conditionalState(member.field)]\n    } else if (member.kind === 'fieldSet') {\n      const conditionalFieldset = !!(node as ObjectFormNode).schemaType?.fieldsets?.some(\n        (f) => !f.single && f.name === member.fieldSet.name && typeof f.hidden === 'function',\n      )\n      const innerFields = extractConditionalPaths(member.fieldSet, maxDepth).map((f) => ({\n        ...f,\n        // if fieldset is conditional, visible fields must also be considered conditional\n        conditional: conditionalFieldset ?? f.conditional,\n      }))\n      return [...acc, ...innerFields]\n    }\n\n    return acc\n  }, [])\n}\n","import {SparklesIcon} from '@sanity/icons'\nimport {Box, Button, Container, Flex, Stack, Text} from '@sanity/ui'\nimport {styled} from 'styled-components'\n\nimport {releaseAnnouncementUrl} from '../constants'\n\nconst SparklesIllustration = styled(SparklesIcon)({\n  fontSize: '3.125em',\n  '& path': {\n    strokeWidth: `0.6px !important`,\n  },\n})\n\nexport function InspectorOnboarding(props: {onDismiss: () => void}) {\n  const {onDismiss} = props\n  return (\n    <Box padding={4}>\n      <Container width={0}>\n        <Stack space={4}>\n          <div style={{textAlign: 'center'}}>\n            <SparklesIllustration />\n          </div>\n          <Text align=\"center\" size={1}>\n            Create reusable AI instructions that can be applied across all documents of a certain\n            type.\n          </Text>\n\n          <Flex align=\"center\" gap={2} justify=\"center\">\n            <Button\n              as=\"a\"\n              href={releaseAnnouncementUrl}\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              fontSize={1}\n              mode=\"default\"\n              onClick={onDismiss}\n              padding={2}\n              text=\"Learn more\"\n              tone=\"primary\"\n            />\n            <Button fontSize={1} mode=\"bleed\" onClick={onDismiss} padding={2} text=\"Dismiss\" />\n          </Flex>\n        </Stack>\n      </Container>\n    </Box>\n  )\n}\n","import {useCallback, useState} from 'react'\n\nexport const inspectorOnboardingKey = 'sanityStudio:assist:inspector:onboarding:dismissed'\nexport const fieldOnboardingKey = 'sanityStudio:assist:field:onboarding:dismissed'\n\nexport function isFeatureOnboardingDismissed(featureKey: string): boolean {\n  if (typeof localStorage === 'undefined') {\n    return false\n  }\n\n  const value = localStorage.getItem(featureKey)\n  return value === 'true'\n}\n\nexport function dismissFeatureOnboarding(featureKey: string) {\n  if (typeof localStorage === 'undefined') {\n    return\n  }\n\n  localStorage.setItem(featureKey, 'true')\n}\n\nexport function useOnboardingFeature(featureKey: string) {\n  const [showOnboarding, setShowOnboarding] = useState(\n    () => !isFeatureOnboardingDismissed(featureKey),\n  )\n  const dismissOnboarding = useCallback(() => {\n    setShowOnboarding(false)\n    dismissFeatureOnboarding(featureKey)\n  }, [setShowOnboarding, featureKey])\n\n  return {showOnboarding, dismissOnboarding}\n}\n","import {createContext} from 'react'\nimport {ObjectSchemaType, SchemaType} from 'sanity'\n\nexport interface SelectedFieldContextValue {\n  documentSchema?: ObjectSchemaType\n  fieldSchema?: SchemaType\n}\n\nexport const SelectedFieldContext = createContext<SelectedFieldContextValue | undefined>(undefined)\nexport const SelectedFieldContextProvider = SelectedFieldContext.Provider\n","import {\n  BlockContentIcon,\n  BlockquoteIcon,\n  DocumentIcon,\n  ImageIcon,\n  LinkIcon,\n  OlistIcon,\n  StringIcon,\n} from '@sanity/icons'\nimport {extractWithPath} from '@sanity/mutator'\nimport {type ComponentType, useContext, useMemo} from 'react'\nimport {\n  type ArraySchemaType,\n  isKeySegment,\n  isObjectSchemaType,\n  type ObjectSchemaType,\n  type Path,\n  pathToString,\n  type SanityDocumentLike,\n  type SchemaType,\n  stringToPath,\n} from 'sanity'\nimport {type PaneRouterContextValue, usePaneRouter} from 'sanity/structure'\n\nimport {SelectedFieldContext} from '../assistDocument/components/SelectedFieldContext'\nimport {isAssistSupported} from '../helpers/assistSupported'\nimport {isPortableTextArray, isType} from '../helpers/typeUtils'\nimport {type AssistInspectorRouteParams, documentRootKey, fieldPathParam} from '../types'\n\nexport interface FieldRef {\n  key: string\n  path: Path\n  title: string\n  schemaType: SchemaType\n  icon: ComponentType\n  synthetic?: boolean\n}\n\nconst maxDepth = 6\n\nexport function getTypeIcon(schemaType: SchemaType) {\n  let t: SchemaType | undefined = schemaType\n\n  while (t) {\n    if (t.icon) return t.icon\n    t = t.type\n  }\n\n  if (isType(schemaType, 'slug')) return LinkIcon\n  if (isType(schemaType, 'image')) return ImageIcon\n  if (schemaType.jsonType === 'array' && isPortableTextArray(schemaType)) return BlockContentIcon\n\n  if (schemaType.jsonType === 'array') return OlistIcon\n  if (schemaType.jsonType === 'object') return BlockquoteIcon\n  if (schemaType.jsonType === 'string') return StringIcon\n\n  return DocumentIcon\n}\n\nexport function getFieldRefsWithDocument(schemaType: ObjectSchemaType): FieldRef[] {\n  const fields = getFieldRefs(schemaType)\n  return [\n    {\n      key: documentRootKey,\n      icon: schemaType.icon ?? DocumentIcon,\n      title: `The entire document`,\n      path: [],\n      schemaType: schemaType,\n    },\n\n    ...fields,\n  ]\n}\n\nexport function getFieldRefs(\n  schemaType: ObjectSchemaType,\n  parent?: FieldRef,\n  depth = 0,\n): FieldRef[] {\n  if (depth >= maxDepth) {\n    return []\n  }\n  return schemaType.fields\n    .filter((f) => !f.name.startsWith('_'))\n    .flatMap((field) => {\n      const path: Path = parent ? [...parent.path, field.name] : [field.name]\n      const title = field.type.title ?? field.name\n      const fieldRef: FieldRef = {\n        key: patchableKey(pathToString(path)),\n        path,\n        title: parent ? [parent.title, title].join(' / ') : title,\n        schemaType: field.type,\n        icon: getTypeIcon(field.type),\n      }\n      const fields =\n        field.type.jsonType === 'object' ? getFieldRefs(field.type, fieldRef, depth + 1) : []\n\n      const syntheticFields =\n        field.type.jsonType === 'array' ? getSyntheticFields(field.type, fieldRef, depth + 1) : []\n      if (!isAssistSupported(field.type)) {\n        return [...fields, ...syntheticFields]\n      }\n      return [fieldRef, ...fields, ...syntheticFields]\n    })\n}\n\nfunction getSyntheticFields(schemaType: ArraySchemaType, parent?: FieldRef, depth = 0) {\n  if (depth >= maxDepth) {\n    return []\n  }\n\n  return schemaType.of\n    .filter((itemType) => !isType(itemType, 'block'))\n    .flatMap((itemType) => {\n      const segment = {_key: itemType.name}\n      const title = itemType.title ?? itemType.name\n      const path: Path = parent ? [...parent.path, segment] : [segment]\n      const fieldRef: FieldRef = {\n        key: patchableKey(pathToString(path)),\n        path,\n        title: parent ? [parent.title, title].join(' / ') : title,\n        schemaType: itemType,\n        icon: getTypeIcon(itemType),\n        synthetic: true,\n      }\n      const fields =\n        itemType.jsonType === 'object' ? getFieldRefs(itemType, fieldRef, depth + 1) : []\n\n      if (!isAssistSupported(itemType)) {\n        return fields\n      }\n      return [fieldRef, ...fields]\n    })\n}\n\nexport function getTypePath(doc: SanityDocumentLike, pathString: string) {\n  if (!pathString) {\n    return undefined\n  }\n\n  const path = stringToPath(pathString)\n  const currentPath: Path = []\n  let valid = true\n  const syntheticPath = path.map((segment) => {\n    currentPath.push(segment)\n\n    if (isKeySegment(segment)) {\n      const match = extractWithPath(pathToString(currentPath), doc)[0]\n      const value = match?.value\n      if (match && value && typeof value === 'object' && '_type' in value) {\n        return {_key: value._type as string}\n      }\n      valid = false\n    }\n    return segment\n  })\n\n  return valid ? patchableKey(pathToString(syntheticPath)) : undefined\n}\n\n/**\n * mutator crashes if path contains certain letters\n * @param pathKey\n */\nfunction patchableKey(pathKey: string) {\n  return pathKey.replace(/[=]=/g, ':').replace(/[[\\]]/g, '|').replace(/\"/g, '')\n}\n\nexport function useTypePath(doc: SanityDocumentLike, pathString: string) {\n  return useMemo(() => getTypePath(doc, pathString), [doc, pathString])\n}\n\nexport function useSelectedField(\n  documentSchemaType?: SchemaType,\n  path?: string,\n): FieldRef | undefined {\n  const selectableFields = useMemo(\n    () =>\n      documentSchemaType && isObjectSchemaType(documentSchemaType)\n        ? getFieldRefsWithDocument(documentSchemaType)\n        : [],\n    [documentSchemaType],\n  )\n\n  return useMemo(() => {\n    return path ? selectableFields?.find((f) => f.key === path) : undefined\n  }, [selectableFields, path])\n}\n\nexport function useSelectedFieldTitle() {\n  const {params} = useAiPaneRouter()\n  const {documentSchema} = useContext(SelectedFieldContext) ?? {}\n  const selectedField = useSelectedField(documentSchema, params[fieldPathParam])\n  return getFieldTitle(selectedField)\n}\n\nexport function getFieldTitle(field?: FieldRef) {\n  const schemaType = field?.schemaType\n  return field?.title ?? schemaType?.title ?? schemaType?.name ?? 'Untitled'\n}\n\nexport type AiPaneRouter = Omit<PaneRouterContextValue, 'setParams' | 'params'> & {\n  params: AssistInspectorRouteParams\n  setParams: (p: Record<keyof AssistInspectorRouteParams, string | undefined>) => void\n}\n\nexport function useAiPaneRouter() {\n  const paneRouter = usePaneRouter()\n\n  return useMemo(\n    () => ({...paneRouter, params: paneRouter.params ?? {}}) as AiPaneRouter,\n    [paneRouter],\n  )\n}\n","import {SearchIcon} from '@sanity/icons'\nimport {Autocomplete, Box, Breadcrumbs, Card, Flex, Text} from '@sanity/ui'\nimport {createElement, useCallback, useMemo} from 'react'\nimport {ObjectSchemaType} from 'sanity'\n\nimport {isType} from '../helpers/typeUtils'\nimport {FieldRef, getFieldRefs, getFieldRefsWithDocument} from './helpers'\n\ninterface FieldSelectorProps {\n  id: string\n  schemaType: ObjectSchemaType\n  fieldPath?: string\n  onSelect: (path: string) => void\n  includeDocument?: boolean\n  filter?: (field: FieldRef) => boolean\n}\n\nexport function FieldAutocomplete(props: FieldSelectorProps) {\n  const {id, schemaType, fieldPath, onSelect, includeDocument, filter} = props\n\n  const fieldRefs = useMemo(() => {\n    if (includeDocument) {\n      return getFieldRefsWithDocument(schemaType)\n    }\n    return getFieldRefs(schemaType)\n  }, [schemaType, includeDocument])\n  const currentField = useMemo(\n    () => fieldRefs.find((f) => f.key === fieldPath),\n    [fieldPath, fieldRefs],\n  )\n\n  const autocompleteOptions = useMemo(\n    () =>\n      fieldRefs\n        .filter((field) => (filter ? filter(field) : true))\n        .filter((f) => !isType(f.schemaType, 'reference'))\n        .map((field) => ({value: field.key, field})),\n    [fieldRefs, filter],\n  )\n\n  const renderOption = useCallback((option: {value: string; field: FieldRef}) => {\n    const {value, field} = option\n\n    if (!value) {\n      return (\n        <Card as=\"button\" padding={3} radius={1}>\n          <Text accent size={1}>\n            {option.value}\n          </Text>\n        </Card>\n      )\n    }\n\n    if (isType(field.schemaType, 'document')) {\n      return (\n        <Card as=\"button\" padding={3} radius={1}>\n          <Text size={1} weight=\"semibold\">\n            The entire document\n          </Text>\n        </Card>\n      )\n    }\n\n    return (\n      <Card as=\"button\" padding={3} radius={1}>\n        <Flex gap={3}>\n          <Text size={1}>{createElement(field.icon)}</Text>\n\n          <FieldTitle field={field} />\n        </Flex>\n      </Card>\n    )\n  }, [])\n\n  const renderValue = useCallback((value: string, option?: {value: string; field: FieldRef}) => {\n    return option?.field.title ?? value\n  }, [])\n\n  const filterOption = useCallback((query: string, option: {value: string; field: FieldRef}) => {\n    const lQuery = query.toLowerCase()\n    return (\n      option?.value?.toLowerCase().includes(lQuery) ||\n      option?.field?.title?.toLowerCase().includes(lQuery)\n    )\n  }, [])\n\n  return (\n    <Autocomplete\n      fontSize={1}\n      icon={currentField ? currentField.icon : SearchIcon}\n      onChange={onSelect}\n      openButton\n      id={id}\n      options={autocompleteOptions}\n      placeholder=\"Search for a field\"\n      radius={2}\n      renderOption={renderOption}\n      renderValue={renderValue}\n      value={currentField?.key}\n      filterOption={filterOption}\n    />\n  )\n}\n\nexport function FieldTitle(props: {field: FieldRef}) {\n  const splitTitle = props.field.title.split('/')\n  return (\n    <Box flex=\"none\">\n      <Breadcrumbs\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          alignItems: 'center',\n          marginTop: '-4px',\n        }}\n        separator={\n          <Box marginTop={1}>\n            <Text muted size={1}>\n              /\n            </Text>\n          </Box>\n        }\n        space={1}\n      >\n        {splitTitle.slice(0, splitTitle.length - 1).map((pt, i) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <Box key={i} marginTop={1}>\n            <Text muted size={1}>\n              {pt.trim()}\n            </Text>\n          </Box>\n        ))}\n        <Box marginTop={1}>\n          <Text size={1} weight=\"medium\">\n            {splitTitle[splitTitle.length - 1]}\n          </Text>\n        </Box>\n      </Breadcrumbs>\n    </Box>\n  )\n}\n","import {formatDistanceToNow} from 'date-fns'\nimport {useEffect, useReducer} from 'react'\n\nfunction useInterval(ms: number) {\n  const [tick, update] = useReducer((n) => n + 1, 0)\n\n  useEffect(() => {\n    const i = setInterval(update, ms)\n    return () => clearInterval(i)\n  }, [ms])\n  return tick\n}\n\nexport function TimeAgo({date}: {date?: string}) {\n  useInterval(1000)\n  const timeSince = formatDistanceToNow(date ? new Date(date) : new Date())\n  return <span title={timeSince}>{timeSince} ago</span>\n}\n","import {\n  CheckmarkCircleIcon,\n  ClockIcon,\n  CloseCircleIcon,\n  ErrorOutlineIcon,\n  SyncIcon,\n} from '@sanity/icons'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  useClickOutside,\n  useGlobalKeyDown,\n  useLayer,\n} from '@sanity/ui'\nimport {createElement, type ForwardedRef, forwardRef, useCallback, useMemo, useState} from 'react'\nimport {StatusButton, type StatusButtonProps, typed, useClient} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nimport {TimeAgo} from '../components/TimeAgo'\nimport {maxHistoryVisibilityMs, pluginTitle} from '../constants'\nimport {assistTasksStatusId} from '../helpers/ids'\nimport {getInstructionTitle} from '../helpers/misc'\nimport type {AssistTasksStatus, InstructionTask, StudioInstruction, TaskEndedReason} from '../types'\n\nexport interface InstructionTaskHistoryButtonProps {\n  documentId?: string\n  tasks: InstructionTask[] | undefined\n  instructions: StudioInstruction[] | undefined\n  showTitles: boolean\n}\n\ninterface CancelableInstructionTask extends InstructionTask {\n  cancel: () => void\n  title?: string\n}\n\nconst rotate = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`\n\nconst SyncSpinningIcon = styled(SyncIcon)`\n  animation: ${rotate} 1s linear infinite;\n`\n\nconst TASK_CONFIG = {\n  aborted: {\n    title: 'Canceled',\n    icon: CloseCircleIcon,\n    tone: 'transparent',\n  },\n  error: {\n    title: 'Error',\n    icon: ErrorOutlineIcon,\n    tone: 'critical',\n  },\n  success: {\n    title: 'Completed',\n    icon: CheckmarkCircleIcon,\n    tone: 'positive',\n  },\n  timeout: {\n    title: 'Timeout',\n    icon: ClockIcon,\n    tone: 'caution',\n  },\n} as const\n\nexport function InstructionTaskHistoryButton(props: InstructionTaskHistoryButtonProps) {\n  const {tasks, instructions, documentId, showTitles} = props\n\n  const client = useClient({apiVersion: '2023-01-01'})\n  const cancelRun = useCallback(\n    (taskKey: string) => {\n      if (!documentId) {\n        return\n      }\n      const statusDocId = assistTasksStatusId(documentId)\n      const basePath = `${typed<keyof AssistTasksStatus>('tasks')}[_key==\"${taskKey}\"]`\n      client\n        .patch(statusDocId)\n        .set({\n          [`${basePath}.${typed<keyof InstructionTask>('ended')}`]: new Date().toISOString(),\n          [`${basePath}.${typed<keyof InstructionTask>('reason')}`]:\n            typed<TaskEndedReason>('aborted'),\n        })\n        .commit()\n        .catch(console.error)\n    },\n    [client, documentId],\n  )\n\n  const titledTasks = useMemo(() => {\n    const t =\n      tasks\n        ?.filter(\n          (task) =>\n            task.started &&\n            new Date().getTime() - new Date(task.started).getTime() < maxHistoryVisibilityMs,\n        )\n        .map((task): CancelableInstructionTask => {\n          const instruction = instructions?.find((i) => i._key === task.instructionKey)\n          return {\n            ...task,\n            title: showTitles ? (task.title ?? getInstructionTitle(instruction)) : undefined,\n            cancel: () => cancelRun(task._key),\n          }\n        }) ?? []\n    t.sort((a, b) => new Date(b.started ?? '').getTime() - new Date(a.started ?? '').getTime())\n    return t\n  }, [tasks, instructions, cancelRun, showTitles])\n\n  // const id = useId()\n\n  const isRunning = useMemo(() => titledTasks.some((r) => !r.ended), [titledTasks])\n  const hasErrors = useMemo(\n    () => titledTasks.some((r) => r.reason === 'error' || r.reason === 'timeout'),\n    [titledTasks],\n  )\n\n  const [open, setOpen] = useState(false)\n\n  const toggleOpen = useCallback(() => setOpen((v) => !v), [])\n\n  const [button, setButton] = useState<HTMLButtonElement | null>(null)\n  const [popover, setPopover] = useState<HTMLDivElement | null>(null)\n\n  const handleClickOutside = useCallback(() => {\n    setOpen(false)\n  }, [])\n\n  useClickOutside(handleClickOutside, [button, popover])\n\n  const handleEscape = useCallback(() => {\n    setOpen(false)\n    button?.focus()\n  }, [button])\n\n  return (\n    <Popover\n      constrainSize\n      content={<TaskList onEscape={handleEscape} tasks={titledTasks} />}\n      open={open && !!titledTasks?.length}\n      placement=\"top\"\n      portal\n      ref={setPopover}\n      width={0}\n    >\n      <TaskStatusButton\n        disabled={!titledTasks?.length}\n        hasErrors={hasErrors}\n        isRunning={isRunning}\n        onClick={toggleOpen}\n        ref={setButton}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n\nconst TASK_STATUS_BUTTON_TOOLTIP_PROPS: StatusButtonProps['tooltipProps'] = {\n  placement: 'top',\n}\n\nconst TaskStatusButton = forwardRef(function TaskStatusButton(\n  props: {\n    disabled: boolean\n    hasErrors: boolean\n    isRunning: boolean\n    onClick: () => void\n    selected: boolean\n  },\n  ref: ForwardedRef<HTMLButtonElement>,\n) {\n  const {disabled, hasErrors, isRunning, onClick, selected} = props\n\n  return (\n    <StatusButton\n      label={`${pluginTitle} status`}\n      aria-label={`${pluginTitle} status`}\n      icon={isRunning ? SyncSpinningIcon : hasErrors ? ErrorOutlineIcon : CheckmarkCircleIcon}\n      mode=\"bleed\"\n      onClick={onClick}\n      tone={hasErrors ? 'critical' : undefined}\n      disabled={disabled}\n      ref={ref}\n      selected={selected}\n      tooltipProps={TASK_STATUS_BUTTON_TOOLTIP_PROPS}\n    />\n  )\n})\n\nfunction TaskList(props: {onEscape: () => void; tasks: CancelableInstructionTask[]}) {\n  const {onEscape, tasks} = props\n\n  const {isTopLayer} = useLayer()\n\n  useGlobalKeyDown(\n    useCallback(\n      (event) => {\n        if (isTopLayer && event.key === 'Escape') {\n          onEscape()\n        }\n      },\n      [isTopLayer, onEscape],\n    ),\n  )\n\n  return (\n    <Stack padding={1} space={1}>\n      {tasks.map((task) => (\n        <TaskItem key={task._key} task={task} />\n      ))}\n    </Stack>\n  )\n}\n\nfunction TaskItem(props: {task: CancelableInstructionTask}) {\n  const {task} = props\n\n  const taskType = task.reason && TASK_CONFIG[task.reason]\n  return (\n    <Card radius={2} tone={taskType && taskType?.tone}>\n      <Flex align=\"center\" gap={1}>\n        <Flex align=\"flex-start\" flex={1} gap={3} padding={3}>\n          <Box flex=\"none\">\n            <Text size={1}>\n              {taskType && createElement(taskType.icon)}\n              {!task.reason && <Spinner />}\n            </Text>\n          </Box>\n          <Stack flex={1} space={2}>\n            <Text size={1} weight=\"medium\">\n              {taskType ? taskType.title : 'Running'}\n              {task.title && <>: {task.title}</>}\n            </Text>\n            {task.message ? <Text size={1}>{task.message}</Text> : null}\n            <Text muted size={1}>\n              <TimeAgo date={task.ended ?? task.started} />\n            </Text>\n          </Stack>\n        </Flex>\n\n        {!task.ended && (\n          <Box flex=\"none\" padding={1}>\n            <Button fontSize={1} mode=\"bleed\" onClick={task.cancel} text=\"Cancel\" />\n          </Box>\n        )}\n      </Flex>\n    </Card>\n  )\n}\n","import {ArrowRightIcon, CloseIcon, PlayIcon, RetryIcon} from '@sanity/icons'\nimport {Box, Button, Card, Flex, Spinner, Stack, Text} from '@sanity/ui'\nimport {useCallback, useMemo, useRef} from 'react'\nimport {\n  type DocumentInspectorProps,\n  PresenceOverlay,\n  useEditState,\n  VirtualizerScrollInstanceProvider,\n} from 'sanity'\nimport {\n  DocumentInspectorHeader,\n  type DocumentPaneNode,\n  DocumentPaneProvider,\n  useDocumentPane,\n} from 'sanity/structure'\nimport {styled} from 'styled-components'\n\nimport {DocumentForm} from '../_lib/form'\nimport {AssistTypeContext} from '../assistDocument/components/AssistTypeContext'\nimport {useStudioAssistDocument} from '../assistDocument/hooks/useStudioAssistDocument'\nimport {\n  getAssistableDocId,\n  isDocAssistable,\n  useRequestRunInstruction,\n} from '../assistDocument/RequestRunInstructionProvider'\nimport {useAiAssistanceConfig} from '../assistLayout/AiAssistanceConfigContext'\nimport {giveFeedbackUrl, pluginTitle, releaseAnnouncementUrl, salesUrl} from '../constants'\nimport {getConditionalMembers} from '../helpers/conditionalMembers'\nimport {assistDocumentId} from '../helpers/ids'\nimport {InspectorOnboarding} from '../onboarding/InspectorOnboarding'\nimport {inspectorOnboardingKey, useOnboardingFeature} from '../onboarding/onboardingStore'\nimport {assistDocumentTypeName, fieldPathParam, instructionParam} from '../types'\nimport {FieldTitle} from './FieldAutocomplete'\nimport {\n  type FieldRef,\n  getFieldTitle,\n  useAiPaneRouter,\n  useSelectedField,\n  useTypePath,\n} from './helpers'\nimport {InstructionTaskHistoryButton} from './InstructionTaskHistoryButton'\n\nconst CardWithShadowBelow = styled(Card)`\n  position: relative;\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    bottom: -1px;\n    border-bottom: 1px solid var(--card-border-color);\n    opacity: 0.5;\n    z-index: 100;\n  }\n`\n\nconst CardWithShadowAbove = styled(Card)`\n  position: relative;\n\n  &:after {\n    content: '';\n    display: block;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: -1px;\n    border-top: 1px solid var(--card-border-color);\n    opacity: 0.5;\n    z-index: 100;\n  }\n`\n\nexport function AssistInspectorWrapper(props: DocumentInspectorProps) {\n  const context = useAiAssistanceConfig()\n\n  if (context.statusLoading) {\n    return (\n      <Flex align=\"center\" height=\"fill\" justify=\"center\" padding={4} sizing=\"border\">\n        <Stack space={3} style={{textAlign: 'center'}}>\n          <Spinner muted />\n          <Text muted size={1}>\n            Loading {pluginTitle}...\n          </Text>\n        </Stack>\n      </Flex>\n    )\n  }\n\n  const status = context.status\n\n  if (!status?.enabled) {\n    return (\n      <Flex direction=\"column\" height=\"fill\">\n        <DocumentInspectorHeader\n          closeButtonLabel=\"Close\"\n          onClose={props.onClose}\n          title={pluginTitle}\n        />\n\n        <Stack flex={1} overflow=\"auto\" padding={4} space={3}>\n          <Text as=\"p\" size={1} weight=\"semibold\">\n            {pluginTitle} is not available\n          </Text>\n\n          <Text as=\"p\" muted size={1}>\n            Please get in touch with a Sanity account manager or{' '}\n            <a href={salesUrl} target=\"_blank\" rel=\"noreferrer\">\n              contact our sales team\n            </a>{' '}\n            to get started with {pluginTitle}.{' '}\n            <a href={releaseAnnouncementUrl} target=\"_blank\" rel=\"noreferrer\">\n              Learn more &rarr;\n            </a>\n          </Text>\n        </Stack>\n      </Flex>\n    )\n  }\n\n  if (!status?.initialized || !status.validToken) {\n    return (\n      <Flex direction=\"column\" height=\"fill\">\n        <DocumentInspectorHeader\n          closeButtonLabel=\"Close\"\n          onClose={props.onClose}\n          title={pluginTitle}\n        />\n\n        <Stack padding={4} space={3}>\n          {context.error ? (\n            <Text size={1} weight=\"semibold\">\n              Failed to start {pluginTitle}\n            </Text>\n          ) : null}\n\n          {!context.error && !status?.initialized ? (\n            <Text size={1} weight=\"semibold\">\n              {pluginTitle} is not enabled\n            </Text>\n          ) : null}\n\n          {!context.error && status?.initialized && !status.validToken ? (\n            <>\n              <Text size={1} weight=\"semibold\">\n                Invalid token\n              </Text>\n              <Text muted size={1}>\n                The token used by the AI Assistant is not valid and has to be regenerated.\n              </Text>\n            </>\n          ) : null}\n\n          {context.error && (\n            <Text muted size={1}>\n              Something went wrong. See console for details.\n            </Text>\n          )}\n\n          {!context.error && !status?.initialized && (\n            <Text size={1} muted>\n              Please enable {pluginTitle}.\n            </Text>\n          )}\n\n          <Button\n            fontSize={1}\n            icon={\n              context.initLoading ? (\n                <Box marginTop={1}>\n                  <Spinner />\n                </Box>\n              ) : context.error ? (\n                RetryIcon\n              ) : undefined\n            }\n            text={\n              context.error\n                ? 'Retry'\n                : status?.initialized && !status.validToken\n                  ? `Restore ${pluginTitle}`\n                  : `Enable ${pluginTitle} now`\n            }\n            tone=\"primary\"\n            onClick={context.init}\n            disabled={context.initLoading}\n          />\n        </Stack>\n      </Flex>\n    )\n  }\n\n  return <AssistInspector {...props} />\n}\n\nexport function AssistInspector(props: DocumentInspectorProps) {\n  const {params} = useAiPaneRouter()\n\n  const boundary = useRef<HTMLDivElement | null>(null)\n  const pathKey = params?.[fieldPathParam]\n  const instructionKey = params?.[instructionParam]\n  const documentPane = useDocumentPane()\n  const {\n    documentId,\n    documentType,\n    value: docValue,\n    schemaType,\n    onChange: documentOnChange,\n    formState,\n  } = documentPane\n  const {published, draft} = useEditState(documentId, documentType, 'low')\n\n  const formStateRef = useRef(formState)\n  formStateRef.current = formState\n\n  const assistableDocId = getAssistableDocId(schemaType, documentId)\n  const {instructionLoading, requestRunInstruction} = useRequestRunInstruction({\n    documentOnChange,\n    isDocAssistable: isDocAssistable(schemaType, published, draft),\n  })\n\n  const typePath = useTypePath(docValue, pathKey ?? '')\n  const selectedField = useSelectedField(schemaType, typePath)\n\n  const aiDocId = assistDocumentId(documentType)\n\n  const assistDocument = useStudioAssistDocument({documentId, schemaType, initDoc: true})\n  const assistField = assistDocument?.fields?.find((f) => f.path === typePath)\n  const instruction = assistField?.instructions?.find((i) => i._key === instructionKey)\n  const tasks = useMemo(\n    () =>\n      assistDocument?.tasks?.filter((i) => !instructionKey || i.instructionKey === instructionKey),\n    [assistDocument?.tasks, instructionKey],\n  )\n  const instructions = useMemo(\n    () => assistDocument?.fields?.flatMap((f) => f.instructions ?? []),\n    [assistDocument?.fields],\n  )\n\n  const promptValue = instruction?.prompt\n  const isEmptyPrompt = useMemo(() => {\n    if (!promptValue?.length) {\n      return true\n    }\n    const firstBlock = promptValue[0] as any\n    const children = firstBlock?.children\n\n    return promptValue.length == 1 && children?.length === 1 && !children?.[0]?.text?.length\n  }, [promptValue])\n\n  const paneNode: DocumentPaneNode = useMemo(\n    () => ({\n      type: 'document',\n      id: aiDocId,\n      title: pluginTitle,\n      options: {\n        id: aiDocId,\n        type: assistDocumentTypeName,\n      },\n    }),\n    [aiDocId],\n  )\n\n  const runCurrentInstruction = useCallback(\n    () =>\n      instruction &&\n      pathKey &&\n      typePath &&\n      requestRunInstruction({\n        documentId: assistableDocId,\n        path: pathKey,\n        typePath,\n        assistDocumentId: assistDocumentId(documentType),\n        instruction,\n        conditionalMembers: formStateRef.current ? getConditionalMembers(formStateRef.current) : [],\n      }),\n    [pathKey, instruction, typePath, documentType, assistableDocId, requestRunInstruction],\n  )\n\n  const Region = useCallback((_props: any) => {\n    // disabled for now\n    /* return (\n        <ConnectToRegion\n          {..._props}\n          _key={`${paneKey}_${selectedField?.key || '_field'}`}\n          style={{height: '100%', flex: 1, overflow: 'auto'}}\n        />\n      )*/\n    return <div {..._props} style={{height: '100%', flex: 1, overflow: 'auto'}} />\n  }, [])\n\n  const assistTypeContext = useMemo(() => ({typePath, documentType}), [typePath, documentType])\n\n  if (!documentId || !schemaType || schemaType.jsonType !== 'object') {\n    return (\n      <Card flex={1} padding={4}>\n        <Text>Document not ready yet.</Text>\n      </Card>\n    )\n  }\n\n  return (\n    <Flex\n      ref={boundary}\n      direction=\"column\"\n      height=\"fill\"\n      overflow=\"hidden\"\n      sizing=\"border\"\n      style={{lineHeight: 0}}\n    >\n      <AiInspectorHeader\n        onClose={props.onClose}\n        field={selectedField}\n        fieldTitle={getFieldTitle(selectedField)}\n      />\n\n      <Card as={Region} flex={1} overflow=\"auto\">\n        <Flex direction=\"column\" style={{minHeight: '100%'}}>\n          <Box flex={1}>\n            <PresenceOverlay>\n              <Box padding={4}>\n                {selectedField && (\n                  <AssistTypeContext.Provider value={assistTypeContext}>\n                    <VirtualizerScrollInstanceProvider\n                      scrollElement={boundary.current}\n                      containerElement={boundary}\n                    >\n                      <DocumentPaneProvider\n                        paneKey={documentPane.paneKey}\n                        index={documentPane.index}\n                        itemId=\"ai\"\n                        pane={paneNode}\n                      >\n                        <DocumentForm />\n                      </DocumentPaneProvider>\n                    </VirtualizerScrollInstanceProvider>\n                  </AssistTypeContext.Provider>\n                )}\n              </Box>\n            </PresenceOverlay>\n          </Box>\n\n          <Box flex=\"none\" padding={4}>\n            <Text muted size={1}>\n              How is Sanity AI Assist working for you?{' '}\n              <a\n                href={giveFeedbackUrl}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                style={{whiteSpace: 'nowrap'}}\n              >\n                Let us know <ArrowRightIcon />\n              </a>\n            </Text>\n          </Box>\n        </Flex>\n      </Card>\n      <CardWithShadowAbove flex=\"none\" paddingX={4} paddingY={3} style={{justifySelf: 'flex-end'}}>\n        <Flex gap={2} flex={1} justify=\"flex-end\">\n          {schemaType?.name && pathKey && instructionKey && (\n            <Stack flex={1}>\n              <Button\n                mode=\"ghost\"\n                disabled={isEmptyPrompt || instructionLoading}\n                fontSize={1}\n                icon={instructionLoading ? <Spinner /> : PlayIcon}\n                onClick={runCurrentInstruction}\n                padding={3}\n                text={'Run instruction'}\n              />\n            </Stack>\n          )}\n\n          <InstructionTaskHistoryButton\n            documentId={assistableDocId}\n            tasks={tasks}\n            instructions={instructions}\n            showTitles={!instructionKey}\n          />\n        </Flex>\n      </CardWithShadowAbove>\n    </Flex>\n  )\n}\n\nfunction AiInspectorHeader(props: {fieldTitle: string; field?: FieldRef; onClose: () => void}) {\n  const {onClose, field, fieldTitle} = props\n  const {showOnboarding, dismissOnboarding} = useOnboardingFeature(inspectorOnboardingKey)\n\n  return (\n    <CardWithShadowBelow flex=\"none\" padding={2}>\n      <Flex flex={1} align=\"center\">\n        <Flex flex={1} padding={3} gap={2} align=\"center\">\n          <Flex gap={1} align=\"center\" wrap=\"wrap\" style={{marginTop: '-4px'}}>\n            <Box marginTop={1}>\n              <Text size={1} weight=\"semibold\">\n                AI instructions for\n              </Text>\n            </Box>\n            <Card radius={2} border padding={1} marginTop={1}>\n              {field ? (\n                <FieldTitle field={field} />\n              ) : (\n                <Text size={1} weight=\"semibold\">\n                  {fieldTitle}\n                </Text>\n              )}\n            </Card>\n          </Flex>\n        </Flex>\n        <Box flex=\"none\">\n          <Button fontSize={1} icon={CloseIcon} mode=\"bleed\" onClick={onClose} />\n        </Box>\n      </Flex>\n\n      {showOnboarding && <InspectorOnboarding onDismiss={dismissOnboarding} />}\n    </CardWithShadowBelow>\n  )\n}\n","export const aiInspectorId = 'ai-assistance'\n","import {SparklesIcon} from '@sanity/icons'\nimport {DocumentInspector, typed} from 'sanity'\n\nimport {pluginTitle} from '../constants'\nimport {AssistInspectorRouteParams, fieldPathParam, instructionParam} from '../types'\nimport {AssistInspectorWrapper} from './AssistInspector'\nimport {aiInspectorId} from './constants'\n\nexport const assistInspector: DocumentInspector = {\n  name: aiInspectorId,\n  useMenuItem: () => ({\n    icon: SparklesIcon,\n    title: pluginTitle,\n    hidden: true,\n    showAsAction: false,\n  }),\n  component: AssistInspectorWrapper,\n  onClose({params}) {\n    return {\n      params: typed<AssistInspectorRouteParams>({\n        ...params,\n        [fieldPathParam]: undefined,\n        [instructionParam]: undefined,\n      }) as typeof params,\n    }\n  },\n}\n","import {Badge} from '@sanity/ui'\n\nexport function AssistFeatureBadge() {\n  return (\n    <Badge fontSize={0} style={{margin: '-2px 0'}} tone=\"primary\">\n      Beta\n    </Badge>\n  )\n}\n","import {ArrowRightIcon, CheckmarkIcon, SparklesIcon} from '@sanity/icons'\nimport {Button, Card, Flex, Popover, Stack, Text} from '@sanity/ui'\nimport {useRef} from 'react'\n\nimport {AssistFeatureBadge} from '../components/AssistFeatureBadge'\nimport {pluginTitle, releaseAnnouncementUrl} from '../constants'\n\nexport interface FieldActionsOnboardingProps {\n  dismiss: () => void\n}\n\nexport function AssistOnboardingPopover(props: FieldActionsOnboardingProps) {\n  const {dismiss} = props\n\n  return (\n    <Popover\n      content={<AssistIntroCard dismiss={dismiss} />}\n      open\n      portal\n      placeholder=\"bottom\"\n      tone=\"default\"\n      width={0}\n    >\n      <Card radius={2} shadow={2} style={{padding: 2, lineHeight: 0}}>\n        <Button disabled fontSize={1} icon={SparklesIcon} mode=\"bleed\" padding={2} />\n      </Card>\n    </Popover>\n  )\n}\n\nfunction AssistIntroCard(props: {dismiss: () => void}) {\n  const buttonRef = useRef<HTMLButtonElement>(null)\n\n  return (\n    <Stack as=\"section\" padding={3} space={3}>\n      <Stack padding={2} space={4}>\n        <Flex gap={2} align=\"center\">\n          <Text as=\"h1\" size={1} weight=\"semibold\">\n            {pluginTitle}\n          </Text>\n          <div aria-hidden style={{margin: '-3px 0', lineHeight: 0}}>\n            <AssistFeatureBadge />\n          </div>\n        </Flex>\n\n        <Stack space={3}>\n          <Text as=\"p\" muted size={1}>\n            Manage reusable AI instructions to boost your content creation and reduce amount of\n            repetitive chores.{' '}\n            <a href={releaseAnnouncementUrl} target=\"_blank\" rel=\"noreferrer\">\n              Learn more <ArrowRightIcon />\n            </a>\n          </Text>\n        </Stack>\n      </Stack>\n\n      <Button\n        fontSize={1}\n        icon={CheckmarkIcon}\n        onClick={props.dismiss}\n        padding={3}\n        ref={buttonRef}\n        text=\"Ok, good to know!\"\n        tone=\"primary\"\n      />\n    </Stack>\n  )\n}\n","import {createContext, PropsWithChildren, useMemo} from 'react'\nimport {FieldMember, ObjectInputProps, pathToString} from 'sanity'\n\nimport {isAssistSupported} from '../helpers/assistSupported'\n\nexport const FirstAssistedPathContext = createContext<string | undefined>(undefined)\n\nexport interface FirstAssistedPathProviderProps {\n  members: ObjectInputProps['members']\n}\n\nexport function FirstAssistedPathProvider(\n  props: PropsWithChildren<FirstAssistedPathProviderProps>,\n) {\n  const {members} = props\n\n  const firstAssistedPath = useMemo(() => {\n    const firstAssisted = members.find(\n      (member): member is FieldMember =>\n        member.kind === 'field' && isAssistSupported(member.field.schemaType),\n    )\n    return firstAssisted?.field.path ? pathToString(firstAssisted?.field.path) : undefined\n  }, [members])\n\n  return (\n    <FirstAssistedPathContext.Provider value={firstAssistedPath}>\n      {props.children}\n    </FirstAssistedPathContext.Provider>\n  )\n}\n","import {forwardRef, type ReactElement, type ReactNode} from 'react'\nimport {keyframes, styled} from 'styled-components'\n\nconst fadeIn = keyframes`\n  0% {\n    opacity: 0;\n    transform: scale(0.75);\n  }\n  40% {\n    opacity: 0;\n    transform: scale(0.75);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n`\n\nconst FadeInDiv = styled.div`\n  animation-name: ${fadeIn};\n  animation-timing-function: ease-in-out;\n`\n\nexport const FadeInContent = forwardRef(function FadeInContent(\n  {\n    children,\n    durationMs = 250,\n  }: {\n    children?: ReactNode\n    ms?: number\n    durationMs?: number\n  },\n  ref: any,\n): ReactElement {\n  return (\n    <FadeInDiv ref={ref} style={{animationDuration: `${durationMs}ms`}}>\n      {children}\n    </FadeInDiv>\n  )\n})\n","const COLOR_HUES = [\n  \"gray\",\n  \"blue\",\n  \"purple\",\n  \"magenta\",\n  \"red\",\n  \"orange\",\n  \"yellow\",\n  \"green\",\n  \"cyan\"\n], COLOR_TINTS = [\n  \"50\",\n  \"100\",\n  \"200\",\n  \"300\",\n  \"400\",\n  \"500\",\n  \"600\",\n  \"700\",\n  \"800\",\n  \"900\",\n  \"950\"\n];\nfunction hslToRgb(hsl) {\n  const h = hsl[0], s = hsl[1] / 100, l = hsl[2] / 100, k = (n) => (n + h / 30) % 12, a = s * Math.min(l, 1 - l), f = (n) => l - a * Math.max(-1, Math.min(k(n) - 3, Math.min(9 - k(n), 1)));\n  return [255 * f(0), 255 * f(8), 255 * f(4)];\n}\nfunction rgbToHex([r, g, b]) {\n  const _r = Math.round(r), _g = Math.round(g), _b = Math.round(b);\n  return \"#\" + ((1 << 24) + (_r << 16) + (_g << 8) + _b).toString(16).slice(1);\n}\nfunction buildTints(options) {\n  const { hueKey, color: color2 } = options;\n  return COLOR_TINTS.reduce((acc, tintKey) => {\n    const tint = Number(tintKey), rgb = hslToRgb(color2.tints[tintKey].hsl), hex = rgbToHex([Math.round(rgb[0]), Math.round(rgb[1]), Math.round(rgb[2])]);\n    return acc[tintKey] = {\n      title: `${hueKey.slice(0, 1).toUpperCase()}${hueKey.slice(1)} ${tint}`,\n      hex\n    }, acc;\n  }, {});\n}\nconst black = {\n  title: \"Black\",\n  hex: \"#0d0e12\"\n}, white = {\n  title: \"White\",\n  hex: \"#ffffff\"\n}, gray = {\n  50: {\n    title: \"Gray 50\",\n    hex: \"#f6f6f8\"\n  },\n  100: {\n    title: \"Gray 100\",\n    hex: \"#eeeef1\"\n  },\n  200: {\n    title: \"Gray 200\",\n    hex: \"#e3e4e8\"\n  },\n  300: {\n    title: \"Gray 300\",\n    hex: \"#bbbdc9\"\n  },\n  400: {\n    title: \"Gray 400\",\n    hex: \"#9499ad\"\n  },\n  500: {\n    title: \"Gray 500\",\n    hex: \"#727892\"\n  },\n  600: {\n    title: \"Gray 600\",\n    hex: \"#515870\"\n  },\n  700: {\n    title: \"Gray 700\",\n    hex: \"#383d51\"\n  },\n  800: {\n    title: \"Gray 800\",\n    hex: \"#252837\"\n  },\n  900: {\n    title: \"Gray 900\",\n    hex: \"#1b1d27\"\n  },\n  950: {\n    title: \"Gray 950\",\n    hex: \"#13141b\"\n  }\n}, blue = {\n  50: {\n    title: \"Blue 50\",\n    hex: \"#f5f8ff\"\n  },\n  100: {\n    title: \"Blue 100\",\n    hex: \"#e5edff\"\n  },\n  200: {\n    title: \"Blue 200\",\n    hex: \"#dbe5ff\"\n  },\n  300: {\n    title: \"Blue 300\",\n    hex: \"#a8bfff\"\n  },\n  400: {\n    title: \"Blue 400\",\n    hex: \"#7595ff\"\n  },\n  500: {\n    title: \"Blue 500\",\n    hex: \"#556bfc\"\n  },\n  600: {\n    title: \"Blue 600\",\n    hex: \"#4043e7\"\n  },\n  700: {\n    title: \"Blue 700\",\n    hex: \"#2927aa\"\n  },\n  800: {\n    title: \"Blue 800\",\n    hex: \"#192457\"\n  },\n  900: {\n    title: \"Blue 900\",\n    hex: \"#161a41\"\n  },\n  950: {\n    title: \"Blue 950\",\n    hex: \"#101228\"\n  }\n}, purple = {\n  50: {\n    title: \"Purple 50\",\n    hex: \"#f8f5ff\"\n  },\n  100: {\n    title: \"Purple 100\",\n    hex: \"#f1ebff\"\n  },\n  200: {\n    title: \"Purple 200\",\n    hex: \"#ece1fe\"\n  },\n  300: {\n    title: \"Purple 300\",\n    hex: \"#ccb1fc\"\n  },\n  400: {\n    title: \"Purple 400\",\n    hex: \"#b087f7\"\n  },\n  500: {\n    title: \"Purple 500\",\n    hex: \"#8f57ef\"\n  },\n  600: {\n    title: \"Purple 600\",\n    hex: \"#721fe5\"\n  },\n  700: {\n    title: \"Purple 700\",\n    hex: \"#4c1a9e\"\n  },\n  800: {\n    title: \"Purple 800\",\n    hex: \"#2f1862\"\n  },\n  900: {\n    title: \"Purple 900\",\n    hex: \"#23173f\"\n  },\n  950: {\n    title: \"Purple 950\",\n    hex: \"#181128\"\n  }\n}, magenta = {\n  50: {\n    title: \"Magenta 50\",\n    hex: \"#fef6f9\"\n  },\n  100: {\n    title: \"Magenta 100\",\n    hex: \"#fde8ef\"\n  },\n  200: {\n    title: \"Magenta 200\",\n    hex: \"#fcdee9\"\n  },\n  300: {\n    title: \"Magenta 300\",\n    hex: \"#f7abc5\"\n  },\n  400: {\n    title: \"Magenta 400\",\n    hex: \"#f0709b\"\n  },\n  500: {\n    title: \"Magenta 500\",\n    hex: \"#e72767\"\n  },\n  600: {\n    title: \"Magenta 600\",\n    hex: \"#b11651\"\n  },\n  700: {\n    title: \"Magenta 700\",\n    hex: \"#7c1342\"\n  },\n  800: {\n    title: \"Magenta 800\",\n    hex: \"#4b1130\"\n  },\n  900: {\n    title: \"Magenta 900\",\n    hex: \"#341325\"\n  },\n  950: {\n    title: \"Magenta 950\",\n    hex: \"#1f0f14\"\n  }\n}, red = {\n  50: {\n    title: \"Red 50\",\n    hex: \"#fff6f5\"\n  },\n  100: {\n    title: \"Red 100\",\n    hex: \"#ffe7e5\"\n  },\n  200: {\n    title: \"Red 200\",\n    hex: \"#ffdedc\"\n  },\n  300: {\n    title: \"Red 300\",\n    hex: \"#fdada5\"\n  },\n  400: {\n    title: \"Red 400\",\n    hex: \"#f77769\"\n  },\n  500: {\n    title: \"Red 500\",\n    hex: \"#ef4434\"\n  },\n  600: {\n    title: \"Red 600\",\n    hex: \"#cc2819\"\n  },\n  700: {\n    title: \"Red 700\",\n    hex: \"#8b2018\"\n  },\n  800: {\n    title: \"Red 800\",\n    hex: \"#4d1714\"\n  },\n  900: {\n    title: \"Red 900\",\n    hex: \"#321615\"\n  },\n  950: {\n    title: \"Red 950\",\n    hex: \"#1e1011\"\n  }\n}, orange = {\n  50: {\n    title: \"Orange 50\",\n    hex: \"#fff7f0\"\n  },\n  100: {\n    title: \"Orange 100\",\n    hex: \"#ffeadb\"\n  },\n  200: {\n    title: \"Orange 200\",\n    hex: \"#ffddc7\"\n  },\n  300: {\n    title: \"Orange 300\",\n    hex: \"#ffb685\"\n  },\n  400: {\n    title: \"Orange 400\",\n    hex: \"#ff8e42\"\n  },\n  500: {\n    title: \"Orange 500\",\n    hex: \"#fa6400\"\n  },\n  600: {\n    title: \"Orange 600\",\n    hex: \"#b14802\"\n  },\n  700: {\n    title: \"Orange 700\",\n    hex: \"#7c3404\"\n  },\n  800: {\n    title: \"Orange 800\",\n    hex: \"#461e07\"\n  },\n  900: {\n    title: \"Orange 900\",\n    hex: \"#32160b\"\n  },\n  950: {\n    title: \"Orange 950\",\n    hex: \"#21120d\"\n  }\n}, yellow = {\n  50: {\n    title: \"Yellow 50\",\n    hex: \"#fefae1\"\n  },\n  100: {\n    title: \"Yellow 100\",\n    hex: \"#fcf3bb\"\n  },\n  200: {\n    title: \"Yellow 200\",\n    hex: \"#f9e994\"\n  },\n  300: {\n    title: \"Yellow 300\",\n    hex: \"#f7d455\"\n  },\n  400: {\n    title: \"Yellow 400\",\n    hex: \"#f9bc15\"\n  },\n  500: {\n    title: \"Yellow 500\",\n    hex: \"#d28a04\"\n  },\n  600: {\n    title: \"Yellow 600\",\n    hex: \"#965908\"\n  },\n  700: {\n    title: \"Yellow 700\",\n    hex: \"#653a0b\"\n  },\n  800: {\n    title: \"Yellow 800\",\n    hex: \"#3b220c\"\n  },\n  900: {\n    title: \"Yellow 900\",\n    hex: \"#271a11\"\n  },\n  950: {\n    title: \"Yellow 950\",\n    hex: \"#181410\"\n  }\n}, green = {\n  50: {\n    title: \"Green 50\",\n    hex: \"#e7fef5\"\n  },\n  100: {\n    title: \"Green 100\",\n    hex: \"#c5fce8\"\n  },\n  200: {\n    title: \"Green 200\",\n    hex: \"#a9f9dc\"\n  },\n  300: {\n    title: \"Green 300\",\n    hex: \"#59f3ba\"\n  },\n  400: {\n    title: \"Green 400\",\n    hex: \"#0ff0a1\"\n  },\n  500: {\n    title: \"Green 500\",\n    hex: \"#04b97a\"\n  },\n  600: {\n    title: \"Green 600\",\n    hex: \"#01794f\"\n  },\n  700: {\n    title: \"Green 700\",\n    hex: \"#015133\"\n  },\n  800: {\n    title: \"Green 800\",\n    hex: \"#023120\"\n  },\n  900: {\n    title: \"Green 900\",\n    hex: \"#06231a\"\n  },\n  950: {\n    title: \"Green 950\",\n    hex: \"#071715\"\n  }\n}, cyan = {\n  50: {\n    title: \"Cyan 50\",\n    hex: \"#e7fefe\"\n  },\n  100: {\n    title: \"Cyan 100\",\n    hex: \"#c5fcfc\"\n  },\n  200: {\n    title: \"Cyan 200\",\n    hex: \"#96f8f8\"\n  },\n  300: {\n    title: \"Cyan 300\",\n    hex: \"#62efef\"\n  },\n  400: {\n    title: \"Cyan 400\",\n    hex: \"#18e2e2\"\n  },\n  500: {\n    title: \"Cyan 500\",\n    hex: \"#04b8be\"\n  },\n  600: {\n    title: \"Cyan 600\",\n    hex: \"#037782\"\n  },\n  700: {\n    title: \"Cyan 700\",\n    hex: \"#024950\"\n  },\n  800: {\n    title: \"Cyan 800\",\n    hex: \"#042f34\"\n  },\n  900: {\n    title: \"Cyan 900\",\n    hex: \"#072227\"\n  },\n  950: {\n    title: \"Cyan 950\",\n    hex: \"#0d181c\"\n  }\n}, hues = { gray, blue, purple, magenta, red, orange, yellow, green, cyan }, color = { black, white, ...hues }, config = {\n  black: {\n    title: \"Black\",\n    hsl: [225, 16, 6]\n  },\n  white: {\n    title: \"White\",\n    hsl: [0, 0, 100]\n  },\n  gray: {\n    title: \"Gray\",\n    tints: {\n      50: {\n        title: \"Gray 50\",\n        hsl: [240, 12, 97]\n      },\n      100: {\n        title: \"Gray 100\",\n        hsl: [240, 10, 94]\n      },\n      200: {\n        title: \"Gray 200\",\n        hsl: [231, 10, 90]\n      },\n      300: {\n        title: \"Gray 300\",\n        hsl: [232, 11, 76]\n      },\n      400: {\n        title: \"Gray 400\",\n        hsl: [228, 13, 63]\n      },\n      500: {\n        title: \"Gray 500\",\n        hsl: [229, 13, 51]\n      },\n      600: {\n        title: \"Gray 600\",\n        hsl: [228, 16, 38]\n      },\n      700: {\n        title: \"Gray 700\",\n        hsl: [229, 18, 27]\n      },\n      800: {\n        title: \"Gray 800\",\n        hsl: [229, 19, 18]\n      },\n      900: {\n        title: \"Gray 900\",\n        hsl: [228, 19, 13]\n      },\n      950: {\n        title: \"Gray 950\",\n        hsl: [233, 17, 9]\n      }\n    }\n  },\n  blue: {\n    title: \"Blue\",\n    tints: {\n      50: {\n        title: \"Blue 50\",\n        hsl: [222, 100, 98]\n      },\n      100: {\n        title: \"Blue 100\",\n        hsl: [222, 100, 95]\n      },\n      200: {\n        title: \"Blue 200\",\n        hsl: [223, 100, 93]\n      },\n      300: {\n        title: \"Blue 300\",\n        hsl: [224, 100, 83]\n      },\n      400: {\n        title: \"Blue 400\",\n        hsl: [226, 100, 73]\n      },\n      500: {\n        title: \"Blue 500\",\n        hsl: [232, 96, 66]\n      },\n      600: {\n        title: \"Blue 600\",\n        hsl: [239, 78, 58]\n      },\n      700: {\n        title: \"Blue 700\",\n        hsl: [241, 63, 41]\n      },\n      800: {\n        title: \"Blue 800\",\n        hsl: [230, 55, 22]\n      },\n      900: {\n        title: \"Blue 900\",\n        hsl: [234, 49, 17]\n      },\n      950: {\n        title: \"Blue 950\",\n        hsl: [235, 43, 11]\n      }\n    }\n  },\n  purple: {\n    title: \"Purple\",\n    tints: {\n      50: {\n        title: \"Purple 50\",\n        hsl: [260, 95, 98]\n      },\n      100: {\n        title: \"Purple 100\",\n        hsl: [260, 98, 96]\n      },\n      200: {\n        title: \"Purple 200\",\n        hsl: [263, 96, 94]\n      },\n      300: {\n        title: \"Purple 300\",\n        hsl: [262, 92, 84]\n      },\n      400: {\n        title: \"Purple 400\",\n        hsl: [262, 88, 75]\n      },\n      500: {\n        title: \"Purple 500\",\n        hsl: [262, 83, 64]\n      },\n      600: {\n        title: \"Purple 600\",\n        hsl: [265, 79, 51]\n      },\n      700: {\n        title: \"Purple 700\",\n        hsl: [263, 72, 36]\n      },\n      800: {\n        title: \"Purple 800\",\n        hsl: [258, 60, 24]\n      },\n      900: {\n        title: \"Purple 900\",\n        hsl: [257, 46, 17]\n      },\n      950: {\n        title: \"Purple 950\",\n        hsl: [260, 41, 11]\n      }\n    }\n  },\n  magenta: {\n    title: \"Magenta\",\n    tints: {\n      50: {\n        title: \"Magenta 50\",\n        hsl: [340, 82, 98]\n      },\n      100: {\n        title: \"Magenta 100\",\n        hsl: [339, 83, 95]\n      },\n      200: {\n        title: \"Magenta 200\",\n        hsl: [339, 83, 93]\n      },\n      300: {\n        title: \"Magenta 300\",\n        hsl: [340, 82, 82]\n      },\n      400: {\n        title: \"Magenta 400\",\n        hsl: [340, 81, 69]\n      },\n      500: {\n        title: \"Magenta 500\",\n        hsl: [340, 80, 53]\n      },\n      600: {\n        title: \"Magenta 600\",\n        hsl: [337, 78, 39]\n      },\n      700: {\n        title: \"Magenta 700\",\n        hsl: [333, 73, 28]\n      },\n      800: {\n        title: \"Magenta 800\",\n        hsl: [328, 63, 18]\n      },\n      900: {\n        title: \"Magenta 900\",\n        hsl: [327, 46, 14]\n      },\n      950: {\n        title: \"Magenta 950\",\n        hsl: [341, 35, 9]\n      }\n    }\n  },\n  red: {\n    title: \"Red\",\n    tints: {\n      50: {\n        title: \"Red 50\",\n        hsl: [5, 100, 98]\n      },\n      100: {\n        title: \"Red 100\",\n        hsl: [4, 100, 95]\n      },\n      200: {\n        title: \"Red 200\",\n        hsl: [4, 98, 93]\n      },\n      300: {\n        title: \"Red 300\",\n        hsl: [5, 95, 82]\n      },\n      400: {\n        title: \"Red 400\",\n        hsl: [6, 90, 69]\n      },\n      500: {\n        title: \"Red 500\",\n        hsl: [5, 85, 57]\n      },\n      600: {\n        title: \"Red 600\",\n        hsl: [5, 78, 45]\n      },\n      700: {\n        title: \"Red 700\",\n        hsl: [4, 70, 32]\n      },\n      800: {\n        title: \"Red 800\",\n        hsl: [3, 58, 19]\n      },\n      900: {\n        title: \"Red 900\",\n        hsl: [2, 41, 14]\n      },\n      950: {\n        title: \"Red 950\",\n        hsl: [356, 30, 9]\n      }\n    }\n  },\n  orange: {\n    title: \"Orange\",\n    tints: {\n      50: {\n        title: \"Orange 50\",\n        hsl: [28, 100, 97]\n      },\n      100: {\n        title: \"Orange 100\",\n        hsl: [25, 100, 93]\n      },\n      200: {\n        title: \"Orange 200\",\n        hsl: [24, 100, 89]\n      },\n      300: {\n        title: \"Orange 300\",\n        hsl: [24, 100, 76]\n      },\n      400: {\n        title: \"Orange 400\",\n        hsl: [24, 100, 63]\n      },\n      500: {\n        title: \"Orange 500\",\n        hsl: [24, 100, 49]\n      },\n      600: {\n        title: \"Orange 600\",\n        hsl: [24, 98, 35]\n      },\n      700: {\n        title: \"Orange 700\",\n        hsl: [24, 94, 25]\n      },\n      800: {\n        title: \"Orange 800\",\n        hsl: [22, 82, 15]\n      },\n      900: {\n        title: \"Orange 900\",\n        hsl: [17, 65, 12]\n      },\n      950: {\n        title: \"Orange 950\",\n        hsl: [14, 43, 9]\n      }\n    }\n  },\n  yellow: {\n    title: \"Yellow\",\n    tints: {\n      50: {\n        title: \"Yellow 50\",\n        hsl: [51, 94, 94]\n      },\n      100: {\n        title: \"Yellow 100\",\n        hsl: [52, 91, 86]\n      },\n      200: {\n        title: \"Yellow 200\",\n        hsl: [50, 90, 78]\n      },\n      300: {\n        title: \"Yellow 300\",\n        hsl: [47, 91, 65]\n      },\n      400: {\n        title: \"Yellow 400\",\n        hsl: [44, 95, 53]\n      },\n      500: {\n        title: \"Yellow 500\",\n        hsl: [39, 96, 42]\n      },\n      600: {\n        title: \"Yellow 600\",\n        hsl: [34, 90, 31]\n      },\n      700: {\n        title: \"Yellow 700\",\n        hsl: [31, 80, 22]\n      },\n      800: {\n        title: \"Yellow 800\",\n        hsl: [28, 66, 14]\n      },\n      900: {\n        title: \"Yellow 900\",\n        hsl: [24, 40, 11]\n      },\n      950: {\n        title: \"Yellow 950\",\n        hsl: [24, 20, 8]\n      }\n    }\n  },\n  green: {\n    title: \"Green\",\n    tints: {\n      50: {\n        title: \"Green 50\",\n        hsl: [157, 89, 95]\n      },\n      100: {\n        title: \"Green 100\",\n        hsl: [158, 89, 88]\n      },\n      200: {\n        title: \"Green 200\",\n        hsl: [158, 87, 82]\n      },\n      300: {\n        title: \"Green 300\",\n        hsl: [158, 86, 65]\n      },\n      400: {\n        title: \"Green 400\",\n        hsl: [159, 88, 50]\n      },\n      500: {\n        title: \"Green 500\",\n        hsl: [159, 96, 37]\n      },\n      600: {\n        title: \"Green 600\",\n        hsl: [159, 98, 24]\n      },\n      700: {\n        title: \"Green 700\",\n        hsl: [158, 98, 16]\n      },\n      800: {\n        title: \"Green 800\",\n        hsl: [158, 91, 10]\n      },\n      900: {\n        title: \"Green 900\",\n        hsl: [162, 72, 8]\n      },\n      950: {\n        title: \"Green 950\",\n        hsl: [172, 51, 6]\n      }\n    }\n  },\n  cyan: {\n    title: \"Cyan\",\n    tints: {\n      50: {\n        title: \"Cyan 50\",\n        hsl: [180, 92, 95]\n      },\n      100: {\n        title: \"Cyan 100\",\n        hsl: [180, 91, 88]\n      },\n      200: {\n        title: \"Cyan 200\",\n        hsl: [180, 87, 78]\n      },\n      300: {\n        title: \"Cyan 300\",\n        hsl: [180, 81, 66]\n      },\n      400: {\n        title: \"Cyan 400\",\n        hsl: [180, 81, 49]\n      },\n      500: {\n        title: \"Cyan 500\",\n        hsl: [182, 96, 38]\n      },\n      600: {\n        title: \"Cyan 600\",\n        hsl: [185, 96, 26]\n      },\n      700: {\n        title: \"Cyan 700\",\n        hsl: [185, 95, 16]\n      },\n      800: {\n        title: \"Cyan 800\",\n        hsl: [187, 86, 11]\n      },\n      900: {\n        title: \"Cyan 900\",\n        hsl: [188, 68, 9]\n      },\n      950: {\n        title: \"Cyan 950\",\n        hsl: [196, 37, 8]\n      }\n    }\n  }\n};\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n  if (!result)\n    throw new Error(\"input is not valid hex\");\n  return [parseInt(result[1], 16), parseInt(result[2], 16), parseInt(result[3], 16)];\n}\nfunction rgbToHsl([r, g, b]) {\n  r /= 255, g /= 255, b /= 255;\n  const cmin = Math.min(r, g, b), cmax = Math.max(r, g, b), delta = cmax - cmin;\n  let h = 0, s = 0, l = 0;\n  return delta == 0 ? h = 0 : cmax == r ? h = (g - b) / delta % 6 : cmax == g ? h = (b - r) / delta + 2 : h = (r - g) / delta + 4, h = Math.round(h * 60), h < 0 && (h += 360), l = (cmax + cmin) / 2, s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1)), s = +(s * 100).toFixed(0), l = +(l * 100).toFixed(0), [h, s, l];\n}\nfunction clamp(num) {\n  return Math.max(Math.min(num, 255), 0);\n}\nfunction darkenChannel(backdrop, source) {\n  return Math.min(backdrop, source);\n}\nfunction darken(b, s) {\n  return [\n    Math.round(clamp(darkenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(darkenChannel(b[2] / 255, s[2] / 255) * 255))\n  ];\n}\nfunction interpolate(min, max, val) {\n  const size = max - min;\n  return min + size * val;\n}\nfunction limit(darkest, lightest, source) {\n  const r = Math.round(interpolate(darkest[0], lightest[0], source[0] / 255)), g = Math.round(interpolate(darkest[1], lightest[1], source[1] / 255)), b = Math.round(interpolate(darkest[2], lightest[2], source[2] / 255));\n  return [r, g, b];\n}\nfunction screenChannel(backdrop, source) {\n  return backdrop + source - backdrop * source;\n}\nfunction screen(b, s) {\n  return [\n    Math.round(clamp(screenChannel(b[0] / 255, s[0] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[1] / 255, s[1] / 255) * 255)),\n    Math.round(clamp(screenChannel(b[2] / 255, s[2] / 255) * 255))\n  ];\n}\nexport {\n  COLOR_HUES,\n  COLOR_TINTS,\n  black,\n  blue,\n  buildTints,\n  color,\n  config,\n  cyan,\n  darken,\n  gray,\n  green,\n  hexToRgb,\n  hslToRgb,\n  hues,\n  limit,\n  magenta,\n  orange,\n  purple,\n  red,\n  rgbToHex,\n  rgbToHsl,\n  screen,\n  white,\n  yellow\n};\n//# sourceMappingURL=index.js.map\n","import {purple} from '@sanity/color'\nimport {SparklesIcon} from '@sanity/icons'\nimport {Text} from '@sanity/ui'\nimport {type CSSProperties, useMemo} from 'react'\nimport {useColorSchemeValue} from 'sanity'\nimport {keyframes, styled} from 'styled-components'\n\nconst Root = styled.span`\n  display: block;\n  width: 25px;\n  height: 25px;\n  position: relative;\n`\n\nconst dash = keyframes`\n  0% {\n    transform: rotate(0);\n  }\n  100% {\n    transform: rotate(43deg);\n  }\n`\n\nconst Outline = styled.svg`\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n\n  & > circle {\n    stroke: var(--ai-avatar-stroke-color);\n    stroke-width: 1.5px;\n    stroke-linecap: round;\n    transform-origin: center;\n    animation: ${dash} 500ms ease-in-out infinite;\n    transition: stroke-dasharray 200ms ease-in-out;\n\n    stroke-dasharray: 2.34px 0;\n\n    [data-state='active'] > & {\n      stroke-dasharray: 2px 2.34px;\n    }\n  }\n`\n\nconst IconDisc = styled.span`\n  background: var(--ai-avatar-disc-color);\n  color: white;\n  width: 21px;\n  height: 21px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 10.5px;\n  position: absolute;\n  top: 2px;\n  left: 2px;\n`\n\nexport function AssistAvatar(props: {state?: 'present' | 'active'}) {\n  const {state = 'present'} = props\n  const scheme = useColorSchemeValue()\n\n  const style = useMemo(() => {\n    if (scheme === 'dark') {\n      return {\n        [`--ai-avatar-stroke-color`]: purple[400].hex,\n        [`--ai-avatar-disc-color`]: purple[600].hex,\n      } as CSSProperties\n    }\n\n    return {\n      [`--ai-avatar-stroke-color`]: purple[500].hex,\n      [`--ai-avatar-disc-color`]: purple[600].hex,\n    } as CSSProperties\n  }, [scheme])\n\n  return (\n    <Root data-state={state} style={style}>\n      <Outline\n        width=\"25\"\n        height=\"25\"\n        viewBox=\"0 0 25 25\"\n        fill=\"none\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle cx=\"12.5\" cy=\"12.5\" r=\"11.75\" />\n      </Outline>\n      <IconDisc>\n        <Text as=\"span\" size={0} style={{color: 'inherit'}}>\n          <SparklesIcon style={{color: 'inherit'}} />\n        </Text>\n      </IconDisc>\n    </Root>\n  )\n}\n","// eslint-disable-next-line react/no-unused-prop-types\nimport {Card, Flex, Text, Tooltip} from '@sanity/ui'\nimport type {FormNodePresence} from 'sanity'\n\nimport {FadeInContent} from '../components/FadeInContent'\nimport {AssistAvatar} from './AssistAvatar'\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function AiFieldPresence(props: {presence: FormNodePresence}) {\n  return (\n    <Card style={{position: 'relative', background: 'transparent'}} contentEditable={false}>\n      <Tooltip\n        placement=\"left\"\n        content={\n          <Card padding={3} border>\n            <Flex align=\"center\">\n              <Text size={1}>Running instruction...</Text>\n            </Flex>\n          </Card>\n        }\n      >\n        <FadeInContent durationMs={300}>\n          <AssistAvatar state=\"active\" />\n        </FadeInContent>\n      </Tooltip>\n    </Card>\n  )\n}\n","import {createContext, useContext} from 'react'\nimport {DocumentInspector, ObjectSchemaType, PatchEvent} from 'sanity'\n\nimport {StudioAssistDocument} from '../types'\n\nexport type AssistDocumentContextValue = (\n  | {assistDocument: StudioAssistDocument; loading: false}\n  | {assistDocument: undefined; loading: true}\n) & {\n  documentIsNew: boolean\n  assistableDocumentId: string\n  documentIsAssistable: boolean\n  documentId: string\n  documentSchemaType: ObjectSchemaType\n  openInspector: (inspectorName: string, paneParams?: Record<string, string>) => void\n  closeInspector: (inspectorName?: string) => void\n  inspector: DocumentInspector | null\n  selectedPath?: string\n  documentOnChange: (event: PatchEvent) => void\n}\n\nexport const AssistDocumentContext = createContext<AssistDocumentContextValue | undefined>(\n  undefined,\n)\n\nexport function useAssistDocumentContext(): AssistDocumentContextValue {\n  const context = useContext(AssistDocumentContext)\n  if (!context) {\n    throw new Error('AssistDocumentContext value is missing')\n  }\n  return context\n}\n","import {useMemo} from 'react'\nimport {type FormNodePresence, isKeySegment, type Path, stringToPath} from 'sanity'\n\nimport {useAssistDocumentContext} from '../assistDocument/AssistDocumentContext'\nimport {maxHistoryVisibilityMs, pluginTitle} from '../constants'\nimport type {AiPresence} from '../types'\n\nconst NO_PRESENCE: FormNodePresence[] = []\n\nexport function useAssistPresence(path: Path, showFocusWithin?: boolean): FormNodePresence[] {\n  const context = useAssistDocumentContext()\n  const assistDocument = context && 'assistDocument' in context ? context.assistDocument : undefined\n  const tasks = assistDocument?.tasks\n\n  return useMemo(() => {\n    const activePresence = tasks\n      ?.filter((task) => !task.ended)\n      ?.flatMap((task) => task.presence ?? [])\n      ?.filter(\n        (p) =>\n          p.started &&\n          new Date().getTime() - new Date(p.started).getTime() < maxHistoryVisibilityMs,\n      )\n      .filter((presence) => {\n        if (!presence.path || !path.length) {\n          return false\n        }\n        const statusPath = stringToPath(presence.path)\n\n        if (!showFocusWithin && statusPath.length !== path.length) {\n          return false\n        }\n\n        return path.every((pathSegment, i) => {\n          const statusSegment = statusPath[i]\n          if (typeof pathSegment === 'string') {\n            return pathSegment === statusSegment\n          }\n          if (isKeySegment(pathSegment) && isKeySegment(statusSegment)) {\n            return pathSegment._key === statusSegment._key\n          }\n          return false\n        })\n      })\n    if (!activePresence?.length) {\n      return NO_PRESENCE\n    }\n\n    return activePresence.map((status) => aiPresence(status, path))\n  }, [showFocusWithin, tasks, path])\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nexport function aiPresence(presence: AiPresence, path: Path, title?: string): FormNodePresence {\n  return {\n    user: {\n      id: `sanity-assistant_${presence._key}`,\n      displayName: pluginTitle,\n    },\n    path: path,\n    sessionId: 'not-available',\n    lastActiveAt: presence?.started ?? new Date().toISOString(),\n  }\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useContext, useMemo} from 'react'\nimport {FieldProps, isArraySchemaType, pathToString} from 'sanity'\n\nimport {assistFormId} from '../_lib/form/constants'\nimport {isAssistSupported} from '../helpers/assistSupported'\nimport {isPortableTextArray, isType} from '../helpers/typeUtils'\nimport {AssistOnboardingPopover} from '../onboarding/FieldActionsOnboarding'\nimport {FirstAssistedPathContext} from '../onboarding/FirstAssistedPathProvider'\nimport {fieldOnboardingKey, useOnboardingFeature} from '../onboarding/onboardingStore'\nimport {AiFieldPresence} from '../presence/AiFieldPresence'\nimport {useAssistPresence} from '../presence/useAssistPresence'\nimport {contextDocumentTypeName} from '../types'\n\nexport function AssistFieldWrapper(props: FieldProps) {\n  const {schemaType} = props\n\n  const isSupported = useMemo(() => isAssistSupported(schemaType), [schemaType])\n\n  if (\n    !isSupported ||\n    schemaType.name.startsWith('sanity.') ||\n    schemaType.name === contextDocumentTypeName\n  ) {\n    return props.renderDefault(props)\n  }\n  if (\n    !isType(props.schemaType, 'document') &&\n    props.inputId !== 'root' &&\n    props.inputId !== assistFormId\n  ) {\n    return <AssistField {...props}>{props.children}</AssistField>\n  }\n\n  return props.renderDefault(props)\n}\n\nexport function AssistField(props: FieldProps) {\n  const {path} = props\n\n  const isPortableText = useMemo(\n    () => !!(isArraySchemaType(props.schemaType) && isPortableTextArray(props.schemaType)),\n    [props.schemaType],\n  )\n\n  const presence = useAssistPresence(props.path, isPortableText)\n\n  const firstAssistedPath = useContext(FirstAssistedPathContext)\n  const isFirstAssisted = useMemo(\n    () => pathToString(path) === firstAssistedPath,\n    [path, firstAssistedPath],\n  )\n\n  const {showOnboarding, dismissOnboarding} = useOnboardingFeature(fieldOnboardingKey)\n  const singlePresence = presence[0]\n\n  const actions = (\n    <Flex gap={2} align=\"center\" justify=\"space-between\">\n      {singlePresence && (\n        <Box>\n          <AiFieldPresence presence={singlePresence} />\n        </Box>\n      )}\n\n      {isFirstAssisted && showOnboarding && <AssistOnboardingPopover dismiss={dismissOnboarding} />}\n    </Flex>\n  )\n\n  return props.renderDefault({\n    ...props,\n\n    // When showing the onboarding, prevent default field actions from being rendered\n    actions: isFirstAssisted && showOnboarding ? [] : props.actions,\n\n    // Render presence (and possibly onboarding) in the internal slot (between presence and the field actions)\n    // eslint-disable-next-line camelcase\n    __internal_slot: actions,\n  })\n}\n","export function hasOverflowScroll(el: HTMLElement): boolean {\n  const overflow = getComputedStyle(el).overflow\n\n  return overflow.includes('auto') || overflow.includes('hidden') || overflow.includes('scroll')\n}\n","import {useEffect, useMemo, useRef, useState} from 'react'\n\nimport {hasOverflowScroll} from './helpers'\nimport {Rect, Scroll} from './types'\n\nexport function useRegionRects() {\n  const ref = useRef<HTMLDivElement>(null)\n\n  const [relativeBoundsRect, setRelativeBoundsRect] = useState<Rect | null>(null)\n  const [relativeElementRect, setRelativeElementRect] = useState<Rect | null>(null)\n  const [boundsScroll, setBoundsScroll] = useState<Scroll>({x: 0, y: 0})\n  const [scroll, setScroll] = useState<Scroll>({x: 0, y: 0})\n\n  const boundsScrollXRef = useRef(0)\n  const boundsScrollYRef = useRef(0)\n\n  const elementScrollXRef = useRef(0)\n  const elementScrollYRef = useRef(0)\n\n  useEffect(() => {\n    const el = ref.current\n\n    if (!el) return undefined\n\n    const scrollParents: HTMLElement[] = []\n    let parent = el.parentElement\n\n    while (parent && parent !== document.body) {\n      if (\n        hasOverflowScroll(parent)\n        // || parent.scrollHeight > parent.clientHeight\n      ) {\n        scrollParents.push(parent)\n      }\n\n      parent = parent.parentElement\n    }\n\n    function handleResize() {\n      const scrollParent = scrollParents[0]\n\n      const boundsRect = scrollParent?.getBoundingClientRect() || {\n        x: 0,\n        y: 0,\n        width: window.innerWidth,\n        height: window.innerHeight,\n      }\n\n      const domRect = el!.getBoundingClientRect()\n\n      setRelativeBoundsRect({\n        x: boundsRect.x + boundsScrollXRef.current,\n        y: boundsRect.y + boundsScrollYRef.current,\n        w: boundsRect.width,\n        h: boundsRect.height,\n      })\n\n      setRelativeElementRect({\n        x: domRect.x + elementScrollXRef.current,\n        y: domRect.y + elementScrollYRef.current,\n        w: domRect.width,\n        h: domRect.height,\n      })\n    }\n\n    function handleScroll() {\n      let scrollX = window.scrollX\n      let scrollY = window.scrollY\n\n      for (const scrollParent of scrollParents) {\n        scrollX += scrollParent.scrollLeft\n        scrollY += scrollParent.scrollTop\n      }\n\n      const scrollParent = scrollParents[0]\n\n      boundsScrollXRef.current = scrollX - (scrollParent?.scrollLeft || window.scrollX)\n\n      boundsScrollYRef.current = scrollY - (scrollParent?.scrollTop || window.scrollY)\n\n      setBoundsScroll({\n        x: boundsScrollXRef.current,\n        y: boundsScrollYRef.current,\n      })\n\n      elementScrollXRef.current = scrollX\n      elementScrollYRef.current = scrollY\n\n      setScroll({x: scrollX, y: scrollY})\n    }\n\n    window.addEventListener('scroll', handleScroll, {passive: true})\n\n    const ro = new ResizeObserver(handleResize)\n\n    ro.observe(el)\n\n    for (const scrollParent of scrollParents) {\n      scrollParent.addEventListener('scroll', handleScroll, {passive: true})\n      ro.observe(scrollParent)\n    }\n\n    handleScroll()\n\n    return () => {\n      ro.unobserve(el)\n\n      for (const scrollParent of scrollParents) {\n        ro.unobserve(scrollParent)\n        scrollParent.removeEventListener('scroll', handleScroll)\n      }\n\n      ro.disconnect()\n\n      window.removeEventListener('scroll', handleScroll)\n    }\n  }, [])\n\n  const bounds: Rect | null = useMemo(\n    () =>\n      relativeBoundsRect && {\n        x: relativeBoundsRect.x - boundsScroll.x,\n        y: relativeBoundsRect.y - boundsScroll.y,\n        w: relativeBoundsRect.w,\n        h: relativeBoundsRect.h,\n      },\n    [relativeBoundsRect, boundsScroll],\n  )\n\n  const element: Rect | null = useMemo(\n    () =>\n      relativeElementRect && {\n        x: relativeElementRect.x - scroll.x,\n        y: relativeElementRect.y - scroll.y,\n        w: relativeElementRect.w,\n        h: relativeElementRect.h,\n      },\n    [relativeElementRect, scroll],\n  )\n\n  return {bounds, element, ref}\n}\n","import {HTMLProps, useEffect} from 'react'\n\nimport {ConnectorRegionRects} from './types'\nimport {useRegionRects} from './useRegionRects'\n\nexport function ConnectorRegion(\n  props: {\n    onRectsChange?: (rects: ConnectorRegionRects | null) => void\n  } & HTMLProps<HTMLDivElement>,\n) {\n  const {children, onRectsChange, ...restProps} = props\n\n  const {bounds, element, ref} = useRegionRects()\n\n  useEffect(() => {\n    onRectsChange?.(bounds && element ? {bounds, element} : null)\n  }, [bounds, element, onRectsChange])\n\n  return (\n    <div {...restProps} ref={ref}>\n      {children}\n    </div>\n  )\n}\n","import {createContext} from 'react'\n\nimport {ConnectorsStore} from './ConnectorsStore'\n\nexport const ConnectorsStoreContext = createContext<ConnectorsStore | null>(null)\n","import {useContext} from 'react'\n\nimport {ConnectorsStore} from './ConnectorsStore'\nimport {ConnectorsStoreContext} from './ConnectorsStoreContext'\n\nexport function useConnectorsStore(): ConnectorsStore {\n  const store = useContext(ConnectorsStoreContext)\n\n  if (!store) {\n    throw new Error('Missing connectors store context')\n  }\n\n  return store\n}\n","import {HTMLProps, useEffect, useState} from 'react'\n\nimport {ConnectorRegion} from './ConnectorRegion'\nimport {ConnectorRegionRects} from './types'\nimport {useConnectorsStore} from './useConnectorsStore'\n\nexport function ConnectFromRegion(\n  props: {_key: string; zIndex: number} & HTMLProps<HTMLDivElement>,\n) {\n  const {children, _key: key, zIndex, ...restProps} = props\n  const store = useConnectorsStore()\n  const [rects, setRects] = useState<ConnectorRegionRects | null>(null)\n\n  useEffect(() => store.from.subscribe(key, {zIndex}), [key, store, zIndex])\n\n  useEffect(() => {\n    if (rects) store.from.next(key, rects)\n  }, [key, rects, store])\n\n  return (\n    <ConnectorRegion {...restProps} onRectsChange={setRects}>\n      {children}\n    </ConnectorRegion>\n  )\n}\n","import {Connector, ConnectorRegionRects} from './types'\n\nexport interface ConnectorsStore {\n  connectors: {\n    subscribe: (observer: (connectors: Connector[]) => void) => () => void\n  }\n\n  from: {\n    subscribe: (key: string, payload?: Record<string, unknown>) => () => void\n    next: (key: string, rects: ConnectorRegionRects) => void\n  }\n\n  to: {\n    subscribe: (key: string, payload?: Record<string, unknown>) => () => void\n    next: (key: string, rects: ConnectorRegionRects) => void\n  }\n}\n\nexport function createConnectorsStore(): ConnectorsStore {\n  const configKeys: string[] = []\n  const fieldKeys: string[] = []\n\n  const channels = {\n    from: new Map<string, ConnectorRegionRects | null>(),\n    to: new Map<string, ConnectorRegionRects | null>(),\n  }\n\n  const payloads = {\n    from: new Map<string, Record<string, unknown> | undefined>(),\n    to: new Map<string, Record<string, unknown> | undefined>(),\n  }\n\n  const observers: ((connectors: Connector[]) => void)[] = []\n\n  function notifyObservers() {\n    const connectors: Connector[] = []\n\n    for (const key of configKeys) {\n      const toRects = channels.to.get(key)\n      const toPayload = payloads.from.get(key)\n\n      const fromRects = channels.from.get(key)\n      const fromPayload = payloads.from.get(key)\n\n      if (toRects && fromRects) {\n        connectors.push({\n          key,\n          from: {...fromRects, payload: fromPayload},\n          to: {...toRects, payload: toPayload},\n        })\n      }\n    }\n\n    for (const observer of observers) {\n      observer(connectors)\n    }\n  }\n\n  return {\n    to: {\n      subscribe(key, payload) {\n        channels.to.set(key, null)\n        payloads.to.set(key, payload)\n\n        configKeys.push(key)\n\n        return () => {\n          channels.to.delete(key)\n          payloads.to.delete(key)\n\n          const idx = configKeys.indexOf(key)\n\n          if (idx > -1) configKeys.splice(idx, 1)\n\n          notifyObservers()\n        }\n      },\n      next(key, rects) {\n        channels.to.set(key, rects)\n\n        if (fieldKeys.includes(key)) notifyObservers()\n      },\n    },\n\n    connectors: {\n      subscribe(observer) {\n        observers.push(observer)\n\n        return () => {\n          const idx = observers.indexOf(observer)\n\n          if (idx > -1) observers.splice(idx, 1)\n        }\n      },\n    },\n\n    from: {\n      subscribe(key, payload) {\n        channels.from.set(key, null)\n        payloads.from.set(key, payload)\n\n        fieldKeys.push(key)\n\n        return () => {\n          channels.from.delete(key)\n          payloads.from.delete(key)\n\n          const idx = fieldKeys.indexOf(key)\n\n          if (idx > -1) fieldKeys.splice(idx, 1)\n\n          notifyObservers()\n        }\n      },\n      next(key, rects) {\n        channels.from.set(key, rects)\n\n        if (configKeys.includes(key)) notifyObservers()\n      },\n    },\n  }\n}\n","import {ReactNode, useEffect, useMemo} from 'react'\n\nimport {ConnectorsStore, createConnectorsStore} from './ConnectorsStore'\nimport {ConnectorsStoreContext} from './ConnectorsStoreContext'\nimport {Connector} from './types'\n\nexport function ConnectorsProvider(props: {\n  children?: ReactNode\n  onConnectorsChange?: (connectors: Connector[]) => void\n}) {\n  const {children, onConnectorsChange} = props\n  const store: ConnectorsStore = useMemo(() => createConnectorsStore(), [])\n\n  useEffect(\n    () => onConnectorsChange && store.connectors.subscribe(onConnectorsChange),\n    [onConnectorsChange, store],\n  )\n\n  return <ConnectorsStoreContext.Provider value={store}>{children}</ConnectorsStoreContext.Provider>\n}\n","import {\n  ConnectorLine,\n  ConnectorLinePoint,\n  ConnectorOptions,\n  ConnectorRegionRects,\n  Rect,\n} from './types'\n\nfunction getConnectorLinePoint(\n  options: ConnectorOptions,\n  rect: Rect,\n  bounds: Rect,\n): ConnectorLinePoint {\n  const centerY = rect.y + rect.h / 2\n  const isAbove = rect.y + rect.h < bounds.y + options.arrow.marginY\n  const isBelow = rect.y > bounds.y + bounds.h - options.arrow.marginY\n\n  return {\n    bounds,\n    x: rect.x,\n    y: centerY,\n    centerY,\n    startY: rect.y + options.path.marginY,\n    endY: rect.y + rect.h - options.path.marginY,\n    isAbove,\n    isBelow,\n    outOfBounds: isAbove || isBelow,\n  }\n}\n\nexport function mapConnectorToLine(\n  options: ConnectorOptions,\n  connector: {from: ConnectorRegionRects; to: ConnectorRegionRects},\n): ConnectorLine {\n  const fromBounds: Rect = {\n    y: connector.from.bounds.y + options.arrow.threshold,\n    // bottom: connector.from.bounds.y + connector.from.bounds.h - options.arrow.threshold,\n    x: connector.from.bounds.x,\n    // right: connector.from.bounds.x + connector.from.bounds.w,\n    w: connector.from.bounds.w,\n    h: connector.from.bounds.h - options.arrow.threshold * 2,\n  }\n\n  const from = getConnectorLinePoint(options, connector.from.element, fromBounds)\n  from.x = connector.from.element.x + connector.from.element.w // + 1\n\n  const fromBottom = fromBounds.y + fromBounds.h\n\n  const toBounds: Rect = {\n    y: connector.to.bounds.y + options.arrow.threshold,\n    // bottom: connector.to.bounds.y + connector.to.bounds.h - options.arrow.threshold,\n    x: connector.to.bounds.x,\n    // right: connector.to.bounds.x + connector.to.bounds.w,\n    w: connector.to.bounds.w,\n    h: connector.to.bounds.h - options.arrow.threshold * 2,\n  }\n\n  const toBottom = toBounds.y + toBounds.h\n\n  const to = getConnectorLinePoint(options, connector.to.element, toBounds)\n\n  const maxStartY = Math.max(to.startY, from.startY)\n\n  // Align from <-> to vertically\n  from.y = Math.min(maxStartY, from.endY)\n  if (from.y < toBounds.y) {\n    from.y = Math.min(toBounds.y, from.endY)\n  } else if (from.y > toBottom) {\n    from.y = Math.max(toBottom, from.startY)\n  }\n  to.y = Math.min(maxStartY, to.endY)\n  if (to.y < fromBounds.y) {\n    to.y = Math.min(fromBounds.y, to.endY)\n  } else if (to.y > fromBottom) {\n    to.y = Math.max(fromBottom, to.startY)\n  }\n\n  // Keep within bounds\n  from.y = Math.min(Math.max(from.y, fromBounds.y), fromBottom)\n  to.y = Math.min(Math.max(to.y, toBounds.y), toBottom)\n\n  return {from, to}\n}\n","import {ConnectorOptions} from '../../_lib/connector'\n\nexport function arrowPath(options: ConnectorOptions, x: number, y: number, dir: 1 | -1): string {\n  return [\n    `M ${x - options.arrow.size} ${y - options.arrow.size * dir} `,\n    `L ${x} ${y}`,\n    `L ${x + options.arrow.size} ${y - options.arrow.size * dir}`,\n  ].join('')\n}\n","import {ConnectorLine, ConnectorOptions} from '../../_lib/connector'\n\nexport function drawArrowPath(\n  options: ConnectorOptions,\n  x: number,\n  y: number,\n  dir: number,\n): string {\n  return [\n    `M ${x - options.arrow.size} ${y - options.arrow.size * dir} `,\n    `L ${x} ${y}`,\n    `L ${x + options.arrow.size} ${y - options.arrow.size * dir}`,\n  ].join('')\n}\n\nfunction moveTo(x: number, y: number) {\n  return `M${x} ${y}`\n}\n\nfunction lineTo(x: number, y: number) {\n  return `L${x} ${y}`\n}\n\nfunction join(strings: string[], delim = '') {\n  return strings.join(delim)\n}\n\nfunction quadCurve(x1: number, y1: number, x: number, y: number) {\n  return `Q${x1} ${y1} ${x} ${y}`\n}\n\nexport function drawConnectorPath(options: ConnectorOptions, line: ConnectorLine): string {\n  const {cornerRadius} = options.path\n  const {from, to} = line\n  const {x: fromX, y: fromY} = from\n  const {x: _toX, y: toY} = to\n\n  const toX = _toX - 1\n\n  // Calculate divider position\n  const dividerX = to.bounds.x + options.divider.offsetX\n\n  // Calculate connector FROM path X position\n  const fromPathX = from.isAbove || from.isBelow ? fromX + options.arrow.marginX : fromX\n\n  // Calculate maximum corner radius\n  const r0 = Math.min(cornerRadius, Math.abs(fromPathX - dividerX) / 2)\n  const r1 = Math.min(cornerRadius, Math.abs(fromY - toY) / 2)\n\n  const cmds: string[] = []\n\n  // FROM\n  if (from.isAbove) {\n    cmds.push(\n      moveTo(\n        fromX + options.arrow.marginX,\n        fromY - options.arrow.threshold + options.arrow.marginY,\n      ),\n      lineTo(fromX + options.arrow.marginX, fromY - r0),\n      quadCurve(fromX + options.arrow.marginX, fromY, fromX + options.arrow.marginX + r0, fromY),\n    )\n  } else if (from.isBelow) {\n    cmds.push(\n      moveTo(\n        fromX + options.arrow.marginX,\n        fromY + options.arrow.threshold - options.arrow.marginY,\n      ),\n      lineTo(fromX + options.arrow.marginX, fromY + r0),\n      quadCurve(fromX + options.arrow.marginX, fromY, fromX + options.arrow.marginX + r0, fromY),\n    )\n  } else {\n    cmds.push(moveTo(fromX, fromY))\n  }\n\n  // TO\n  if (to.isAbove) {\n    if (fromY < to.bounds.y) {\n      cmds.push(\n        lineTo(dividerX - r1, fromY),\n        quadCurve(dividerX, fromY, dividerX, fromY + r1),\n        lineTo(dividerX, toY - r1),\n        quadCurve(dividerX, toY, dividerX + r1, toY),\n        lineTo(dividerX - cornerRadius, toY),\n        quadCurve(dividerX, toY, dividerX, toY - cornerRadius),\n        lineTo(dividerX, toY - options.arrow.threshold + options.arrow.marginY),\n      )\n    } else {\n      cmds.push(\n        lineTo(dividerX - cornerRadius, fromY),\n        quadCurve(dividerX, fromY, dividerX, fromY - cornerRadius),\n        lineTo(dividerX, toY - options.arrow.threshold + options.arrow.marginY),\n      )\n    }\n  } else if (to.isBelow) {\n    if (fromY > to.bounds.y + to.bounds.h) {\n      // curl around\n      cmds.push(\n        lineTo(dividerX - options.arrow.marginX - r1, fromY),\n        quadCurve(\n          dividerX - options.arrow.marginX,\n          fromY,\n          dividerX - options.arrow.marginX,\n          fromY - r1,\n        ),\n        lineTo(dividerX - options.arrow.marginX, toY + r1),\n        quadCurve(\n          dividerX - options.arrow.marginX,\n          toY,\n          dividerX - options.arrow.marginX + r1,\n          toY,\n        ),\n        lineTo(dividerX - cornerRadius, toY),\n        quadCurve(dividerX, toY, dividerX, toY + cornerRadius),\n        lineTo(dividerX, toY + options.arrow.threshold - options.arrow.marginY),\n      )\n    } else {\n      cmds.push(\n        lineTo(dividerX - cornerRadius, fromY),\n        quadCurve(dividerX, fromY, dividerX, fromY + cornerRadius),\n        lineTo(dividerX, toY + options.arrow.threshold - options.arrow.marginY),\n      )\n    }\n  } else if (fromY < toY) {\n    cmds.push(\n      lineTo(dividerX - r0, fromY),\n      quadCurve(dividerX, fromY, dividerX, fromY + r1),\n      lineTo(dividerX, toY - r1),\n      quadCurve(dividerX, toY, dividerX + r1, toY),\n      lineTo(toX, toY),\n    )\n  } else {\n    cmds.push(\n      lineTo(dividerX - Math.min(r0, r1), fromY),\n      quadCurve(dividerX, fromY, dividerX, fromY - Math.min(r0, r1)),\n      lineTo(dividerX, toY + r1),\n      quadCurve(dividerX, toY, dividerX + r1, toY),\n      lineTo(toX, toY),\n    )\n  }\n\n  return join(cmds)\n}\n","import {rgba, useTheme} from '@sanity/ui'\nimport {useMemo} from 'react'\n\nimport {ConnectorOptions, mapConnectorToLine, Rect} from '../_lib/connector'\nimport {arrowPath} from './draw/arrowPath'\nimport {drawConnectorPath} from './draw/connectorPath'\n\nexport function ConnectorPath(props: {\n  from: {bounds: Rect; element: Rect}\n  to: {bounds: Rect; element: Rect}\n  options: ConnectorOptions\n}) {\n  const {from, options, to} = props\n  const {strokeWidth} = options.path\n  const theme = useTheme()\n\n  const line = useMemo(() => mapConnectorToLine(options, {from, to}), [from, options, to])\n\n  return (\n    <>\n      <path\n        d={drawConnectorPath(options, line)}\n        stroke={theme.sanity.color.base.bg}\n        strokeWidth={strokeWidth + 4}\n      />\n\n      <path\n        d={drawConnectorPath(options, line)}\n        stroke={rgba(theme.sanity.color.base.border, 0.5)}\n        strokeWidth={strokeWidth}\n      />\n\n      {line.from.isAbove && (\n        <path\n          d={arrowPath(\n            options,\n            line.from.x + options.arrow.marginX,\n            line.from.bounds.y - options.arrow.threshold + options.arrow.marginY,\n            -1,\n          )}\n          stroke={theme.sanity.color.base.border}\n          strokeWidth={strokeWidth}\n        />\n      )}\n\n      {line.from.isBelow && (\n        <path\n          d={arrowPath(\n            options,\n            line.from.x + options.arrow.marginX,\n            line.from.bounds.y +\n              line.from.bounds.h +\n              options.arrow.threshold -\n              options.arrow.marginY,\n            1,\n          )}\n          stroke={theme.sanity.color.base.border}\n          strokeWidth={strokeWidth}\n        />\n      )}\n    </>\n  )\n}\n","import {Fragment, useEffect, useState} from 'react'\n\nimport {Connector, ConnectorOptions} from '../_lib/connector'\nimport {ConnectorPath} from './ConnectorPath'\n\nconst DEBUG = false\n\nconst options: ConnectorOptions = {\n  arrow: {\n    marginX: 10.5,\n    marginY: 5,\n    size: 4,\n    threshold: 16.5,\n  },\n  divider: {\n    offsetX: -10.5,\n  },\n  path: {\n    cornerRadius: 3,\n    marginY: 10.5,\n    strokeWidth: 1,\n  },\n}\n\nexport function AssistConnectorsOverlay(props: {connectors: Connector[]}) {\n  const {connectors} = props\n  // const zIndexes = connectors.map((connector) => {\n  //   const zIndex = connector.from.payload?.zIndex\n\n  //   if (typeof zIndex === 'number') {\n  //     return zIndex\n  //   }\n\n  //   return 1\n  // })\n  const [, setRedraw] = useState(false)\n  useEffect(() => {\n    // hacky workaround to force redraw for connectors on initial render\n    // this seem to improve initial measurements of elements\n    setRedraw(true)\n  }, [])\n\n  // const zIndex = zIndexes.length ? Math.max(...zIndexes) : 1\n\n  return (\n    <>\n      <svg\n        fill=\"none\"\n        width={window.innerWidth}\n        height={window.innerHeight}\n        style={{\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          pointerEvents: 'none',\n          zIndex: 150,\n          // zIndex,\n        }}\n      >\n        {connectors.map((connector) => (\n          <ConnectorPath\n            from={connector.from}\n            key={connector.key}\n            options={options}\n            to={connector.to}\n          />\n        ))}\n      </svg>\n      {DEBUG &&\n        connectors.map(({key, from, to}) => {\n          return (\n            <Fragment key={key}>\n              <div\n                style={{\n                  position: 'fixed',\n                  top: from.bounds.y,\n                  left: from.bounds.x,\n                  width: from.bounds.w,\n                  height: from.bounds.h,\n                  pointerEvents: 'none',\n                  overflow: 'hidden',\n                  outline: '1px dotted red',\n                  outlineOffset: -1,\n                  zIndex: 10000000 - 1,\n                }}\n              >\n                <div\n                  style={{\n                    position: 'absolute',\n                    top: from.element.y - from.bounds.y,\n                    left: from.element.x - from.bounds.x,\n                    width: from.element.w,\n                    height: from.element.h,\n                    border: '1px solid red',\n                    boxSizing: 'border-box',\n                  }}\n                />\n              </div>\n\n              <div\n                style={{\n                  position: 'fixed',\n                  top: to.bounds.y,\n                  left: to.bounds.x,\n                  width: to.bounds.w,\n                  height: to.bounds.h,\n                  pointerEvents: 'none',\n                  overflow: 'hidden',\n                  outline: '1px dotted teal',\n                  outlineOffset: -1,\n                  zIndex: 10000000 - 1,\n                }}\n              >\n                <div\n                  style={{\n                    position: 'absolute',\n                    top: to.element.y - to.bounds.y,\n                    left: to.element.x - to.bounds.x,\n                    width: to.element.w,\n                    height: to.element.h,\n                    border: '1px solid teal',\n                    boxSizing: 'border-box',\n                  }}\n                />\n              </div>\n            </Fragment>\n          )\n        })}\n    </>\n  )\n}\n","import {get} from 'lodash'\nimport type {SanityDocumentLike} from 'sanity'\n\nexport const getLanguageParams = (\n  select: Record<string, string> | undefined,\n  document: SanityDocumentLike | undefined,\n): Record<string, unknown> => {\n  if (!select || !document) {\n    return {}\n  }\n\n  const selection: Record<string, string> = select || {}\n  const selectedValue: Record<string, unknown> = {}\n  for (const [key, path] of Object.entries(selection)) {\n    let value = get(document, path)\n    if (Array.isArray(value)) {\n      // If there are references in the array, ensure they have `_ref` set, otherwise they are considered empty and can safely be ignored\n      value = value.filter((item) =>\n        typeof item === 'object' ? item?._type !== 'reference' || '_ref' in item : true,\n      )\n    }\n    selectedValue[key] = value\n  }\n\n  return selectedValue\n}\n","export const toFieldLanguagesKeyPrefix = 'sanityStudio:assist:field-languages:from:'\n\nexport function getPreferredToFieldLanguages(fromLanguageId: string): string[] {\n  if (typeof localStorage === 'undefined') {\n    return []\n  }\n\n  const value = localStorage.getItem(`${toFieldLanguagesKeyPrefix}${fromLanguageId}`)\n  return value ? (JSON.parse(value) as string[]) : []\n}\n\nexport function setPreferredToFieldLanguages(fromLanguageId: string, languageIds: string[]) {\n  if (typeof localStorage === 'undefined') {\n    return\n  }\n\n  localStorage.setItem(`${toFieldLanguagesKeyPrefix}${fromLanguageId}`, JSON.stringify(languageIds))\n}\n","import {PlayIcon} from '@sanity/icons'\nimport {Box, Button, Checkbox, Dialog, Flex, Radio, Spinner, Stack, Text, Tooltip} from '@sanity/ui'\nimport {\n  createContext,\n  type PropsWithChildren,\n  useCallback,\n  useContext,\n  useId,\n  useMemo,\n  useState,\n} from 'react'\nimport {\n  type ObjectSchemaType,\n  type Path,\n  pathToString,\n  type SanityDocumentLike,\n  useClient,\n} from 'sanity'\n\nimport {useAiAssistanceConfig} from '../assistLayout/AiAssistanceConfigContext'\nimport type {ConditionalMemberState} from '../helpers/conditionalMembers'\nimport {useApiClient, useTranslate} from '../useApiClient'\nimport {getLanguageParams} from './getLanguageParams'\nimport {getPreferredToFieldLanguages, setPreferredToFieldLanguages} from './languageStore'\nimport {\n  defaultLanguageOutputs,\n  type FieldLanguageMap,\n  getDocumentMembersFlat,\n  getFieldLanguageMap,\n} from './paths'\nimport type {Language} from './types'\n\ninterface FieldTranslationParams {\n  document: SanityDocumentLike\n  documentSchema: ObjectSchemaType\n  translatePath: Path\n  conditionalMembers: ConditionalMemberState[]\n}\n\nexport interface FieldTranslationContextValue {\n  openFieldTranslation: (args: FieldTranslationParams) => void\n  translationLoading: boolean\n}\n\nexport const FieldTranslationContext = createContext<FieldTranslationContextValue>({\n  openFieldTranslation: () => {},\n  translationLoading: false,\n})\n\nexport function useFieldTranslation() {\n  return useContext(FieldTranslationContext)\n}\n\nfunction hasValuesToTranslate(\n  fieldLanguageMaps: FieldLanguageMap[] | undefined,\n  fromLanguage: Language | undefined,\n  basePath: Path,\n) {\n  return fieldLanguageMaps?.some(\n    (map) =>\n      map.inputLanguageId === fromLanguage?.id &&\n      map.inputPath &&\n      pathToString(map.inputPath).startsWith(pathToString(basePath)),\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function FieldTranslationProvider(props: PropsWithChildren<{}>) {\n  const {config: assistConfig} = useAiAssistanceConfig()\n  const apiClient = useApiClient(assistConfig.__customApiClient)\n  const config = assistConfig.translate?.field\n  const {translate: runTranslate} = useTranslate(apiClient)\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  const [fieldTranslationParams, setFieldTranslationParams] = useState<\n    FieldTranslationParams | undefined\n  >()\n  const [languages, setLanguages] = useState<Language[] | undefined>()\n  const [fromLanguage, setFromLanguage] = useState<Language | undefined>(undefined)\n  const [toLanguages, setToLanguages] = useState<Language[] | undefined>(undefined)\n  const [fieldLanguageMaps, setFieldLanguageMaps] = useState<FieldLanguageMap[] | undefined>()\n\n  const close = useCallback(() => {\n    setDialogOpen(false)\n    setLanguages(undefined)\n    setFieldTranslationParams(undefined)\n  }, [])\n  const languageClient = useClient({apiVersion: config?.apiVersion ?? '2022-11-27'})\n  const documentId = fieldTranslationParams?.document?._id\n  const id = useId()\n\n  const selectFromLanguage = useCallback(\n    (\n      from: Language,\n      languages: Language[] | undefined,\n      params: FieldTranslationParams | undefined,\n    ) => {\n      const {document, documentSchema} = params ?? {}\n      setFromLanguage(from)\n      if (!document || !documentSchema || !params || !languages) {\n        setFieldLanguageMaps(undefined)\n        return\n      }\n\n      const preferred = getPreferredToFieldLanguages(from.id)\n      const allToLanguages = languages.filter((l) => l.id !== from?.id)\n      const filteredToLanguages = allToLanguages.filter(\n        (l) => !preferred.length || preferred.includes(l.id),\n      )\n\n      setToLanguages(filteredToLanguages)\n      const fromId = from?.id\n      const allToIds = allToLanguages?.map((l) => l.id) ?? []\n      const docMembers = getDocumentMembersFlat(document, documentSchema)\n      if (fromId && allToIds?.length) {\n        const transMap = getFieldLanguageMap(\n          documentSchema,\n          docMembers,\n          fromId,\n          allToIds.filter((toId) => fromId !== toId),\n          config?.translationOutputs ?? defaultLanguageOutputs,\n        )\n        setFieldLanguageMaps(transMap)\n      } else {\n        setFieldLanguageMaps(undefined)\n      }\n    },\n    [config],\n  )\n\n  const toggleToLanguage = useCallback(\n    (\n      toggledLang: Language,\n      toLanguages: Language[] | undefined,\n      languages: Language[] | undefined,\n    ) => {\n      if (!languages || !fromLanguage) {\n        return\n      }\n      const wasSelected = !!toLanguages?.find((l) => l.id === toggledLang.id)\n      const newToLangs = languages.filter(\n        (anyLang) =>\n          !!toLanguages?.find(\n            (selectedLang) => toggledLang.id !== selectedLang.id && selectedLang.id === anyLang.id,\n          ) ||\n          (toggledLang.id === anyLang.id && !wasSelected),\n      )\n      setToLanguages(newToLangs)\n      setPreferredToFieldLanguages(\n        fromLanguage.id,\n        newToLangs.map((l) => l.id),\n      )\n    },\n    [fromLanguage],\n  )\n\n  const openFieldTranslation = useCallback(\n    async (params: FieldTranslationParams) => {\n      setDialogOpen(true)\n      const languageParams = getLanguageParams(config?.selectLanguageParams, params.document)\n      const languages: Language[] | undefined = await (typeof config?.languages === 'function'\n        ? config?.languages(languageClient, languageParams)\n        : Promise.resolve(config?.languages))\n      setLanguages(languages)\n      setFieldTranslationParams(params)\n      const fromLanguage = languages?.[0]\n      if (fromLanguage) {\n        selectFromLanguage(fromLanguage, languages, params)\n      } else {\n        console.error('No languages available for selected language params', languageParams)\n      }\n    },\n    [selectFromLanguage, config, languageClient],\n  )\n\n  const contextValue: FieldTranslationContextValue = useMemo(() => {\n    return {\n      openFieldTranslation,\n      translationLoading: false,\n    }\n  }, [openFieldTranslation])\n\n  const runDisabled =\n    !fromLanguage ||\n    !toLanguages?.length ||\n    !fieldLanguageMaps?.length ||\n    !documentId ||\n    !hasValuesToTranslate(fieldLanguageMaps, fromLanguage, fieldTranslationParams.translatePath)\n\n  const onRunTranslation = useCallback(() => {\n    const translatePath = fieldTranslationParams?.translatePath\n    if (fieldLanguageMaps && documentId && translatePath) {\n      runTranslate({\n        documentId,\n        translatePath: translatePath,\n        fieldLanguageMap: fieldLanguageMaps.map((map) => ({\n          ...map,\n          // eslint-disable-next-line max-nested-callbacks\n          outputs: map.outputs.filter((out) => !!toLanguages?.find((l) => l.id === out.id)),\n        })),\n        conditionalMembers: fieldTranslationParams?.conditionalMembers,\n      })\n    }\n    close()\n  }, [\n    fieldLanguageMaps,\n    documentId,\n    runTranslate,\n    close,\n    toLanguages,\n    fieldTranslationParams?.translatePath,\n    fieldTranslationParams?.conditionalMembers,\n  ])\n\n  const runButton = (\n    <Button\n      text={`Translate`}\n      tone=\"primary\"\n      icon={PlayIcon}\n      style={{width: '100%'}}\n      disabled={runDisabled}\n      onClick={onRunTranslation}\n    />\n  )\n\n  return (\n    <FieldTranslationContext.Provider value={contextValue}>\n      {dialogOpen ? (\n        <Dialog\n          id={id}\n          width={1}\n          open={dialogOpen}\n          onClose={close}\n          header=\"Translate fields\"\n          footer={\n            <Flex justify=\"space-between\" padding={2} flex={1}>\n              {runDisabled ? (\n                <Tooltip\n                  content={\n                    <Flex padding={2}>\n                      <Text>There is nothing to translate in the selected from-language.</Text>\n                    </Flex>\n                  }\n                  placement=\"top\"\n                >\n                  <Flex flex={1}>{runButton}</Flex>\n                </Tooltip>\n              ) : (\n                runButton\n              )}\n            </Flex>\n          }\n        >\n          {languages ? (\n            <Flex padding={4} gap={5} align=\"flex-start\" justify=\"center\">\n              <Stack space={2}>\n                <Box marginBottom={2}>\n                  <Text weight=\"semibold\">From</Text>\n                </Box>\n                {languages?.map((radioLanguage) => (\n                  <FromLanguageRadio\n                    key={radioLanguage.id}\n                    {...{\n                      radioLanguage,\n                      fromLanguage,\n                      selectFromLanguage,\n                      languages,\n                      fieldTranslationParams,\n                    }}\n                  />\n                ))}\n              </Stack>\n\n              <Stack space={2}>\n                <Box marginBottom={2}>\n                  <Text weight=\"semibold\">To</Text>\n                </Box>\n                {languages.map((checkboxLanguage) => (\n                  <ToLanguageCheckbox\n                    key={checkboxLanguage.id}\n                    {...{checkboxLanguage, fromLanguage, toLanguages, toggleToLanguage, languages}}\n                  />\n                ))}\n              </Stack>\n            </Flex>\n          ) : (\n            <Flex padding={4} gap={2} align=\"flex-start\" justify=\"center\">\n              <Box>\n                <Spinner />\n              </Box>\n              <Text>Loading languages...</Text>\n            </Flex>\n          )}\n        </Dialog>\n      ) : null}\n      {props.children}\n    </FieldTranslationContext.Provider>\n  )\n}\n\nfunction ToLanguageCheckbox(props: {\n  checkboxLanguage: Language\n  fromLanguage: Language | undefined\n  toLanguages: Language[] | undefined\n  toggleToLanguage: (\n    toggledLang: Language,\n    toLanguages: Language[] | undefined,\n    languages: Language[] | undefined,\n  ) => void\n  languages: Language[]\n}) {\n  const {checkboxLanguage, fromLanguage, toLanguages, toggleToLanguage, languages} = props\n  const langId = checkboxLanguage.id\n  const onChange = useCallback(\n    () => toggleToLanguage(checkboxLanguage, toLanguages, languages),\n    [toggleToLanguage, checkboxLanguage, toLanguages, languages],\n  )\n  return (\n    <Flex\n      key={langId}\n      gap={3}\n      align=\"center\"\n      as={'label'}\n      style={langId === fromLanguage?.id ? {opacity: 0.5} : undefined}\n    >\n      <Checkbox\n        name=\"toLang\"\n        value={langId}\n        checked={langId !== fromLanguage?.id && !!toLanguages?.find((tl) => tl.id === langId)}\n        onChange={onChange}\n        disabled={langId === fromLanguage?.id}\n      />\n      <Text muted={langId === fromLanguage?.id}>{checkboxLanguage.title ?? langId}</Text>\n    </Flex>\n  )\n}\n\nfunction FromLanguageRadio(props: {\n  radioLanguage: Language\n  fromLanguage: Language | undefined\n  selectFromLanguage: (\n    from: Language,\n    languages: Language[] | undefined,\n    params: FieldTranslationParams | undefined,\n  ) => void\n  languages: Language[] | undefined\n  fieldTranslationParams: FieldTranslationParams | undefined\n}) {\n  const {languages, radioLanguage, selectFromLanguage, fromLanguage, fieldTranslationParams} = props\n  const langId = radioLanguage.id\n\n  const onChange = useCallback(\n    () => selectFromLanguage(radioLanguage, languages, fieldTranslationParams),\n    [selectFromLanguage, radioLanguage, languages, fieldTranslationParams],\n  )\n  return (\n    <Flex key={langId} gap={3} align=\"center\" as={'label'}>\n      <Radio\n        name=\"fromLang\"\n        value={langId}\n        checked={langId === fromLanguage?.id}\n        onChange={onChange}\n      />\n      <Text>{radioLanguage.title ?? radioLanguage.id}</Text>\n    </Flex>\n  )\n}\n","import {ThemeProvider} from '@sanity/ui'\nimport {useState} from 'react'\nimport {LayoutProps} from 'sanity'\n\nimport {Connector, ConnectorsProvider} from '../_lib/connector'\nimport {AssistConnectorsOverlay} from '../assistConnectors'\nimport {AssistPluginConfig} from '../plugin'\nimport {FieldTranslationProvider} from '../translate/FieldTranslationProvider'\nimport {StudioInstruction} from '../types'\nimport {RunInstructionRequest} from '../useApiClient'\nimport {AiAssistanceConfigProvider} from './AiAssistanceConfigContext'\nimport {RunInstructionProvider} from './RunInstructionProvider'\n\nexport interface AIStudioLayoutProps extends LayoutProps {\n  config: AssistPluginConfig\n}\n\nexport type RunInstructionArgs = Omit<RunInstructionRequest, 'instructionKey' | 'userText'> & {\n  instruction: StudioInstruction\n}\n\nexport function AssistLayout(props: AIStudioLayoutProps) {\n  const [connectors, setConnectors] = useState<Connector[]>([])\n\n  return (\n    <AiAssistanceConfigProvider config={props.config}>\n      <RunInstructionProvider>\n        <FieldTranslationProvider>\n          <ConnectorsProvider onConnectorsChange={setConnectors}>\n            {props.renderDefault(props)}\n            <ThemeProvider tone=\"default\">\n              <AssistConnectorsOverlay connectors={connectors} />\n            </ThemeProvider>\n          </ConnectorsProvider>\n        </FieldTranslationProvider>\n      </RunInstructionProvider>\n    </AiAssistanceConfigProvider>\n  )\n}\n","import {Box, Button, Card, ErrorBoundary, Flex, Stack, Text} from '@sanity/ui'\nimport {type ErrorInfo, type PropsWithChildren, useCallback, useMemo, useState} from 'react'\nimport {type InputProps, isArraySchemaType, PatchEvent, unset} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {isPortableTextArray} from '../helpers/typeUtils'\n\nconst WrapPreCard = styled(Card)`\n  & pre {\n    white-space: pre-wrap !important;\n  }\n`\n\nexport function SafeValueInput(props: InputProps) {\n  return (\n    <ErrorWrapper onChange={props.onChange}>\n      <PteValueFixer {...props} />\n    </ErrorWrapper>\n  )\n}\n\nexport function ErrorWrapper(\n  props: PropsWithChildren<{onChange: (patchEvent: PatchEvent) => void}>,\n) {\n  const {onChange} = props\n  const [error, setError] = useState<Error | undefined>()\n\n  const catchError = useCallback((params: {error: Error; info: ErrorInfo}) => {\n    setError(params.error)\n  }, [])\n\n  const unsetValue = useCallback(() => {\n    onChange(PatchEvent.from(unset()))\n    setError(undefined)\n  }, [onChange])\n  const dismiss = useCallback(() => setError(undefined), [])\n  const catcher = <ErrorBoundary onCatch={catchError}>{props.children}</ErrorBoundary>\n\n  return error ? (\n    <Card border tone=\"critical\" padding={2} contentEditable={false}>\n      <Stack space={3}>\n        <Text muted weight=\"semibold\">\n          An error occurred.\n        </Text>\n\n        <WrapPreCard flex={1} padding={2} tone=\"critical\" border>\n          {catcher}\n        </WrapPreCard>\n\n        <Flex width=\"fill\" flex={1} gap={3}>\n          <Box flex={1}>\n            <Button text=\"Dismiss\" onClick={dismiss} tone=\"primary\" />\n          </Box>\n          <Button text=\"Unset value\" onClick={unsetValue} tone=\"critical\" />\n        </Flex>\n      </Stack>\n    </Card>\n  ) : (\n    catcher\n  )\n}\n\nfunction PteValueFixer(props: InputProps) {\n  const isPortableText = useMemo(\n    () => isArraySchemaType(props.schemaType) && isPortableTextArray(props.schemaType),\n    [props.schemaType],\n  )\n  const value = props.value\n  if (isPortableText && value && !(value as any[]).length) {\n    return props.renderDefault({...props, value: undefined})\n  }\n\n  return props.renderDefault(props)\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {BlockProps, PatchEvent, useFormCallbacks} from 'sanity'\n\nimport {ErrorWrapper} from '../components/SafeValueInput'\nimport {AiFieldPresence} from '../presence/AiFieldPresence'\nimport {useAssistPresence} from '../presence/useAssistPresence'\n\nexport function AssistFormBlock(props: BlockProps) {\n  const presence = useAssistPresence(props.path, true)\n  const {onChange} = useFormCallbacks()\n  const key = props.value._key\n  const localOnChange = useCallback(\n    (patchEvent: PatchEvent) => {\n      if (!key) {\n        return\n      }\n      onChange(PatchEvent.from(patchEvent).prefixAll({_key: key}))\n    },\n    [onChange, key],\n  )\n  const singlePresence = presence[0]\n  return (\n    <ErrorWrapper onChange={localOnChange}>\n      <Flex align=\"center\" justify=\"space-between\">\n        <Box flex={1}>{props.renderDefault(props)}</Box>\n        {singlePresence && <AiFieldPresence presence={singlePresence} />}\n      </Flex>\n    </ErrorWrapper>\n  )\n}\n","import {Box, Flex} from '@sanity/ui'\nimport {ItemProps} from 'sanity'\n\nimport {AiFieldPresence} from '../presence/AiFieldPresence'\nimport {useAssistPresence} from '../presence/useAssistPresence'\n\nexport function AssistItem(props: ItemProps) {\n  const {path} = props\n  const presence = useAssistPresence(path, true)\n\n  return (\n    <Flex align=\"center\" width=\"fill\" style={{position: 'relative'}}>\n      <Box flex={1}>{props.renderDefault({...props})}</Box>\n      {presence.map((pre) => (\n        <Box key={pre.user.id} style={{position: 'absolute', right: 35}}>\n          <AiFieldPresence presence={pre} />\n        </Box>\n      ))}\n    </Flex>\n  )\n}\n","import {ArrowLeftIcon} from '@sanity/icons'\nimport {Button} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {aiInspectorId} from '../../../assistInspector/constants'\nimport {instructionParam} from '../../../types'\n\nexport function BackToInstructionListLink() {\n  const {openInspector} = useDocumentPane()\n\n  const goBack = useCallback(\n    () => openInspector(aiInspectorId, {[instructionParam]: undefined as any}),\n    [openInspector],\n  )\n\n  return (\n    <div>\n      <Button\n        as=\"a\"\n        fontSize={1}\n        icon={ArrowLeftIcon}\n        mode=\"bleed\"\n        padding={1}\n        space={2}\n        onClick={goBack}\n        text=\"  Instructions\"\n        textAlign=\"left\"\n      />\n    </div>\n  )\n}\n","import {Card, Stack, Text} from '@sanity/ui'\nimport {useContext, useEffect, useMemo, useRef} from 'react'\nimport {\n  FormCallbacksProvider,\n  FormCallbacksValue,\n  FormInput,\n  insert,\n  KeyedSegment,\n  ObjectInputProps,\n  ObjectSchemaType,\n  PatchEvent,\n  Path,\n  SchemaType,\n  set,\n  setIfMissing,\n  stringToPath,\n  typed,\n  useFormCallbacks,\n  useSchema,\n} from 'sanity'\n\nimport {useAiPaneRouter} from '../../assistInspector/helpers'\nimport {useAiAssistanceConfig} from '../../assistLayout/AiAssistanceConfigContext'\nimport {\n  AssistDocument,\n  AssistField,\n  assistFieldTypeName,\n  AssistInspectorRouteParams,\n  documentRootKey,\n  fieldPathParam,\n  instructionParam,\n  StudioInstruction,\n} from '../../types'\nimport {AssistTypeContext} from './AssistTypeContext'\nimport {BackToInstructionListLink} from './instruction/BackToInstructionsLink'\nimport {SelectedFieldContextProvider, SelectedFieldContextValue} from './SelectedFieldContext'\n\nconst EMPTY_FIELDS: AssistField[] = []\n\nexport function AssistDocumentForm(props: ObjectInputProps) {\n  if (props.readOnly) {\n    return (\n      <Card border tone=\"caution\" padding={2}>\n        <Text size={1}> You do not have sufficient permissions to manage instructions.</Text>\n      </Card>\n    )\n  }\n  return <AssistDocumentFormEditable {...props} />\n}\nfunction AssistDocumentFormEditable(props: ObjectInputProps) {\n  const {onChange} = props\n  const value = props.value as AssistDocument | undefined\n  const id = value?._id\n  const fields = value?.fields\n\n  const {params, setParams} = useAiPaneRouter()\n  const pathKey = params[fieldPathParam]\n  const {typePath, documentType: targetDocumentType} = useContext(AssistTypeContext)\n  const instruction = params[instructionParam]\n\n  const activeKey = useMemo(() => {\n    if (!typePath) {\n      return undefined\n    }\n    return (fields ?? EMPTY_FIELDS).find((f) => f.path === typePath)?._key\n  }, [fields, typePath])\n\n  const activePath: Path | undefined = useMemo(() => {\n    if (!activeKey) {\n      return undefined\n    }\n    const base = ['fields', {_key: activeKey}]\n    return instruction ? [...base, 'instructions', {_key: instruction}] : base\n  }, [activeKey, instruction])\n\n  const schema = useSchema()\n  const documentSchema: ObjectSchemaType | undefined = useMemo(() => {\n    if (!targetDocumentType) {\n      return undefined\n    }\n    return schema.get(targetDocumentType) as ObjectSchemaType\n  }, [schema, targetDocumentType])\n\n  const fieldSchema = useSelectedSchema(pathKey, documentSchema)\n\n  const context: SelectedFieldContextValue = useMemo(\n    () => ({\n      documentSchema,\n      fieldSchema: fieldSchema ?? documentSchema,\n    }),\n    [fieldSchema, documentSchema],\n  )\n\n  const title = value?.title\n\n  useEffect(() => {\n    if (!title && documentSchema && !id?.startsWith('drafts.')) {\n      onChange(set(documentSchema.title ?? documentSchema.name, ['title']))\n    }\n  }, [title, documentSchema, onChange, id])\n\n  const {onPathOpen, ...formCallbacks} = useFormCallbacks()\n\n  const newCallbacks: FormCallbacksValue = useMemo(\n    () => ({\n      ...formCallbacks,\n      onPathOpen: (path) => {\n        if (!instruction && path.length === 4 && path[2] === 'instructions') {\n          setParams(\n            typed<AssistInspectorRouteParams>({\n              ...params,\n              [instructionParam]: (path[3] as KeyedSegment)?._key,\n            }) as Record<keyof AssistInspectorRouteParams, string | undefined>,\n          )\n          onPathOpen([])\n        } else {\n          setTimeout(() => onPathOpen(path), 0)\n        }\n      },\n    }),\n    [formCallbacks, onPathOpen, params, setParams, instruction],\n  )\n\n  useEffect(() => {\n    if (activePath && !instruction) {\n      onPathOpen([])\n    }\n  }, [activePath, instruction, onPathOpen])\n\n  return (\n    <SelectedFieldContextProvider value={context}>\n      <Stack space={5}>\n        <FieldsInitializer\n          key={typePath}\n          pathKey={typePath}\n          activePath={activePath}\n          fields={fields}\n          documentSchema={documentSchema}\n          onChange={onChange}\n        />\n        {instruction && <BackToInstructionListLink />}\n\n        {activePath && (\n          <FormCallbacksProvider {...newCallbacks}>\n            <div style={{lineHeight: '1.25em'}}>\n              <FormInput {...props} absolutePath={activePath} />\n            </div>\n          </FormCallbacksProvider>\n        )}\n\n        {!activePath && props.renderDefault(props)}\n      </Stack>\n    </SelectedFieldContextProvider>\n  )\n}\n\nfunction useSelectedSchema(\n  fieldPath: string | undefined,\n  documentSchema: ObjectSchemaType | undefined,\n): SchemaType | undefined {\n  return useMemo(() => {\n    if (!fieldPath) {\n      return undefined\n    }\n    if (fieldPath === documentRootKey) {\n      return documentSchema\n    }\n\n    const path = stringToPath(fieldPath)\n    let currentSchema: ObjectSchemaType | undefined = documentSchema\n    for (let i = 0; i < path.length; i++) {\n      const segment = path[i]\n      const field = currentSchema?.fields.find((f) => f.name === segment)\n      if (!field) {\n        return undefined\n      }\n      if (i === path.length - 1) {\n        return field.type\n      }\n      if (field.type.jsonType !== 'object') {\n        return undefined\n      }\n      currentSchema = field.type\n    }\n    return currentSchema\n  }, [documentSchema, fieldPath])\n}\n\nfunction FieldsInitializer({\n  pathKey,\n  activePath,\n  fields,\n  documentSchema,\n  onChange,\n}: {\n  pathKey?: string\n  activePath?: Path\n  fields: AssistField[] | undefined\n  documentSchema: ObjectSchemaType | undefined\n  onChange: ObjectInputProps['onChange']\n}) {\n  const {\n    config: {__presets: presets},\n  } = useAiAssistanceConfig()\n\n  const existingField = fields?.find((f) => f._key === pathKey)\n  const documentPresets = !!documentSchema?.name && presets?.[documentSchema?.name]\n\n  const missingPresetInstructions = useMemo(() => {\n    if (!documentPresets || !pathKey) {\n      return undefined\n    }\n    const existingInstructions = existingField?.instructions\n    const presetField = documentPresets.fields?.find((f) => f.path === pathKey)\n    return presetField?.instructions?.filter(\n      (i) => !existingInstructions?.some((ei) => ei._key === i._key),\n    )\n  }, [documentPresets, pathKey, existingField])\n\n  // need this to not fire onChange twice in React strict mode\n  const initialized = useRef(false)\n  useEffect(() => {\n    if (initialized.current || !pathKey) {\n      return\n    }\n    if (existingField && !missingPresetInstructions?.length) {\n      return\n    }\n\n    let event = PatchEvent.from([setIfMissing([], ['fields'])])\n    if (!existingField) {\n      event = event.append(\n        insert(\n          [\n            typed<AssistField>({\n              _key: pathKey,\n              _type: assistFieldTypeName,\n              path: pathKey,\n              instructions: [],\n            }),\n          ],\n          'after',\n          ['fields', -1],\n        ),\n      )\n    }\n\n    if (!existingField?.instructions?.length) {\n      event = event.append([setIfMissing([], ['fields', {_key: pathKey}, 'instructions'])])\n    }\n\n    if (missingPresetInstructions?.length) {\n      event = event.append(\n        insert(\n          missingPresetInstructions.map(\n            (preset): StudioInstruction => ({\n              ...preset,\n              _type: 'sanity.assist.instruction',\n              prompt: preset.prompt?.map((p) => ({markDefs: [], ...p})),\n            }),\n          ),\n          'after',\n          ['fields', {_key: pathKey}, 'instructions', -1],\n        ),\n      )\n    }\n    onChange(event)\n    initialized.current = true\n  }, [activePath, onChange, pathKey, existingField, missingPresetInstructions])\n\n  return null\n}\n","import {createContext} from 'react'\nimport {BlockProps} from 'sanity'\n\n// workaround for preview value sometimes lagging behind\nexport const InlineBlockValueContext = createContext<unknown>(undefined)\n\nexport function AssistInlineFormBlock(props: BlockProps) {\n  return (\n    <InlineBlockValueContext.Provider value={props.value}>\n      <>{props.renderDefault(props)}</>\n    </InlineBlockValueContext.Provider>\n  )\n}\n","import {Box, Flex, Text} from '@sanity/ui'\nimport {useContext} from 'react'\nimport {PreviewProps} from 'sanity'\n\nimport {InlineBlockValueContext} from '../../assistFormComponents/AssistInlineFormBlock'\nimport {useSelectedField} from '../../assistInspector/helpers'\nimport {SelectedFieldContext} from './SelectedFieldContext'\n\nexport function FieldRefPreview(props: PreviewProps & {path?: string}) {\n  const documentSchema = useContext(SelectedFieldContext)?.documentSchema\n  const path = (useContext(InlineBlockValueContext) as {path?: string})?.path ?? props.path\n  const selectedField = useSelectedField(documentSchema, path)\n  return (\n    <Flex gap={2} align=\"center\" style={{width: '100%'}}>\n      <Flex flex={1} gap={2} align=\"center\" paddingY={3} paddingX={1}>\n        {/*<Box>\n          <Text>{selectedField?.icon ? createElement(selectedField?.icon) : <CodeIcon />}</Text>\n        </Box>*/}\n        <Box>\n          <Text size={1} textOverflow=\"ellipsis\">\n            {selectedField?.title ?? 'Select field'}\n          </Text>\n        </Box>\n      </Flex>\n      <>{props.actions}</>\n    </Flex>\n  )\n}\n","import {FieldProps} from 'sanity'\n\nexport function HiddenFieldTitle(props: FieldProps) {\n  return props.renderDefault({...props, title: '', level: props.level - 2, changed: false})\n}\n","import {icons} from '@sanity/icons'\nimport {Button, Menu, MenuButton, MenuItem} from '@sanity/ui'\nimport {ElementType, ReactNode, useCallback, useId, useMemo} from 'react'\nimport {set, StringInputProps} from 'sanity'\n\nexport function IconInput(props: StringInputProps) {\n  const {value, onChange} = props\n  const id = useId()\n  const items = useMemo(\n    () =>\n      Object.entries(icons).map(([key, icon]) => (\n        <IconItem key={key} iconKey={key} icon={icon} onChange={onChange} />\n      )),\n    [onChange],\n  )\n\n  const selectedIcon = useMemo(() => getIcon(value), [value])\n\n  return (\n    <MenuButton\n      button={\n        <Button icon={selectedIcon} title=\"Select icon\" padding={3} mode=\"ghost\" radius={1} />\n      }\n      id={id}\n      menu={<Menu style={{maxHeight: 300}}>{items}</Menu>}\n      popover={{portal: true}}\n    />\n  )\n}\n\nfunction IconItem({\n  icon,\n  iconKey: key,\n  onChange,\n}: {\n  iconKey: string\n  icon: ElementType | ReactNode\n  onChange: StringInputProps['onChange']\n}) {\n  const onClick = useCallback(() => onChange(set(key)), [onChange, key])\n  return <MenuItem icon={icon} title={key} text={key} onClick={onClick} />\n}\n\nexport function getIcon(iconName?: string) {\n  return Object.entries(icons).find(([key]) => key === iconName)?.[1] ?? icons.sparkles\n}\n","import {Card, Flex, Switch, Text} from '@sanity/ui'\nimport {useCallback, useId} from 'react'\nimport {set, StringInputProps, unset, useCurrentUser} from 'sanity'\n\nexport function InstructionVisibility(props: StringInputProps) {\n  const {value, onChange} = props\n\n  const user = useCurrentUser()\n\n  const handleChange = useCallback(() => {\n    const newValue = value ? '' : (user?.id ?? '')\n    onChange(newValue ? set(newValue) : unset())\n  }, [onChange, user, value])\n\n  const id = useId()\n\n  return (\n    <Card>\n      <Flex gap={2} align=\"flex-start\">\n        <div style={{margin: '-3px 0'}}>\n          <Switch\n            {...props.elementProps}\n            id={id}\n            value={`${!value}`}\n            checked={!value}\n            onChange={handleChange}\n            disabled={props.elementProps.readOnly}\n          />\n        </div>\n\n        <Text muted size={1} weight=\"medium\">\n          <label htmlFor={id}>Make visible to all Studio members</label>\n        </Text>\n      </Flex>\n    </Card>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport {useCallback, useContext, useEffect, useId, useRef} from 'react'\nimport {set, StringInputProps} from 'sanity'\n\nimport {FieldAutocomplete} from '../../../assistInspector/FieldAutocomplete'\nimport {FieldRef} from '../../../assistInspector/helpers'\nimport {AssistTypeContext} from '../AssistTypeContext'\nimport {SelectedFieldContext} from '../SelectedFieldContext'\n\nexport function FieldRefPathInput(props: StringInputProps) {\n  const documentSchema = useContext(SelectedFieldContext)?.documentSchema\n  const {typePath} = useContext(AssistTypeContext)\n  const ref = useRef<HTMLDivElement>(null)\n  const id = useId()\n  const {onChange} = props\n\n  useEffect(() => {\n    ref.current?.querySelector('input')?.focus()\n  }, [])\n\n  const onSelect = useCallback((path: string) => onChange(set(path)), [onChange])\n\n  const filter = useCallback(\n    (field: FieldRef) => {\n      if (!field.key.includes('|') || !typePath) {\n        return true\n      }\n      if (field.key.includes('|') && !typePath.includes('|')) {\n        return false\n      }\n\n      const fieldSegments = field.key.split('.')\n      const lastArrayItemIndex = fieldSegments.findLastIndex((s) => s.includes('|'))\n      const mustStartWith = fieldSegments.slice(0, lastArrayItemIndex + 1).join('.')\n      return typePath.startsWith(mustStartWith)\n    },\n    [typePath],\n  )\n  if (!documentSchema) {\n    return props.renderDefault(props)\n  }\n\n  return (\n    <Box flex={1} style={{minWidth: 300}} ref={ref}>\n      <FieldAutocomplete\n        id={id}\n        schemaType={documentSchema}\n        onSelect={onSelect}\n        fieldPath={props.value}\n        filter={filter}\n      />\n    </Box>\n  )\n}\n","import {FieldError, FieldMember, FieldSetMember, ObjectMember} from 'sanity'\n\nexport function findFieldMember(\n  members: ObjectMember[],\n  fieldName: string,\n): FieldMember | FieldError | undefined {\n  return members.find(\n    (m): m is FieldMember | FieldError =>\n      (m.kind === 'field' && m.name === fieldName) ||\n      (m.kind === 'error' && m.fieldName === fieldName),\n  )\n}\n\nexport function findFieldsetMember(\n  members: ObjectMember[],\n  fieldsetName: string,\n): FieldSetMember | undefined {\n  return members.find(\n    (m): m is FieldSetMember => m.kind === 'fieldSet' && m.fieldSet.name === fieldsetName,\n  )\n}\n","import {Box, Flex, Stack, Text} from '@sanity/ui'\nimport {useId, useMemo} from 'react'\nimport {FieldError, FieldMember, ObjectInputMember, ObjectInputProps} from 'sanity'\n\nimport {findFieldMember, findFieldsetMember} from '../helpers'\n\nexport function InstructionInput(props: ObjectInputProps) {\n  return (\n    <Stack space={[4, 4, 4, 5]}>\n      <NameField {...props} />\n      <ShareField {...props} />\n      <ObjectMember fieldName={'prompt'} {...props} />\n      <ObjectMember fieldName={'output'} {...props} />\n    </Stack>\n  )\n}\n\nfunction ObjectMember({fieldName, ...props}: ObjectInputProps & {fieldName: string}) {\n  const member = findFieldMember(props.members, fieldName)\n  return member ? <ObjectInputMember {...props} member={member} /> : null\n}\n\nconst NONE: (FieldMember | FieldError)[] = []\n\nfunction NameField(props: ObjectInputProps) {\n  const fieldsetMember = findFieldsetMember(props.members, 'appearance')\n  const titleId = useId()\n\n  const members = fieldsetMember?.fieldSet.members ?? NONE\n  const iconMember = findFieldMember(members, 'icon')\n  const titleMember = findFieldMember(members, 'title')\n\n  const titlePlaceholder = 'Untitled'\n  const moddedTitleMember = useMemo(() => {\n    if (!titleMember) {\n      return undefined\n    }\n    if (titleMember.kind === 'error') {\n      return titleMember\n    }\n    return {\n      ...titleMember,\n      field: {\n        ...titleMember?.field,\n        schemaType: {\n          ...titleMember?.field.schemaType,\n          placeholder: titlePlaceholder,\n        },\n      },\n    }\n  }, [titleMember, titlePlaceholder])\n\n  return (\n    <Stack space={5}>\n      <Stack space={2}>\n        <Flex gap={1}>\n          <Text as=\"label\" weight=\"semibold\" size={1} htmlFor={titleId}>\n            Name\n          </Text>\n        </Flex>\n\n        <Text muted size={1}>\n          How this instruction appears in menus\n        </Text>\n\n        <Flex align=\"center\">\n          {iconMember && (\n            <Box flex=\"none\">\n              <ObjectInputMember {...props} member={iconMember} />\n            </Box>\n          )}\n          {moddedTitleMember && (\n            <Box flex={1} style={{marginLeft: -1}}>\n              <ObjectInputMember {...props} member={moddedTitleMember} />\n            </Box>\n          )}\n        </Flex>\n      </Stack>\n    </Stack>\n  )\n}\n\nfunction ShareField(props: ObjectInputProps) {\n  const fieldsetMember = findFieldsetMember(props.members, 'appearance')\n  const members = fieldsetMember?.fieldSet.members ?? NONE\n  const visibilityMember = findFieldMember(members, 'userId')\n\n  return <>{visibilityMember && <ObjectInputMember {...props} member={visibilityMember} />}</>\n}\n","import {useCallback, useContext, useState} from 'react'\nimport {\n  ArrayFieldProps,\n  ArraySchemaType,\n  isArrayOfObjectsSchemaType,\n  isObjectSchemaType,\n  ObjectSchemaType,\n} from 'sanity'\n\nimport {SelectedFieldContext} from '../SelectedFieldContext'\n\nexport function InstructionOutputField(props: ArrayFieldProps) {\n  const {fieldSchema} = useContext(SelectedFieldContext) ?? {}\n\n  if (\n    !fieldSchema ||\n    !(isObjectSchemaType(fieldSchema) || isArrayOfObjectsSchemaType(fieldSchema))\n  ) {\n    return null\n  }\n\n  return (\n    <EnabledOutputField {...props} fieldSchema={fieldSchema}>\n      {props.children}\n    </EnabledOutputField>\n  )\n}\n\nfunction EnabledOutputField({\n  fieldSchema,\n  ...props\n}: ArrayFieldProps & {fieldSchema: ObjectSchemaType | ArraySchemaType<ObjectSchemaType>}) {\n  const [open, setOpen] = useState(!!props.value?.length)\n  const onExpand = useCallback(() => setOpen(true), [])\n  const onCollapse = useCallback(() => setOpen(false), [])\n\n  return props.renderDefault({\n    ...props,\n    collapsible: true,\n    onExpand,\n    onCollapse,\n    collapsed: !open,\n    level: 1,\n    title: isObjectSchemaType(fieldSchema) ? 'Allowed fields' : 'Allowed types',\n  })\n}\n","import {Card, Checkbox, Flex, Stack, Text} from '@sanity/ui'\nimport {useCallback, useContext, useEffect, useMemo} from 'react'\nimport {\n  ArrayOfObjectsInputProps,\n  ArraySchemaType,\n  FormPatch,\n  insert,\n  isArrayOfObjectsSchemaType,\n  isObjectSchemaType,\n  ObjectSchemaType,\n  PatchEvent,\n  setIfMissing,\n  typed,\n  unset,\n} from 'sanity'\n\nimport {isAssistSupported} from '../../../helpers/assistSupported'\nimport {isType} from '../../../helpers/typeUtils'\nimport {OutputFieldItem, outputFieldTypeName, OutputTypeItem} from '../../../types'\nimport {SelectedFieldContext} from '../SelectedFieldContext'\n\nexport function InstructionOutputInput(props: ArrayOfObjectsInputProps) {\n  const {fieldSchema} = useContext(SelectedFieldContext) ?? {}\n\n  if (!fieldSchema) {\n    return null\n  }\n\n  if (isObjectSchemaType(fieldSchema)) {\n    return <ObjectOutputInput {...props} fieldSchema={fieldSchema} />\n  }\n\n  if (isArrayOfObjectsSchemaType(fieldSchema)) {\n    return <ArrayOutputInput {...props} fieldSchema={fieldSchema} />\n  }\n  return null\n}\n\nfunction useEmptySelectAllValue(\n  value: (OutputTypeItem | OutputFieldItem)[],\n  allowedValues: {name: string}[],\n  onChange: (patch: FormPatch | FormPatch[] | PatchEvent) => void,\n) {\n  useEffect(() => {\n    const validValues = value?.filter((v) =>\n      allowedValues.find(\n        (f) => f.name === (v._type === outputFieldTypeName ? v.relativePath : v.type),\n      ),\n    )\n    const valueLength = value?.length ?? 0\n    const validLength = validValues?.length ?? 0\n    if ((!validLength && valueLength) || validLength >= allowedValues.length) {\n      // if we end up here, we consider this a \"no selected fields/types\" selections. This should render and behave as all values selected.\n      // we need this behaviour to accommodate new fields/types being added to the model, so they get visited by instructions without having to update the filter\n      // when things have been explicitly selected, we let the selection remain as is\n      onChange(PatchEvent.from([unset()]))\n    }\n  }, [allowedValues, value, onChange])\n}\n\nfunction ObjectOutputInput({\n  fieldSchema,\n  ...props\n}: ArrayOfObjectsInputProps & {fieldSchema: ObjectSchemaType}) {\n  const {value, onChange} = props\n\n  const fields = useMemo(\n    () => fieldSchema.fields.filter((field) => isAssistSupported(field.type)),\n    [fieldSchema.fields],\n  )\n\n  useEmptySelectAllValue(value as OutputTypeItem[], fields, onChange)\n\n  const onSelectChange = useCallback(\n    (checked: boolean, selectedValue: string) => {\n      if (checked) {\n        if (value?.length) {\n          onChange(PatchEvent.from(unset([{_key: selectedValue}])))\n        } else {\n          // we went from empty array to everything selected but one\n          const items = fields\n            .filter((f) => f.name !== selectedValue)\n            .map((field) =>\n              typed<OutputFieldItem>({\n                _key: field.name,\n                _type: 'sanity.assist.output.field',\n                relativePath: field.name,\n              }),\n            )\n          onChange(PatchEvent.from([setIfMissing([]), insert(items, 'after', [-1])]))\n        }\n      } else {\n        const patchValue: OutputFieldItem = {\n          _key: selectedValue,\n          _type: 'sanity.assist.output.field',\n          relativePath: selectedValue,\n        }\n        onChange(PatchEvent.from([setIfMissing([]), insert([patchValue], 'after', [-1])]))\n      }\n    },\n    [onChange, value, fields],\n  )\n\n  return (\n    <Stack space={2}>\n      {fields.map((field) => {\n        return (\n          <Flex key={field.name} align=\"center\" gap={2}>\n            <Selectable\n              value={field.name}\n              title={field.type.title ?? field.name}\n              arrayValue={value as OutputFieldItem[]}\n              onChange={onSelectChange}\n            />\n          </Flex>\n        )\n      })}\n    </Stack>\n  )\n}\n\nfunction ArrayOutputInput({\n  fieldSchema,\n  ...props\n}: ArrayOfObjectsInputProps & {fieldSchema: ArraySchemaType}) {\n  const {value, onChange} = props\n\n  const ofItems = useMemo(\n    () => fieldSchema.of.filter((itemType) => isAssistSupported(itemType)),\n    [fieldSchema.of],\n  )\n\n  useEmptySelectAllValue(value as OutputTypeItem[], ofItems, onChange)\n\n  const onSelectChange = useCallback(\n    (checked: boolean, selectedValue: string) => {\n      if (checked) {\n        if (value?.length) {\n          onChange(PatchEvent.from(unset([{_key: selectedValue}])))\n        } else {\n          // we went from empty array to everything selected but one\n          const items = ofItems\n            .filter((f) => f.name !== selectedValue)\n            .map((field) =>\n              typed<OutputTypeItem>({\n                _key: field.name,\n                _type: 'sanity.assist.output.type',\n                type: field.name,\n              }),\n            )\n          onChange(PatchEvent.from([setIfMissing([]), insert(items, 'after', [-1])]))\n        }\n      } else {\n        const patchValue: OutputTypeItem = {\n          _key: selectedValue,\n          _type: 'sanity.assist.output.type',\n          type: selectedValue,\n        }\n        onChange(PatchEvent.from([setIfMissing([]), insert([patchValue], 'after', [-1])]))\n      }\n    },\n    [onChange, value, ofItems],\n  )\n  return (\n    <Stack space={2}>\n      {ofItems.map((itemType) => {\n        return (\n          <Flex key={itemType.name}>\n            <Selectable\n              value={itemType.name}\n              title={isType(itemType, 'block') ? 'Text' : (itemType.title ?? itemType.name)}\n              arrayValue={value as OutputTypeItem[] | undefined}\n              onChange={onSelectChange}\n            />\n          </Flex>\n        )\n      })}\n    </Stack>\n  )\n}\n\nfunction Selectable({\n  title,\n  arrayValue,\n  value,\n  onChange,\n}: {\n  title: string\n  value: string\n  arrayValue?: {_key: string}[]\n  onChange: (checked: boolean, value: string) => void\n}) {\n  const checked = !arrayValue?.length || !!arrayValue?.find((v) => v._key === value)\n  const handleChange = useCallback(() => onChange(checked, value), [onChange, checked, value])\n\n  return (\n    <Flex gap={2} align=\"flex-start\">\n      <Checkbox checked={checked} onChange={handleChange} />\n      <Card marginTop={1} onClick={handleChange}>\n        <Text style={{cursor: 'default'}} size={1}>\n          {title}\n        </Text>\n      </Card>\n    </Flex>\n  )\n}\n","// Strict ESM env, designed to run outside Node.js in envs that provide WebCrypto (deno, browsers, etc)\n\nexport default function getRandomValues(typedArray) {\n  const crypto =\n    typeof window !== 'undefined' && 'crypto' in window\n      ? window.crypto\n      : globalThis.crypto\n\n  if (!crypto || !crypto.getRandomValues) {\n    throw new Error('WebCrypto not available in this environment')\n  }\n\n  return crypto.getRandomValues(typedArray)\n}\n","import getRandomValues from 'get-random-values-esm'\n\n// WHATWG crypto RNG - https://w3c.github.io/webcrypto/Overview.html\nfunction whatwgRNG(length = 16) {\n  const rnds8 = new Uint8Array(length)\n  getRandomValues(rnds8)\n  return rnds8\n}\n\nconst getByteHexTable = (() => {\n  let table: string[]\n  return () => {\n    if (table) {\n      return table\n    }\n    table = []\n    for (let i = 0; i < 256; ++i) {\n      table[i] = (i + 0x100).toString(16).substring(1)\n    }\n    return table\n  }\n})()\n\nexport function randomKey(length?: number) {\n  const table = getByteHexTable()\n  return whatwgRNG(length)\n    .reduce((str, n) => str + table[n], '')\n    .slice(0, length)\n}\n","import {Box} from '@sanity/ui'\nimport {useEffect} from 'react'\nimport {type ArrayOfObjectsInputProps, set, typed} from 'sanity'\nimport {styled} from 'styled-components'\n\nimport {randomKey} from '../../../_lib/randomKey'\nimport type {\n  ContextBlock,\n  FieldRef,\n  PromptBlock,\n  PromptTextBlock,\n  UserInputBlock,\n} from '../../../types'\n\nconst PteMods = styled(Box)`\n  & [data-testid='pt-editor__toolbar-card'] > div > div:last-child {\n    display: none;\n  }\n  & [data-testid='pt-editor'] {\n    min-height: 300px;\n  }\n  & [data-testid='pt-editor'] .pt-inline-object * {\n    max-width: 400px;\n  }\n`\n\nexport function PromptInput(props: ArrayOfObjectsInputProps) {\n  // quickfixes the model (converts blocks to inline blocks for alpha customers)\n  // backend supports both types, but this prevents \"missing block\" schema errors\n  useOnlyInlineBlocks(props)\n  return <PteMods>{props.renderDefault(props)}</PteMods>\n}\n\nfunction useOnlyInlineBlocks(props: ArrayOfObjectsInputProps) {\n  useEffect(() => {\n    let needsFix = false\n    const val = ((props.value as PromptBlock[]) ?? []).map((block) => {\n      if (block._type === 'block') {\n        return block\n      }\n\n      needsFix = true\n      return typed<PromptTextBlock>({\n        _key: randomKey(12),\n        _type: 'block',\n        level: 0,\n        markDefs: [],\n        style: 'normal',\n        children: [block as FieldRef | ContextBlock | UserInputBlock],\n      })\n    })\n\n    if (needsFix) {\n      props.onChange(set(val))\n    }\n    // only run this once when loading the field\n    // eslint-disable-next-line\n  }, [])\n}\n","import {ArrayFieldProps} from 'sanity'\n\nexport function InstructionsArrayField(props: ArrayFieldProps) {\n  return props.renderDefault({\n    ...props,\n    title: ' ',\n  })\n}\n","import {useMemo} from 'react'\nimport {ArrayOfObjectsInputProps, useCurrentUser} from 'sanity'\n\nimport {StudioInstruction} from '../../types'\n\nexport function InstructionsArrayInput(props: ArrayOfObjectsInputProps) {\n  const user = useCurrentUser()\n\n  const originalValue = props.value as StudioInstruction[] | undefined\n  const originalMembers = props.members\n  const value = useMemo(\n    () => (originalValue ?? []).filter((v) => !v.userId || v.userId === user?.id),\n    [originalValue, user],\n  )\n  const members = useMemo(\n    () =>\n      (originalMembers ?? []).filter((v) => {\n        if (v.kind === 'error') {\n          return true\n        }\n        const value = v?.item?.value as any\n        return !value.userId || value.userId === user?.id\n      }),\n    [originalMembers, user],\n  )\n  return props.renderDefault({...props, value, members})\n}\n","import {Box} from '@sanity/ui'\nimport {useEffect, useRef} from 'react'\nimport {ObjectInputProps} from 'sanity'\n\nexport function HideReferenceChangedBannerInput(props: ObjectInputProps) {\n  const ref = useRef<HTMLDivElement>(null)\n\n  // hides \"reference was changed\" banner (it is incorrectly flashing because the pane handler does not support the way wie use the assist pane)\n  useEffect(() => {\n    const parent = ref.current?.closest('[data-testid=\"pane-content\"]')\n    if (!parent) {\n      return\n    }\n    const style = document.createElement('style')\n    const parentId = `id-${Math.random()}`.replace('.', '-')\n    parent.id = parentId\n\n    style.innerText = `\n      #${parentId} [data-testid=\"reference-changed-banner\"] { display: none; }\n    `\n    parent.prepend(style)\n  }, [ref])\n\n  return <Box ref={ref}>{props.renderDefault(props)}</Box>\n}\n","import {DocumentTextIcon, TokenIcon} from '@sanity/icons'\nimport {defineArrayMember, defineField, defineType} from 'sanity'\n\nimport {HideReferenceChangedBannerInput} from '../components/HideReferenceChangedBannerInput'\nimport {contextDocumentTypeName} from '../types'\n\nexport const contextDocumentSchema = defineType({\n  type: 'document',\n  name: contextDocumentTypeName,\n  title: 'AI context',\n  liveEdit: true,\n  icon: TokenIcon,\n  components: {\n    input: HideReferenceChangedBannerInput,\n  },\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'title',\n      title: 'Title',\n    }),\n    defineField({\n      name: 'context',\n      type: 'array',\n      title: 'Context',\n      of: [\n        defineArrayMember({\n          type: 'block',\n          styles: [{title: 'Normal', value: 'normal'}],\n          lists: [],\n          marks: {\n            decorators: [],\n            annotations: [],\n          },\n        }),\n      ],\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'title',\n      context: 'context',\n    },\n    prepare({title, context}) {\n      const text = context\n        ?.flatMap((block: any) => block?.children)\n        .flatMap((child: any) => child?.text?.split(' '))\n        .filter(Boolean)\n      const words = text?.length ?? 0\n      return {\n        title,\n        subtitle: `Words: ${words}`,\n        media: DocumentTextIcon,\n      }\n    },\n  },\n})\n","import {\n  ArrowRightIcon,\n  CodeIcon,\n  ComposeIcon,\n  icons,\n  IconSymbol,\n  LockIcon,\n  SparklesIcon,\n  ThListIcon,\n} from '@sanity/icons'\nimport {Box, Flex, Stack, Text, Tooltip} from '@sanity/ui'\nimport {createElement} from 'react'\nimport {defineArrayMember, defineField, defineType, ObjectSchemaType} from 'sanity'\n\nimport {AssistDocumentForm} from '../assistDocument/components/AssistDocumentForm'\nimport {FieldRefPreview} from '../assistDocument/components/FieldRefPreview'\nimport {HiddenFieldTitle} from '../assistDocument/components/generic/HiddenFieldTitle'\nimport {IconInput} from '../assistDocument/components/instruction/appearance/IconInput'\nimport {InstructionVisibility} from '../assistDocument/components/instruction/appearance/InstructionVisibility'\nimport {FieldRefPathInput} from '../assistDocument/components/instruction/FieldRefInput'\nimport {InstructionInput} from '../assistDocument/components/instruction/InstructionInput'\nimport {InstructionOutputField} from '../assistDocument/components/instruction/InstructionOutputField'\nimport {InstructionOutputInput} from '../assistDocument/components/instruction/InstructionOutputInput'\nimport {PromptInput} from '../assistDocument/components/instruction/PromptInput'\nimport {InstructionsArrayField} from '../assistDocument/components/InstructionsArrayField'\nimport {InstructionsArrayInput} from '../assistDocument/components/InstructionsArrayInput'\nimport {getFieldRefsWithDocument} from '../assistInspector/helpers'\nimport {instructionGuideUrl} from '../constants'\nimport {getInstructionTitle} from '../helpers/misc'\nimport {\n  assistDocumentIdPrefix,\n  assistDocumentTypeName,\n  assistFieldTypeName,\n  assistTasksStatusTypeName,\n  fieldReferenceTypeName,\n  instructionContextTypeName,\n  instructionTaskTypeName,\n  instructionTypeName,\n  outputFieldTypeName,\n  outputTypeTypeName,\n  promptTypeName,\n  userInputTypeName,\n} from '../types'\nimport {contextDocumentSchema} from './contextDocumentSchema'\n\nexport const fieldReference = defineType({\n  type: 'object',\n  name: fieldReferenceTypeName,\n  title: 'Field',\n  icon: ThListIcon,\n\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'path',\n      title: 'Field',\n      components: {\n        input: FieldRefPathInput,\n      },\n      validation: (rule) =>\n        rule.custom((value, context) => {\n          if (!value) {\n            return 'Please select a field'\n          }\n          try {\n            const docId = context.document?._id\n            if (!docId) {\n              return `Field reference cannot be used outside document inspector context. Could not resolve document id.`\n            }\n            const targetDocType = docId.replace(new RegExp(`^${assistDocumentIdPrefix}`), '')\n            const schema = context.schema.get(targetDocType)\n            if (!schema) {\n              return `Field reference cannot be used outside document inspector context. Could not resolve schema: ${targetDocType}`\n            }\n            const refs = getFieldRefsWithDocument(schema as ObjectSchemaType)\n            const fieldRef = refs.find((r) => r.key === value)\n            if (!fieldRef) {\n              return `Field with path \"${value}\" does not exist in the schema.`\n            }\n            return true\n          } catch (e) {\n            console.error('Failed to resolve field reference', e)\n            return 'Invalid field reference.'\n          }\n        }),\n    }),\n  ],\n  preview: {\n    select: {\n      path: 'path',\n    },\n    prepare({path}) {\n      return {\n        title: path,\n        path,\n        icon: CodeIcon,\n      }\n    },\n  },\n  components: {\n    preview: FieldRefPreview,\n  },\n  options: {\n    modal: {\n      type: 'popover',\n    },\n  },\n})\n\nexport const userInput = defineType({\n  type: 'object',\n  name: userInputTypeName,\n  title: 'User input',\n  icon: ComposeIcon,\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'message',\n      title: 'User input title',\n      placeholder: 'Provide instruction text',\n      description: 'The header above the user input text field',\n      validation: (rule) => rule.required(),\n    }),\n    defineField({\n      type: 'text',\n      rows: 3,\n      name: 'description',\n      title: 'User input description',\n      description: 'The description above the user input text field',\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'message',\n    },\n  },\n  options: {\n    modal: {\n      type: 'popover',\n      width: 1,\n    },\n  },\n})\n\nexport const promptContext = defineType({\n  type: 'object',\n  name: instructionContextTypeName,\n  title: contextDocumentSchema.title,\n  icon: contextDocumentSchema.icon,\n  fields: [\n    defineField({\n      type: 'reference',\n      name: 'reference',\n      to: [{type: contextDocumentSchema.name}],\n      title: 'Context',\n      description: 'The referenced context will be inserted into the instruction',\n      validation: (rule) => rule.required(),\n      components: {\n        input: function Fix(props) {\n          return <Box style={{maxWidth: 300}}>{props.renderDefault(props)}</Box>\n        },\n      },\n    }),\n  ],\n  preview: {\n    select: {\n      ref: 'reference._ref',\n      title: 'reference.title',\n      context: 'reference.context',\n    },\n    prepare(select) {\n      return select.ref\n        ? (contextDocumentSchema?.preview?.prepare?.(select) ?? select)\n        : {title: 'No reference selected', media: contextDocumentSchema.icon}\n    },\n  },\n  options: {\n    modal: {\n      type: 'popover',\n      width: 'auto',\n    },\n  },\n})\n\nexport const prompt = defineType({\n  type: 'array',\n  name: promptTypeName,\n  title: 'Prompt',\n  of: [\n    defineArrayMember({\n      type: 'block',\n      styles: [{title: 'Normal', value: 'normal'}],\n      lists: [],\n      marks: {\n        decorators: [],\n        annotations: [],\n      },\n      of: [\n        defineArrayMember({\n          type: fieldReference.name,\n        }),\n        defineArrayMember({\n          type: promptContext.name,\n        }),\n        defineArrayMember({\n          type: userInput.name,\n        }),\n      ],\n    }),\n    /*    defineArrayMember({\n      type: fieldReference.name,\n    }),\n    defineArrayMember({\n      type: promptContext.name,\n    }),\n    defineArrayMember({\n      type: userInput.name,\n    }),*/\n  ],\n})\n\nexport const outputFieldType = defineType({\n  type: 'object',\n  name: outputFieldTypeName,\n  title: 'Output field',\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'path',\n      title: 'Path',\n    }),\n  ],\n})\n\nexport const outputTypeType = defineType({\n  type: 'object',\n  name: outputTypeTypeName,\n  title: 'Output type',\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'type',\n      title: 'Type',\n    }),\n  ],\n})\n\nexport const instruction = defineType({\n  type: 'object',\n  name: instructionTypeName,\n  title: 'Instruction',\n  fieldsets: [\n    {name: 'appearance', title: 'Appearance', options: {collapsible: true, collapsed: true}},\n  ],\n  preview: {\n    select: {\n      icon: 'icon',\n      title: 'title',\n      userId: 'userId',\n    },\n    prepare: ({icon, title, userId}) => {\n      return {\n        title,\n        icon: icon ? icons[icon as IconSymbol] : SparklesIcon,\n        userId,\n      }\n    },\n  },\n  components: {\n    input: InstructionInput,\n    preview: (props: any) => {\n      return (\n        <Flex gap={3} align=\"center\" padding={2}>\n          {props.icon && (\n            <Box flex=\"none\">\n              <Text size={1}>{createElement(props.icon)}</Text>\n            </Box>\n          )}\n\n          <Stack flex={1} space={2}>\n            <Text size={1} textOverflow=\"ellipsis\" weight=\"medium\">\n              {getInstructionTitle(props)}\n            </Text>\n          </Stack>\n\n          {props.userId && (\n            <Text size={1}>\n              <Tooltip\n                content={<Text size={1}>Only visible to you</Text>}\n                padding={2}\n                placement=\"top\"\n                portal\n              >\n                <LockIcon />\n              </Tooltip>\n            </Text>\n          )}\n        </Flex>\n      )\n    },\n  },\n  fields: [\n    defineField({\n      type: prompt.name,\n      name: 'prompt',\n      title: 'Instruction',\n      description: (\n        <>\n          Learn from{' '}\n          <a href={instructionGuideUrl} target=\"_blank\" rel=\"noreferrer\">\n            our instruction guide <ArrowRightIcon />\n          </a>\n        </>\n      ),\n      components: {\n        input: PromptInput,\n      },\n    }),\n    defineField({\n      type: 'string',\n      name: 'icon',\n      title: 'Icon',\n      fieldset: 'appearance',\n      components: {\n        field: HiddenFieldTitle,\n        input: IconInput,\n      },\n    }),\n    defineField({\n      type: 'string',\n      name: 'title',\n      title: 'Title',\n      fieldset: 'appearance',\n      components: {\n        field: HiddenFieldTitle,\n      },\n    }),\n    defineField({\n      type: 'string',\n      name: 'userId',\n      title: 'Visibility',\n      fieldset: 'appearance',\n      components: {\n        field: HiddenFieldTitle,\n        input: InstructionVisibility,\n      },\n      initialValue: (params, context) => context.currentUser?.id ?? '',\n      readOnly: (context) =>\n        Boolean(\n          context.parent?.createdById && context.parent?.createdById !== context.currentUser?.id,\n        ),\n    }),\n    defineField({\n      type: 'string',\n      name: 'createdById',\n      title: 'Created by',\n      hidden: true,\n      fieldset: 'appearance',\n      initialValue: (params, context) => {\n        return context.currentUser?.id ?? ''\n      },\n    }),\n    defineField({\n      type: 'array',\n      name: 'output',\n      title: 'Output filter',\n      components: {\n        input: InstructionOutputInput,\n        field: InstructionOutputField,\n      },\n      of: [\n        defineArrayMember({type: outputFieldType.name}),\n        defineArrayMember({type: outputTypeType.name}),\n      ],\n    }),\n  ],\n})\n\nexport const fieldInstructions = defineType({\n  type: 'object',\n  name: assistFieldTypeName,\n  title: 'Field prompt',\n  /*  components: {\n    input: FieldPromptInput,\n  },*/\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'path',\n      title: 'Path',\n      readOnly: true,\n      hidden: true,\n    }),\n    defineField({\n      type: 'array',\n      name: 'instructions',\n      title: 'Instructions',\n      of: [{type: instruction.name}],\n      components: {\n        field: InstructionsArrayField,\n        input: InstructionsArrayInput,\n      },\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'path',\n    },\n  },\n})\n\nexport const assistDocumentSchema = defineType({\n  //NOTE: this is a document type. Using object here ensures it does not appear in structure menus\n  type: 'object',\n  //workaround for using object and not document\n  ...({liveEdit: true} as any),\n  name: assistDocumentTypeName,\n  title: 'AI Document',\n\n  components: {\n    input: AssistDocumentForm,\n    field: (props: any) => {\n      return props.renderDefault({...props, title: ''})\n    },\n  },\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'title',\n      title: 'Title',\n    }),\n    defineField({\n      type: 'array',\n      name: 'fields',\n      title: 'Fields',\n      of: [{type: fieldInstructions.name}],\n    }),\n  ],\n  preview: {\n    select: {\n      title: 'title',\n    },\n  },\n})\n\nexport const instructionTask = defineType({\n  type: 'object',\n  name: instructionTaskTypeName,\n  title: 'Instruction task',\n  fields: [\n    defineField({\n      type: 'string',\n      name: 'path',\n      title: 'Path',\n    }),\n    defineField({\n      type: 'string',\n      name: 'instructionKey',\n      title: 'Instruction key',\n    }),\n    defineField({\n      type: 'datetime',\n      name: 'started',\n      title: 'Started',\n    }),\n    defineField({\n      type: 'datetime',\n      name: 'updated',\n      title: 'Updated',\n    }),\n    defineField({\n      type: 'string',\n      name: 'info',\n      title: 'Info',\n    }),\n  ],\n})\n\nexport const documentInstructionStatus = defineType({\n  //NOTE: this is a document type. Using object here ensures it does not appear in structure menus\n  type: 'object',\n  //workaround for using object and not document\n  ...({liveEdit: true} as any),\n  name: assistTasksStatusTypeName,\n  title: 'Document instruction status',\n  fields: [\n    defineField({\n      type: 'array',\n      name: 'tasks',\n      title: 'Tasks',\n      of: [{type: instructionTask.name}],\n    }),\n  ],\n})\n","/* eslint-disable camelcase */\nimport {ArrayOfType, FieldProps, SchemaTypeDefinition} from 'sanity'\n\nimport {\n  assistDocumentSchema,\n  documentInstructionStatus,\n  fieldInstructions,\n  fieldReference,\n  instruction,\n  instructionTask,\n  outputFieldType,\n  outputTypeType,\n  prompt,\n  promptContext,\n  userInput,\n} from './assistDocumentSchema'\nimport {contextDocumentSchema} from './contextDocumentSchema'\n\nfunction excludeComments<T extends SchemaTypeDefinition | ArrayOfType>(type: T): T {\n  const existingRender = (type as any)?.components?.field\n  return {\n    ...type,\n    ...('components' in type\n      ? {\n          components: {\n            ...type.components,\n            field: (props: FieldProps) => {\n              const newProps = {...props, ...{__internal_comments: undefined}}\n              if (typeof existingRender === 'function') {\n                return existingRender(newProps)\n              }\n              return props.renderDefault(newProps)\n            },\n          },\n        }\n      : {}),\n    ...('fields' in type\n      ? {\n          // recursively disable comments in fields\n          fields: type.fields?.map((field) => excludeComments(field)),\n        }\n      : {}),\n    ...('of' in type\n      ? {\n          // recursively disable comments in array items\n          of: type.of?.map((arrayItemType) => excludeComments(arrayItemType)),\n        }\n      : {}),\n  }\n}\n\nconst instructionForm = [\n  fieldInstructions,\n  instruction,\n  fieldReference,\n  prompt,\n  userInput,\n  promptContext,\n].map(excludeComments)\n\nexport const schemaTypes = [\n  ...instructionForm,\n  outputFieldType,\n  outputTypeType,\n  assistDocumentSchema,\n  documentInstructionStatus,\n  instructionTask,\n  contextDocumentSchema,\n]\n","import {useMemo} from 'react'\nimport {getPublishedId, type ObjectSchemaType, useEditState} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {useAiPaneRouter} from '../../assistInspector/helpers'\nimport {fieldPathParam} from '../../types'\nimport type {AssistDocumentContextValue} from '../AssistDocumentContext'\nimport {isDocAssistable} from '../RequestRunInstructionProvider'\nimport {useStudioAssistDocument} from './useStudioAssistDocument'\n\nexport function useAssistDocumentContextValue(\n  documentId: string,\n  documentSchemaType: ObjectSchemaType,\n) {\n  const {published, draft} = useEditState(\n    getPublishedId(documentId),\n    documentSchemaType.name,\n    'low',\n  )\n  const assistableDocumentId = draft?._id || published?._id || documentId\n  const documentIsNew = Boolean(!draft?._id && !published?._id)\n  const documentIsAssistable = isDocAssistable(documentSchemaType, published, draft)\n\n  const {params} = useAiPaneRouter()\n  const selectedPath = params[fieldPathParam]\n  const {openInspector, closeInspector, inspector, onChange: documentOnChange} = useDocumentPane()\n\n  const assistDocument = useStudioAssistDocument({\n    documentId,\n    schemaType: documentSchemaType,\n  })\n\n  const value: AssistDocumentContextValue = useMemo(() => {\n    const base = {\n      documentId,\n      assistableDocumentId,\n      documentSchemaType,\n      documentIsNew,\n      documentIsAssistable,\n      openInspector,\n      closeInspector,\n      inspector,\n      documentOnChange,\n      selectedPath,\n    }\n    if (!assistDocument) {\n      return {...base, loading: true, assistDocument: undefined}\n    }\n    return {\n      ...base,\n      loading: false,\n      assistDocument: assistDocument,\n    }\n  }, [\n    assistDocument,\n    documentIsAssistable,\n    documentId,\n    assistableDocumentId,\n    documentSchemaType,\n    documentIsNew,\n    openInspector,\n    closeInspector,\n    inspector,\n    documentOnChange,\n    selectedPath,\n  ])\n\n  return value\n}\n","import {useMemo} from 'react'\nimport {Path, SchemaType} from 'sanity'\n\nimport {isAssistSupported} from './assistSupported'\n\nexport function useAssistSupported(path: Path, schemaType: SchemaType) {\n  return useMemo(() => isAssistSupported(schemaType), [schemaType])\n}\n","/* eslint-disable react-hooks/rules-of-hooks */\nimport {TranslateIcon} from '@sanity/icons'\nimport {Box, Spinner} from '@sanity/ui'\nimport {useMemo, useRef} from 'react'\nimport type {\n  DocumentFieldAction,\n  DocumentFieldActionGroup,\n  DocumentFieldActionItem,\n  DocumentFieldActionProps,\n  ObjectSchemaType,\n} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {useDraftDelayedTask} from '../assistDocument/RequestRunInstructionProvider'\nimport {useAiAssistanceConfig} from '../assistLayout/AiAssistanceConfigContext'\nimport {isAssistSupported} from '../helpers/assistSupported'\nimport {getConditionalMembers} from '../helpers/conditionalMembers'\nimport type {AssistOptions} from '../schemas/typeDefExtensions'\nimport {useApiClient, useTranslate} from '../useApiClient'\nimport {useFieldTranslation} from './FieldTranslationProvider'\n\nfunction node(node: DocumentFieldActionItem | DocumentFieldActionGroup) {\n  return node\n}\n\nexport type TranslateProps = DocumentFieldActionProps & {\n  documentIsAssistable?: boolean\n  documentSchemaType?: ObjectSchemaType\n}\nexport const translateActions: DocumentFieldAction = {\n  name: 'sanity-assist-translate',\n  useAction(props: TranslateProps) {\n    const {config, status} = useAiAssistanceConfig()\n    const apiClient = useApiClient(config?.__customApiClient)\n\n    const {\n      schemaType: fieldSchemaType,\n      path,\n      documentId,\n      documentSchemaType,\n      documentIsAssistable,\n    } = props\n    const isDocumentLevel = path.length === 0\n    const readOnly = fieldSchemaType.readOnly === true\n\n    const docTransTypes = config.translate?.document?.documentTypes\n    const options = fieldSchemaType?.options as AssistOptions | undefined\n    const addFieldAction = isDocumentLevel || options?.aiAssist?.translateAction\n\n    //All props used here MUST have the same value always, or we break the rules of hooks (conditional hook usage)\n    const fieldTransEnabled =\n      addFieldAction &&\n      documentSchemaType &&\n      config.translate?.field?.documentTypes?.includes(documentSchemaType.name)\n    const documentTranslationEnabled =\n      addFieldAction &&\n      documentSchemaType &&\n      ((!docTransTypes && isAssistSupported(fieldSchemaType)) ||\n        docTransTypes?.includes(documentSchemaType.name))\n\n    // these checks are stable (ie, does not change after mount), so not breaking rules of hooks\n    if (documentSchemaType && (documentTranslationEnabled || fieldTransEnabled)) {\n      const {value: documentValue, onChange: documentOnChange, formState} = useDocumentPane()\n      const docRef = useRef(documentValue)\n      docRef.current = documentValue\n      const formStateRef = useRef(formState)\n      formStateRef.current = formState\n\n      const translationApi = useTranslate(apiClient)\n      const translate = useDraftDelayedTask({\n        documentOnChange,\n        isDocAssistable: documentIsAssistable ?? false,\n        task: translationApi.translate,\n      })\n\n      const languagePath = config.translate?.document?.languageField\n\n      // if this is true, it is stable, and not breaking rules of hooks\n      const translateDocumentAction = useMemo(() => {\n        if (!languagePath || !documentTranslationEnabled) {\n          return undefined\n        }\n        const title = path.length ? `Translate` : `Translate document`\n        return node({\n          type: 'action',\n          icon: translationApi.loading\n            ? () => (\n                <Box style={{height: 17}}>\n                  <Spinner style={{transform: 'translateY(6px)'}} />\n                </Box>\n              )\n            : TranslateIcon,\n          title,\n          onAction: () => {\n            if (translationApi.loading || !languagePath || !documentId) {\n              return\n            }\n            translate({\n              languagePath,\n              translatePath: path,\n              documentId: documentId ?? '',\n              conditionalMembers: formStateRef.current\n                ? getConditionalMembers(formStateRef.current)\n                : [],\n            })\n          },\n          renderAsButton: true,\n          disabled: translationApi.loading || readOnly,\n        })\n      }, [\n        languagePath,\n        translate,\n        documentId,\n        translationApi.loading,\n        documentTranslationEnabled,\n        path,\n        readOnly,\n      ])\n      const fieldTranslate = useFieldTranslation()\n      const openFieldTranslation = useDraftDelayedTask({\n        documentOnChange,\n        isDocAssistable: documentIsAssistable ?? false,\n        task: fieldTranslate.openFieldTranslation,\n      })\n\n      const translateFieldsAction = useMemo(\n        () =>\n          fieldTransEnabled\n            ? node({\n                type: 'action',\n                icon: fieldTranslate.translationLoading\n                  ? () => (\n                      <Box style={{height: 17}}>\n                        <Spinner style={{transform: 'translateY(6px)'}} />\n                      </Box>\n                    )\n                  : TranslateIcon,\n                title: `Translate fields...`,\n                onAction: () => {\n                  if (fieldTranslate.translationLoading || !documentId) {\n                    return\n                  }\n                  if (formStateRef.current) {\n                    getConditionalMembers(formStateRef.current)\n                  }\n                  openFieldTranslation({\n                    document: docRef.current,\n                    documentSchema: documentSchemaType,\n                    translatePath: path,\n                    conditionalMembers: formStateRef.current\n                      ? getConditionalMembers(formStateRef.current)\n                      : [],\n                  })\n                },\n                renderAsButton: true,\n                disabled: fieldTranslate.translationLoading || readOnly,\n              })\n            : undefined,\n        [\n          openFieldTranslation,\n          documentSchemaType,\n          documentId,\n          fieldTranslate.translationLoading,\n          fieldTransEnabled,\n          path,\n          readOnly,\n        ],\n      )\n\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useMemo(() => {\n        if (!status?.initialized) {\n          return undefined as unknown as DocumentFieldActionItem\n        }\n        return node({\n          type: 'group',\n          icon: () => null,\n          title: 'Translation',\n          children: [translateDocumentAction, translateFieldsAction].filter(\n            (c): c is DocumentFieldActionItem => !!c,\n          ),\n          expanded: true,\n        })\n      }, [translateDocumentAction, translateFieldsAction, status])\n    }\n    // works but not supported by types\n    return undefined as unknown as DocumentFieldActionItem\n  },\n}\n","import {createContext, useEffect, useMemo, useState} from 'react'\nimport {type InputProps, pathToString, useSyncState} from 'sanity'\nimport {usePaneRouter} from 'sanity/structure'\n\nimport {useAssistDocumentContext} from '../assistDocument/AssistDocumentContext'\nimport {useAiAssistanceConfig} from '../assistLayout/AiAssistanceConfigContext'\nimport {publicId} from '../helpers/ids'\nimport {getDescriptionFieldOption, getImageInstructionFieldOption} from '../helpers/typeUtils'\nimport {canUseAssist, useApiClient, useGenerateCaption} from '../useApiClient'\n\nexport interface ImageContextValue {\n  imageDescriptionPath?: string\n  imageInstructionPath?: string\n  assetRef?: string\n}\n\nexport const ImageContext = createContext<ImageContextValue>({})\n\nexport function ImageContextProvider(props: InputProps) {\n  const {schemaType, path, value, readOnly} = props\n  const assetRef = (value as any)?.asset?._ref\n  const [assetRefState, setAssetRefState] = useState<string | undefined>(assetRef)\n\n  const {documentId, documentSchemaType} = useAssistDocumentContext()\n  const {config, status} = useAiAssistanceConfig()\n  const apiClient = useApiClient(config?.__customApiClient)\n  const {generateCaption} = useGenerateCaption(apiClient)\n\n  const {isSyncing} = useSyncState(publicId(documentId), documentSchemaType.name)\n\n  const router = usePaneRouter()\n  const isShowingOlderRevision = !!router.params?.rev\n\n  useEffect(() => {\n    const descriptionField = getDescriptionFieldOption(schemaType)\n    if (\n      assetRef &&\n      documentId &&\n      descriptionField &&\n      assetRef !== assetRefState &&\n      !isSyncing &&\n      !isShowingOlderRevision &&\n      !readOnly\n    ) {\n      setAssetRefState(assetRef)\n      if (canUseAssist(status)) {\n        generateCaption({path: pathToString([...path, descriptionField]), documentId: documentId})\n      }\n    }\n  }, [\n    schemaType,\n    path,\n    assetRef,\n    assetRefState,\n    documentId,\n    generateCaption,\n    isSyncing,\n    status,\n    readOnly,\n    isShowingOlderRevision,\n  ])\n\n  const context: ImageContextValue = useMemo(() => {\n    const descriptionField = getDescriptionFieldOption(schemaType)\n    const imageInstructionField = getImageInstructionFieldOption(schemaType)\n    return {\n      imageDescriptionPath: descriptionField\n        ? pathToString([...path, descriptionField])\n        : undefined,\n      imageInstructionPath: imageInstructionField\n        ? pathToString([...path, imageInstructionField])\n        : undefined,\n      assetRef,\n    }\n  }, [schemaType, path, assetRef])\n\n  return <ImageContext.Provider value={context}>{props.renderDefault(props)}</ImageContext.Provider>\n}\n","import {ImageIcon} from '@sanity/icons'\nimport {Box, Spinner} from '@sanity/ui'\nimport {useContext, useMemo} from 'react'\nimport type {DocumentFieldAction, DocumentFieldActionGroup, DocumentFieldActionItem} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {useAssistDocumentContext} from '../assistDocument/AssistDocumentContext'\nimport {aiInspectorId} from '../assistInspector/constants'\nimport {useAiAssistanceConfig} from '../assistLayout/AiAssistanceConfigContext'\nimport {ImageContext} from '../components/ImageContext'\nimport {usePathKey} from '../helpers/misc'\nimport {fieldPathParam, instructionParam} from '../types'\nimport {canUseAssist, useApiClient, useGenerateCaption} from '../useApiClient'\n\nfunction node(node: DocumentFieldActionItem | DocumentFieldActionGroup) {\n  return node\n}\n\nexport const generateCaptionsActions: DocumentFieldAction = {\n  name: 'sanity-assist-generate-captions',\n  useAction(props) {\n    const pathKey = usePathKey(props.path)\n    const {openInspector} = useDocumentPane()\n\n    const {config, status} = useAiAssistanceConfig()\n    const apiClient = useApiClient(config?.__customApiClient)\n    const {generateCaption, loading} = useGenerateCaption(apiClient)\n    const imageContext = useContext(ImageContext)\n\n    if (imageContext && pathKey === imageContext?.imageDescriptionPath) {\n      //if this is true, it is stable, and not breaking rules of hooks\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const {documentId} = useAssistDocumentContext()\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useMemo(() => {\n        return node({\n          type: 'action',\n          icon: loading\n            ? () => (\n                <Box style={{height: 17}}>\n                  <Spinner style={{transform: 'translateY(6px)'}} />\n                </Box>\n              )\n            : ImageIcon,\n          title: 'Generate image description',\n          onAction: () => {\n            if (loading) {\n              return\n            }\n            if (!canUseAssist(status)) {\n              openInspector(aiInspectorId, {\n                [fieldPathParam]: pathKey,\n                [instructionParam]: undefined as any,\n              })\n              return\n            }\n\n            generateCaption({path: pathKey, documentId: documentId ?? ''})\n          },\n          renderAsButton: true,\n          disabled: loading,\n          hidden: !imageContext.assetRef,\n        })\n      }, [generateCaption, pathKey, documentId, loading, imageContext, status, openInspector])\n    }\n\n    // works but not supported by types\n    return undefined as unknown as DocumentFieldActionItem\n  },\n}\n","import {ImageIcon} from '@sanity/icons'\nimport {Box, Spinner} from '@sanity/ui'\nimport {useContext, useMemo} from 'react'\nimport {DocumentFieldAction, DocumentFieldActionGroup, DocumentFieldActionItem} from 'sanity'\n\nimport {useAssistDocumentContext} from '../assistDocument/AssistDocumentContext'\nimport {useAiAssistanceConfig} from '../assistLayout/AiAssistanceConfigContext'\nimport {ImageContext} from '../components/ImageContext'\nimport {usePathKey} from '../helpers/misc'\nimport {useApiClient, useGenerateImage} from '../useApiClient'\n\nfunction node(node: DocumentFieldActionItem | DocumentFieldActionGroup) {\n  return node\n}\n\nexport const generateImagActions: DocumentFieldAction = {\n  name: 'sanity-assist-generate-image',\n  useAction(props) {\n    const pathKey = usePathKey(props.path)\n\n    const {config} = useAiAssistanceConfig()\n    const apiClient = useApiClient(config?.__customApiClient)\n    const {generateImage, loading} = useGenerateImage(apiClient)\n\n    const imageContext = useContext(ImageContext)\n\n    if (imageContext && pathKey === imageContext?.imageInstructionPath) {\n      //if this is true, it is stable, and not breaking rules of hooks\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      const {documentId} = useAssistDocumentContext()\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      return useMemo(() => {\n        return node({\n          type: 'action',\n          icon: loading\n            ? () => (\n                <Box style={{height: 17}}>\n                  <Spinner style={{transform: 'translateY(6px)'}} />\n                </Box>\n              )\n            : ImageIcon,\n          title: 'Generate image from prompt',\n          onAction: () => {\n            if (loading) {\n              return\n            }\n            generateImage({path: pathKey, documentId: documentId ?? ''})\n          },\n          renderAsButton: true,\n          disabled: loading,\n        })\n      }, [generateImage, pathKey, documentId, loading])\n    }\n\n    // works but not supported by types\n    return undefined as unknown as DocumentFieldActionItem\n  },\n}\n","import {LockIcon} from '@sanity/icons'\nimport {Text, Tooltip} from '@sanity/ui'\n\nexport function PrivateIcon() {\n  return (\n    <Tooltip\n      content={\n        <Text size={1} style={{whiteSpace: 'nowrap'}}>\n          Only visible to you\n        </Text>\n      }\n      fallbackPlacements={['bottom']}\n      padding={2}\n      placement=\"top\"\n      portal\n    >\n      <LockIcon />\n    </Tooltip>\n  )\n}\n","import {ControlsIcon, SparklesIcon} from '@sanity/icons'\nimport {useCallback, useMemo, useRef} from 'react'\nimport {\n  type DocumentFieldAction,\n  type DocumentFieldActionGroup,\n  type DocumentFieldActionItem,\n  type ObjectSchemaType,\n  typed,\n  useCurrentUser,\n} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {useAssistDocumentContext} from '../assistDocument/AssistDocumentContext'\nimport {getIcon} from '../assistDocument/components/instruction/appearance/IconInput'\nimport {useAssistDocumentContextValue} from '../assistDocument/hooks/useAssistDocumentContextValue'\nimport {\n  getAssistableDocId,\n  useRequestRunInstruction,\n} from '../assistDocument/RequestRunInstructionProvider'\nimport {aiInspectorId} from '../assistInspector/constants'\nimport {useSelectedField, useTypePath} from '../assistInspector/helpers'\nimport {pluginTitleShort} from '../constants'\nimport {isSchemaAssistEnabled} from '../helpers/assistSupported'\nimport {getConditionalMembers} from '../helpers/conditionalMembers'\nimport {getInstructionTitle, usePathKey} from '../helpers/misc'\nimport {useAssistSupported} from '../helpers/useAssistSupported'\nimport {translateActions, type TranslateProps} from '../translate/translateActions'\nimport {documentRootKey, fieldPathParam, instructionParam, type StudioInstruction} from '../types'\nimport {generateCaptionsActions} from './generateCaptionActions'\nimport {generateImagActions} from './generateImageActions'\nimport {PrivateIcon} from './PrivateIcon'\n\nfunction node(node: DocumentFieldActionItem | DocumentFieldActionGroup) {\n  return node\n}\n\nexport const assistFieldActions: DocumentFieldAction = {\n  name: 'sanity-assist-actions',\n  useAction(props) {\n    const {schemaType} = props\n\n    const isDocumentLevel = props.path.length === 0\n\n    const {\n      assistDocument,\n      documentIsNew,\n      documentIsAssistable,\n      openInspector,\n      closeInspector,\n      inspector,\n      documentOnChange,\n      documentSchemaType,\n      documentId,\n      selectedPath,\n      assistableDocumentId,\n    } =\n      // document field actions do not have access to the document context\n      // conditional hook _should_ be safe here since the logical path will be stable\n      isDocumentLevel\n        ? // eslint-disable-next-line react-hooks/rules-of-hooks\n          useAssistDocumentContextValue(props.documentId, schemaType as ObjectSchemaType)\n        : // eslint-disable-next-line react-hooks/rules-of-hooks\n          useAssistDocumentContext()\n\n    const {value: docValue, formState} = useDocumentPane()\n    const formStateRef = useRef(formState)\n    formStateRef.current = formState\n\n    const currentUser = useCurrentUser()\n    const isHidden = !assistDocument\n    const pathKey = usePathKey(props.path)\n    const typePath = useTypePath(docValue, pathKey)\n    const assistDocumentId = assistDocument?._id\n\n    const assistableDocId = getAssistableDocId(documentSchemaType, documentId)\n    const {requestRunInstruction} = useRequestRunInstruction({\n      documentOnChange,\n      isDocAssistable: documentIsAssistable ?? false,\n    })\n\n    const isSelectable = !!useSelectedField(documentSchemaType, typePath)\n    const assistSupported =\n      useAssistSupported(props.path, schemaType) &&\n      isSelectable &&\n      isSchemaAssistEnabled(documentSchemaType) &&\n      schemaType.readOnly !== true\n\n    const fieldAssist = useMemo(\n      () =>\n        (assistDocument?.fields ?? []).find(\n          (f) => f.path === typePath || (pathKey === documentRootKey && f.path === pathKey),\n        ),\n      [assistDocument?.fields, pathKey, typePath],\n    )\n\n    const fieldAssistKey = fieldAssist?._key\n    const isInspectorOpen = inspector?.name === aiInspectorId\n    const isPathSelected = pathKey === selectedPath\n    const isSelected = isInspectorOpen && isPathSelected\n\n    const imageCaptionAction = generateCaptionsActions.useAction(props)\n    const imageGenAction = generateImagActions.useAction(props)\n    const translateAction = translateActions.useAction(\n      typed<TranslateProps>({\n        ...props,\n        documentId: assistableDocumentId,\n        documentIsAssistable,\n        documentSchemaType,\n      }),\n    )\n    const manageInstructions = useCallback(\n      () =>\n        isSelected\n          ? closeInspector(aiInspectorId)\n          : openInspector(aiInspectorId, {\n              [fieldPathParam]: pathKey,\n              [instructionParam]: undefined as any,\n            }),\n      [openInspector, closeInspector, isSelected, pathKey],\n    )\n\n    const onInstructionAction = useCallback(\n      (instruction: StudioInstruction) => {\n        if (!pathKey || !fieldAssistKey || !assistDocumentId || !assistableDocId) {\n          return\n        }\n        requestRunInstruction({\n          documentId: assistableDocId,\n          assistDocumentId,\n          path: pathKey,\n          typePath,\n          instruction,\n          conditionalMembers: formStateRef.current\n            ? getConditionalMembers(formStateRef.current)\n            : [],\n        })\n      },\n      [requestRunInstruction, assistableDocId, pathKey, typePath, assistDocumentId, fieldAssistKey],\n    )\n\n    const privateInstructions = useMemo(\n      () =>\n        fieldAssist?.instructions?.filter((i) => i.userId && i.userId === currentUser?.id) || [],\n      [fieldAssist?.instructions, currentUser],\n    )\n\n    const sharedInstructions = useMemo(\n      () => fieldAssist?.instructions?.filter((i) => !i.userId) || [],\n      [fieldAssist?.instructions],\n    )\n\n    const instructions = useMemo(\n      () => [...privateInstructions, ...sharedInstructions],\n      [privateInstructions, sharedInstructions],\n    )\n\n    const runInstructionsGroup = useMemo(() => {\n      return instructions?.length || imageCaptionAction || translateAction || imageGenAction\n        ? node({\n            type: 'group',\n            icon: () => null,\n            title: 'Run instructions',\n            children: [\n              ...(instructions?.map((instruction) =>\n                instructionItem({\n                  instruction,\n                  isPrivate: Boolean(instruction.userId && instruction.userId === currentUser?.id),\n                  onInstructionAction,\n                  hidden: isHidden,\n                  documentIsNew: !!documentIsNew,\n                  assistSupported,\n                }),\n              ) || []),\n              imageCaptionAction,\n              imageGenAction,\n            ].filter((a): a is DocumentFieldActionItem => !!a),\n            expanded: true,\n          })\n        : undefined\n    }, [\n      instructions,\n      currentUser?.id,\n      onInstructionAction,\n      isHidden,\n      documentIsNew,\n      assistSupported,\n      imageCaptionAction,\n      translateAction,\n      imageGenAction,\n    ])\n\n    const instructionsLength = instructions?.length || 0\n\n    const manageInstructionsItem = useMemo(\n      () =>\n        node({\n          type: 'action',\n          icon: ControlsIcon,\n          title: 'Manage instructions',\n          onAction: manageInstructions,\n          selected: isSelected,\n        }),\n      [manageInstructions, isSelected],\n    )\n\n    const group = useMemo(\n      () =>\n        node({\n          type: 'group',\n          icon: SparklesIcon,\n          title: pluginTitleShort,\n          children: [\n            runInstructionsGroup,\n            translateAction,\n            assistSupported && manageInstructionsItem,\n          ]\n            .filter((c): c is DocumentFieldActionItem | DocumentFieldActionGroup => !!c)\n            .filter((c) => (c.type === 'group' ? c.children.length : true)),\n          expanded: false,\n          renderAsButton: true,\n          hidden: !assistSupported && !imageCaptionAction && !translateAction && !imageGenAction,\n        }),\n      [\n        //documentIsNew,\n        runInstructionsGroup,\n        manageInstructionsItem,\n        assistSupported,\n        imageCaptionAction,\n        translateAction,\n        imageGenAction,\n      ],\n    )\n\n    const emptyAction = useMemo(\n      () =>\n        node({\n          type: 'action',\n          hidden: !assistSupported,\n          icon: SparklesIcon,\n          onAction: manageInstructions,\n          renderAsButton: true,\n          title: pluginTitleShort,\n          selected: isSelected,\n        }),\n      [assistSupported, manageInstructions, isSelected],\n    )\n\n    // If there are no instructions, we don't want to render the group\n    if (instructionsLength === 0 && !imageCaptionAction && !translateAction && !imageGenAction) {\n      return emptyAction\n    }\n\n    return group\n  },\n}\n\nfunction instructionItem(props: {\n  instruction: StudioInstruction\n  isPrivate: boolean\n  onInstructionAction: (ins: StudioInstruction) => void\n  assistSupported: boolean\n  documentIsNew: boolean\n  hidden: boolean\n}) {\n  const {hidden, isPrivate, onInstructionAction, assistSupported, instruction} = props\n  return node({\n    type: 'action',\n    icon: getIcon(instruction.icon),\n    iconRight: isPrivate ? PrivateIcon : undefined,\n    title: getInstructionTitle(instruction),\n    onAction: () => onInstructionAction(instruction),\n    disabled: !assistSupported,\n    hidden,\n  })\n}\n","import {PropsWithChildren} from 'react'\nimport {ObjectSchemaType} from 'sanity'\n\nimport {AssistDocumentContext} from './AssistDocumentContext'\nimport {useAssistDocumentContextValue} from './hooks/useAssistDocumentContextValue'\n\nexport interface AIDocumentInputProps {\n  documentId: string\n  schemaType: ObjectSchemaType\n}\n\nexport function AssistDocumentContextProvider(props: PropsWithChildren<AIDocumentInputProps>) {\n  const {documentId, schemaType} = props\n  const value = useAssistDocumentContextValue(documentId, schemaType)\n  return (\n    <AssistDocumentContext.Provider value={value}>{props.children}</AssistDocumentContext.Provider>\n  )\n}\n","import {useToast} from '@sanity/ui'\nimport {addSeconds, isAfter} from 'date-fns'\nimport {useEffect, useRef} from 'react'\nimport {ObjectSchemaType, useCurrentUser} from 'sanity'\n\nimport {getInstructionTitle} from '../../helpers/misc'\nimport {InstructionTask} from '../../types'\nimport {useStudioAssistDocument} from './useStudioAssistDocument'\n\nconst NO_TASKS: InstructionTask[] = []\n\nexport function useInstructionToaster(documentId: string, documentSchemaType: ObjectSchemaType) {\n  const assistDocument = useStudioAssistDocument({documentId, schemaType: documentSchemaType})\n\n  const assistDocLoaded = !!assistDocument\n  const currentUser = useCurrentUser()\n  const toast = useToast()\n  const tasks = assistDocument?.tasks\n  const previousTasks = useRef<InstructionTask[] | undefined | 'initial'>('initial')\n\n  useEffect(() => {\n    if (!assistDocLoaded) {\n      return\n    }\n\n    if (previousTasks.current !== 'initial') {\n      const prevTaskByKey = Object.fromEntries(\n        (previousTasks.current ?? NO_TASKS).map((run) => [run._key, run]),\n      )\n      const endedTasks = tasks\n        ?.filter((task) => task.startedByUserId === currentUser?.id)\n        .filter((task) => {\n          const prevTask = prevTaskByKey[task._key]\n          return (!prevTask && task.ended) || (!prevTask?.ended && task.ended)\n        })\n        // filter out old stuff\n        .filter((task) => task.ended && isAfter(addSeconds(new Date(task.ended), 30), new Date()))\n\n      endedTasks?.forEach((task) => {\n        const title = task.title ?? getInstructionTitle(task.instruction)\n        if (task.reason === 'error') {\n          toast.push({\n            title: `Failed: ${title}`,\n            status: 'error',\n            description: `Instruction failed. ${task.message ?? ''}`,\n            closable: true,\n            duration: 10000,\n          })\n        } else if (task.reason === 'timeout') {\n          toast.push({\n            title: `Timeout: ${title}`,\n            status: 'error',\n            description: `Instruction timed out.`,\n            closable: true,\n          })\n        } else if (task.reason === 'success') {\n          toast.push({\n            title: `Success: ${title}`,\n            status: 'success',\n            description: `Instruction completed.`,\n            closable: true,\n          })\n        } else if (task.reason === 'aborted') {\n          toast.push({\n            title: `Canceled: ${title}`,\n            status: 'warning',\n            description: `Instruction canceled.`,\n            closable: true,\n          })\n        }\n      })\n    }\n    previousTasks.current = tasks\n  }, [tasks, previousTasks, toast, currentUser, assistDocLoaded])\n}\n","import {useLayer} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport type {InputProps, ObjectInputProps, ObjectSchemaType} from 'sanity'\nimport {useDocumentPane} from 'sanity/structure'\n\nimport {ConnectFromRegion} from '../_lib/connector'\nimport {assistFormId} from '../_lib/form/constants'\nimport {usePathKey} from '../helpers/misc'\nimport {isType} from '../helpers/typeUtils'\nimport {FirstAssistedPathProvider} from '../onboarding/FirstAssistedPathProvider'\nimport {assistDocumentTypeName} from '../types'\nimport {AssistDocumentContextProvider} from './AssistDocumentContextProvider'\nimport {useInstructionToaster} from './hooks/useInstructionToaster'\n\nexport function AssistDocumentInputWrapper(props: InputProps) {\n  if (!isType(props.schemaType, 'document') && props.id !== 'root' && props.id !== assistFormId) {\n    return <AssistInput {...props} />\n  }\n\n  const documentId = (props.value as any)?._id as string | undefined\n  if (!documentId) {\n    return props.renderDefault(props)\n  }\n\n  return <AssistDocumentInput {...(props as ObjectInputProps)} documentId={documentId} />\n}\n\nfunction AssistDocumentInput({documentId, ...props}: ObjectInputProps & {documentId: string}) {\n  useInstructionToaster(documentId, props.schemaType)\n\n  const schemaType = useMemo(() => {\n    if (props.schemaType.name !== assistDocumentTypeName) {\n      return props.schemaType\n    }\n    return {\n      ...props.schemaType,\n      type: {\n        ...props.schemaType.type,\n        // compatability with i18nArrays plugin that requires this to be document\n        name: 'document',\n      },\n    } as ObjectSchemaType\n  }, [props.schemaType])\n\n  return (\n    <FirstAssistedPathProvider members={props.members}>\n      <AssistDocumentContextProvider schemaType={schemaType} documentId={documentId}>\n        {props.renderDefault({\n          ...props,\n          schemaType,\n        })}\n      </AssistDocumentContextProvider>\n    </FirstAssistedPathProvider>\n  )\n}\n\nfunction AssistInput(props: InputProps) {\n  const {zIndex} = useLayer()\n  const {paneKey} = useDocumentPane()\n  const pathKey = usePathKey(props.path)\n\n  return (\n    <ConnectFromRegion _key={`${paneKey}_${pathKey}`} zIndex={zIndex} style={{minWidth: 0}}>\n      {props.renderDefault(props)}\n    </ConnectFromRegion>\n  )\n}\n","import {Card, Flex} from '@sanity/ui'\nimport {useMemo} from 'react'\nimport {ObjectSchemaType} from 'sanity'\n\nimport {useAssistDocumentContextValue} from '../assistDocument/hooks/useAssistDocumentContextValue'\nimport {documentRootKey, fieldPresenceTypeName} from '../types'\nimport {AiFieldPresence} from './AiFieldPresence'\nimport {aiPresence} from './useAssistPresence'\n\nexport function createAssistDocumentPresence(\n  documentId: string | undefined,\n  schemaType: ObjectSchemaType,\n) {\n  return function AssistDocumentPresenceWrapper() {\n    return documentId ? (\n      <AssistDocumentPresence documentId={documentId} schemaType={schemaType} />\n    ) : null\n  }\n}\n\nfunction AssistDocumentPresence(props: {documentId: string; schemaType: ObjectSchemaType}) {\n  const {assistDocument} = useAssistDocumentContextValue(\n    props.documentId,\n    props.schemaType as ObjectSchemaType,\n  )\n  const anyPresence = useMemo(() => {\n    const anyPresence = assistDocument?.tasks\n      ?.filter((run) => !run.ended && !run.reason)\n      ?.flatMap((run) => run.presence ?? [])\n      .find((f) => f.started && new Date().getTime() - new Date(f.started).getTime() < 30000)\n    if (anyPresence) {\n      return aiPresence(anyPresence, [])\n    }\n    const anyRun = assistDocument?.tasks\n      ?.filter((run) => !run.ended && !run.reason)\n      ?.find((f) => f.started && new Date().getTime() - new Date(f.started).getTime() < 30000)\n    return anyRun\n      ? aiPresence(\n          {\n            started: anyRun.started,\n            path: documentRootKey,\n            _key: anyRun._key,\n            _type: fieldPresenceTypeName,\n          },\n          [],\n        )\n      : undefined\n  }, [assistDocument?.tasks])\n\n  return (\n    <Card>\n      <Flex flex={1} justify=\"flex-end\">\n        <Flex gap={2} align={'center'}>\n          {anyPresence && <AiFieldPresence presence={anyPresence} />}\n        </Flex>\n      </Flex>\n    </Card>\n  )\n}\n","import {definePlugin, isObjectSchemaType} from 'sanity'\nimport {assistInspector} from './assistInspector'\nimport {AssistFieldWrapper} from './assistFormComponents/AssistField'\nimport {AssistLayout} from './assistLayout/AssistLayout'\nimport {AssistFormBlock} from './assistFormComponents/AssistFormBlock'\nimport {AssistItem} from './assistFormComponents/AssistItem'\nimport {SanityClient} from '@sanity/client'\nimport {SafeValueInput} from './components/SafeValueInput'\nimport {schemaTypes} from './schemas'\nimport {AssistInlineFormBlock} from './assistFormComponents/AssistInlineFormBlock'\nimport {assistFieldActions} from './fieldActions/assistFieldActions'\nimport {packageName} from './constants'\nimport {AssistDocumentInputWrapper} from './assistDocument/AssistDocumentInput'\nimport {createAssistDocumentPresence} from './presence/AssistDocumentPresence'\nimport {isSchemaAssistEnabled} from './helpers/assistSupported'\nimport {isImage} from './helpers/typeUtils'\nimport {ImageContextProvider} from './components/ImageContext'\nimport {TranslationConfig} from './translate/types'\nimport {assistDocumentTypeName, AssistPreset} from './types'\n\nexport interface AssistPluginConfig {\n  translate?: TranslationConfig\n\n  /**\n   * @internal\n   */\n  __customApiClient?: (defaultClient: SanityClient) => SanityClient\n\n  /**\n   * @internal\n   */\n  __presets?: Record<string, AssistPreset>\n}\n\nexport const assist = definePlugin<AssistPluginConfig | void>((config) => {\n  const configWithDefaults = config ?? {}\n  return {\n    name: packageName,\n\n    schema: {\n      types: schemaTypes,\n    },\n    i18n: {\n      bundles: [{}],\n    },\n\n    document: {\n      inspectors: (prev, context) => {\n        const documentType = context.documentType\n        const docSchema = context.schema.get(documentType)\n        if (docSchema && isSchemaAssistEnabled(docSchema)) {\n          return [...prev, assistInspector]\n        }\n        return prev\n      },\n      unstable_fieldActions: (prev, {documentType, schema}) => {\n        if (documentType === assistDocumentTypeName) {\n          return []\n        }\n        const docSchema = schema.get(documentType)\n        if (docSchema && isSchemaAssistEnabled(docSchema)) {\n          return [...prev, assistFieldActions]\n        }\n        return prev\n      },\n      unstable_languageFilter: (prev, {documentId, schema, schemaType}) => {\n        if (schemaType === assistDocumentTypeName) {\n          return []\n        }\n        const docSchema = schema.get(schemaType)\n        if (docSchema && isObjectSchemaType(docSchema) && isSchemaAssistEnabled(docSchema)) {\n          return [...prev, createAssistDocumentPresence(documentId, docSchema)]\n        }\n        return prev\n      },\n    },\n\n    studio: {\n      components: {\n        layout: function Layout(props) {\n          return <AssistLayout {...props} config={configWithDefaults} />\n        },\n      },\n    },\n\n    form: {\n      components: {\n        input: AssistDocumentInputWrapper,\n        field: AssistFieldWrapper,\n        item: AssistItem,\n        block: AssistFormBlock,\n        inlineBlock: AssistInlineFormBlock,\n      },\n    },\n\n    plugins: [\n      definePlugin({\n        name: `${packageName}/safe-value-input`,\n        form: {components: {input: SafeValueInput}},\n      })(),\n\n      definePlugin({\n        name: `${packageName}/generate-caption`,\n        form: {\n          components: {\n            input: (props) => {\n              const {schemaType} = props\n\n              if (isImage(schemaType)) {\n                return <ImageContextProvider {...props} />\n              }\n              return props.renderDefault(props)\n            },\n          },\n        },\n      })(),\n    ],\n  }\n})\n"],"names":["options","_a","MAX_DEPTH","maxDepth","instruction","_b","status","isDocAssistable","filter","basePath","scrollParent","document","languages","toLanguages","fromLanguage","catchError","value","assistDocumentId","anyPresence"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95]}},
    {"offset": {"line": 5318, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}