{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/api.ts"],"sourcesContent":["/**\r\n * As this file is reused in several other files, try to keep it lean and small.\r\n * Importing other npm packages here could lead to needlessly increasing the client bundle size, or end up in a server-only function that don't need it.\r\n */\r\n\r\nfunction assertValue<T>(v: T | undefined, errorMessage: string): T {\r\n  if (v === undefined) {\r\n    throw new Error(errorMessage);\r\n  }\r\n\r\n  return v;\r\n}\r\n\r\nexport const dataset = assertValue(\r\n  process.env.NEXT_PUBLIC_SANITY_DATASET,\r\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_DATASET\",\r\n);\r\n\r\nexport const projectId = assertValue(\r\n  process.env.NEXT_PUBLIC_SANITY_PROJECT_ID,\r\n  \"Missing environment variable: NEXT_PUBLIC_SANITY_PROJECT_ID\",\r\n);\r\n\r\n/**\r\n * see https://www.sanity.io/docs/api-versioning for how versioning works\r\n */\r\nexport const apiVersion =\r\n  process.env.NEXT_PUBLIC_SANITY_API_VERSION || \"2024-02-28\";\r\n\r\n/**\r\n * Used to configure edit intent links, for Presentation Mode, as well as to configure where the Studio is mounted in the router.\r\n */\r\nexport const studioUrl = \"/studio\";\r\n"],"names":[],"mappings":"AAAA;;;CAGC;;;;;;AAED,SAAS,YAAe,CAAgB,EAAE,YAAoB;IAC5D,IAAI,MAAM,WAAW;QACnB,MAAM,IAAI,MAAM;IAClB;IAEA,OAAO;AACT;AAEO,MAAM,UAAU,4DAErB;AAGK,MAAM,YAAY,0DAEvB;AAMK,MAAM,aACX,QAAQ,GAAG,CAAC,8BAA8B,IAAI;AAKzC,MAAM,YAAY"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/client.ts"],"sourcesContent":["import { createClient } from \"next-sanity\";\r\n\r\nimport { apiVersion, dataset, projectId, studioUrl } from \"@/sanity/lib/api\";\r\n\r\nexport const client = createClient({\r\n  projectId,\r\n  dataset,\r\n  apiVersion,\r\n  useCdn: true,\r\n  perspective: \"published\",\r\n  stega: {\r\n    studioUrl,\r\n    logger: console,\r\n    filter: (props) => {\r\n      if (props.sourcePath.at(-1) === \"title\") {\r\n        return true;\r\n      }\r\n\r\n      return props.filterDefault(props);\r\n    },\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;AAEA;AAFA;;;AAIO,MAAM,SAAS,CAAA,GAAA,qQAAA,CAAA,eAAY,AAAD,EAAE;IACjC,WAAA,sHAAA,CAAA,YAAS;IACT,SAAA,sHAAA,CAAA,UAAO;IACP,YAAA,sHAAA,CAAA,aAAU;IACV,QAAQ;IACR,aAAa;IACb,OAAO;QACL,WAAA,sHAAA,CAAA,YAAS;QACT,QAAQ;QACR,QAAQ,CAAC;YACP,IAAI,MAAM,UAAU,CAAC,EAAE,CAAC,CAAC,OAAO,SAAS;gBACvC,OAAO;YACT;YAEA,OAAO,MAAM,aAAa,CAAC;QAC7B;IACF;AACF"}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 102, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/sanity/lib/token.ts"],"sourcesContent":["import \"server-only\";\r\n\r\nexport const token = process.env.SANITY_API_READ_TOKEN;\r\n\r\nif (!token) {\r\n  throw new Error(\"Missing SANITY_API_READ_TOKEN\");\r\n}\r\n"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,QAAQ,QAAQ,GAAG,CAAC,qBAAqB;AAEtD,IAAI,CAAC,OAAO;IACV,MAAM,IAAI,MAAM;AAClB"}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 133, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/app/api/draft-mode/enable/route.ts"],"sourcesContent":["import { defineEnableDraftMode } from \"next-sanity/draft-mode\";\r\n\r\nimport { client } from \"@/sanity/lib/client\";\r\nimport { token } from \"@/sanity/lib/token\";\r\n\r\nexport const { GET } = defineEnableDraftMode({\r\n  client: client.withConfig({ token }),\r\n});\r\n"],"names":[],"mappings":";;;AAEA;AACA;AAHA;;;;AAKO,MAAM,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,+WAAA,CAAA,wBAAqB,AAAD,EAAE;IAC3C,QAAQ,yHAAA,CAAA,SAAM,CAAC,UAAU,CAAC;QAAE,OAAA,wHAAA,CAAA,QAAK;IAAC;AACpC"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}