{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/fast-deep-equal%403.1.3/node_modules/fast-deep-equal/index.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n"],"names":[],"mappings":"AAAA;AAEA,sDAAsD;AAItD,OAAO,OAAO,GAAG,SAAS,MAAM,CAAC,EAAE,CAAC;IAClC,IAAI,MAAM,GAAG,OAAO;IAEpB,IAAI,KAAK,KAAK,OAAO,KAAK,YAAY,OAAO,KAAK,UAAU;QAC1D,IAAI,EAAE,WAAW,KAAK,EAAE,WAAW,EAAE,OAAO;QAE5C,IAAI,QAAQ,GAAG;QACf,IAAI,MAAM,OAAO,CAAC,IAAI;YACpB,SAAS,EAAE,MAAM;YACjB,IAAI,UAAU,EAAE,MAAM,EAAE,OAAO;YAC/B,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,GAAG,OAAO;YACjC,OAAO;QACT;QAIA,IAAI,EAAE,WAAW,KAAK,QAAQ,OAAO,EAAE,MAAM,KAAK,EAAE,MAAM,IAAI,EAAE,KAAK,KAAK,EAAE,KAAK;QACjF,IAAI,EAAE,OAAO,KAAK,OAAO,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,OAAO,EAAE,OAAO;QAC5E,IAAI,EAAE,QAAQ,KAAK,OAAO,SAAS,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,OAAO,EAAE,QAAQ;QAEhF,OAAO,OAAO,IAAI,CAAC;QACnB,SAAS,KAAK,MAAM;QACpB,IAAI,WAAW,OAAO,IAAI,CAAC,GAAG,MAAM,EAAE,OAAO;QAE7C,IAAK,IAAI,QAAQ,QAAQ,GACvB,IAAI,CAAC,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;QAEhE,IAAK,IAAI,QAAQ,QAAQ,GAAI;YAC3B,IAAI,MAAM,IAAI,CAAC,EAAE;YAEjB,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,IAAI,GAAG,OAAO;QACrC;QAEA,OAAO;IACT;IAEA,oCAAoC;IACpC,OAAO,MAAI,KAAK,MAAI;AACtB","ignoreList":[0]}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"file":"bufferCount.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/rxjs%407.8.1/node_modules/rxjs/src/internal/operators/bufferCount.ts"],"sourcesContent":["import { OperatorFunction } from '../types';\nimport { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { arrRemove } from '../util/arrRemove';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent, bufferCount } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return A function that returns an Observable of arrays of buffered values.\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number | null = null): OperatorFunction<T, T[]> {\n  // If no `startBufferEvery` value was supplied, then we're\n  // opening and closing on the bufferSize itself.\n  startBufferEvery = startBufferEvery ?? bufferSize;\n\n  return operate((source, subscriber) => {\n    let buffers: T[][] = [];\n    let count = 0;\n\n    source.subscribe(\n      createOperatorSubscriber(\n        subscriber,\n        (value) => {\n          let toEmit: T[][] | null = null;\n\n          // Check to see if we need to start a buffer.\n          // This will start one at the first value, and then\n          // a new one every N after that.\n          if (count++ % startBufferEvery! === 0) {\n            buffers.push([]);\n          }\n\n          // Push our value into our active buffers.\n          for (const buffer of buffers) {\n            buffer.push(value);\n            // Check to see if we're over the bufferSize\n            // if we are, record it so we can emit it later.\n            // If we emitted it now and removed it, it would\n            // mutate the `buffers` array while we're looping\n            // over it.\n            if (bufferSize <= buffer.length) {\n              toEmit = toEmit ?? [];\n              toEmit.push(buffer);\n            }\n          }\n\n          if (toEmit) {\n            // We have found some buffers that are over the\n            // `bufferSize`. Emit them, and remove them from our\n            // buffers list.\n            for (const buffer of toEmit) {\n              arrRemove(buffers, buffer);\n              subscriber.next(buffer);\n            }\n          }\n        },\n        () => {\n          // When the source completes, emit all of our\n          // active buffers.\n          for (const buffer of buffers) {\n            subscriber.next(buffer);\n          }\n          subscriber.complete();\n        },\n        // Pass all errors through to consumer.\n        undefined,\n        () => {\n          // Clean up our memory when we finalize\n          buffers = null!;\n        }\n      )\n    );\n  });\n}\n"],"names":[],"mappings":";;;AACA,OAAO,EAAE,OAAO,EAAE,MAAM,cAAc,CAAC;AACvC,OAAO,EAAE,wBAAwB,EAAE,MAAM,sBAAsB,CAAC;;AAChE,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;;;;;AAqDxC,SAAU,WAAW,CAAI,UAAkB,EAAE,gBAAsC;IAAtC,IAAA,qBAAA,KAAA,GAAA;QAAA,mBAAA,IAAsC;IAAA;IAGvF,gBAAgB,GAAG,gBAAgB,KAAA,QAAhB,gBAAgB,KAAA,KAAA,IAAhB,gBAAgB,GAAI,UAAU,CAAC;IAElD,+NAAO,WAAA,AAAO,EAAC,SAAC,MAAM,EAAE,UAAU;QAChC,IAAI,OAAO,GAAU,EAAE,CAAC;QACxB,IAAI,KAAK,GAAG,CAAC,CAAC;QAEd,MAAM,CAAC,SAAS,6OACd,2BAAA,AAAwB,EACtB,UAAU,EACV,SAAC,KAAK;;YACJ,IAAI,MAAM,GAAiB,IAAI,CAAC;YAKhC,IAAI,KAAK,EAAE,GAAG,gBAAiB,KAAK,CAAC,EAAE;gBACrC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aAClB;;gBAGD,IAAqB,IAAA,gBAAA,uMAAA,EAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAMnB,IAAI,UAAU,IAAI,MAAM,CAAC,MAAM,EAAE;wBAC/B,MAAM,GAAG,MAAM,KAAA,QAAN,MAAM,KAAA,KAAA,IAAN,MAAM,GAAI,EAAE,CAAC;wBACtB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACrB;iBACF;;;;;;;;;;;;YAED,IAAI,MAAM,EAAE;;oBAIV,IAAqB,IAAA,2MAAA,WAAA,EAAA,MAAM,CAAA,EAAA,aAAA,SAAA,IAAA,EAAA,EAAA,CAAA,WAAA,IAAA,EAAA,aAAA,SAAA,IAAA,GAAE;wBAAxB,IAAM,MAAM,GAAA,WAAA,KAAA;sPACf,YAAA,AAAS,EAAC,OAAO,EAAE,MAAM,CAAC,CAAC;wBAC3B,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACzB;;;;;;;;;;;;aACF;QACH,CAAC,EACD;;;gBAGE,IAAqB,IAAA,4MAAA,WAAA,EAAA,OAAO,CAAA,EAAA,cAAA,UAAA,IAAA,EAAA,EAAA,CAAA,YAAA,IAAA,EAAA,cAAA,UAAA,IAAA,GAAE;oBAAzB,IAAM,MAAM,GAAA,YAAA,KAAA;oBACf,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACzB;;;;;;;;;;;;YACD,UAAU,CAAC,QAAQ,EAAE,CAAC;QACxB,CAAC,EAED,SAAS,EACT;YAEE,OAAO,GAAG,IAAK,CAAC;QAClB,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 129, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/native.js"],"sourcesContent":["var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};"],"names":[],"mappings":";;;AAAA,IAAI,aAAa,OAAO,WAAW,eAAe,OAAO,UAAU,IAAI,OAAO,UAAU,CAAC,IAAI,CAAC;uCAC/E;IACb;AACF","ignoreList":[0]}},
    {"offset": {"line": 152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/rng.js"],"sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}"],"names":[],"mappings":"AAAA,6FAA6F;AAC7F,6FAA6F;AAC7F,mCAAmC;;;;AAEnC,IAAI;AACJ,IAAI,QAAQ,IAAI,WAAW;AACZ,SAAS;IACtB,8EAA8E;IAC9E,IAAI,CAAC,iBAAiB;QACpB,4FAA4F;QAC5F,kBAAkB,OAAO,WAAW,eAAe,OAAO,eAAe,IAAI,OAAO,eAAe,CAAC,IAAI,CAAC;QACzG,IAAI,CAAC,iBAAiB;YACpB,MAAM,IAAI,MAAM;QAClB;IACF;IACA,OAAO,gBAAgB;AACzB","ignoreList":[0]}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/regex.js"],"sourcesContent":["export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-8][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000|ffffffff-ffff-ffff-ffff-ffffffffffff)$/i;"],"names":[],"mappings":";;;uCAAe","ignoreList":[0]}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/validate.js"],"sourcesContent":["import REGEX from './regex.js';\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\nexport default validate;"],"names":[],"mappings":";;;AAAA;;AACA,SAAS,SAAS,IAAI;IACpB,OAAO,OAAO,SAAS,YAAY,4MAAA,CAAA,UAAK,CAAC,IAAI,CAAC;AAChD;uCACe","ignoreList":[0]}},
    {"offset": {"line": 202, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 208, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/stringify.js"],"sourcesContent":["import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;"],"names":[],"mappings":";;;;AAAA;;AAEA;;;CAGC,GACD,IAAI,YAAY,EAAE;AAClB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EAAG;IAC5B,UAAU,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,QAAQ,CAAC,IAAI,KAAK,CAAC;AAChD;AACO,SAAS,gBAAgB,GAAG,EAAE,SAAS,CAAC;IAC7C,uEAAuE;IACvE,oFAAoF;IACpF,EAAE;IACF,sEAAsE;IACtE,uEAAuE;IACvE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,GAAG,MAAM,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC,EAAE,WAAW;AAClgB;AACA,SAAS,UAAU,GAAG,EAAE,SAAS,CAAC;IAChC,IAAI,OAAO,gBAAgB,KAAK;IAChC,4EAA4E;IAC5E,oBAAoB;IACpB,wEAAwE;IACxE,2BAA2B;IAC3B,mEAAmE;IACnE,IAAI,CAAC,CAAA,GAAA,+MAAA,CAAA,UAAQ,AAAD,EAAE,OAAO;QACnB,MAAM,UAAU;IAClB;IACA,OAAO;AACT;uCACe","ignoreList":[0]}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/v4.js"],"sourcesContent":["import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AACA,SAAS,GAAG,OAAO,EAAE,GAAG,EAAE,MAAM;IAC9B,IAAI,6MAAA,CAAA,UAAM,CAAC,UAAU,IAAI,CAAC,OAAO,CAAC,SAAS;QACzC,OAAO,6MAAA,CAAA,UAAM,CAAC,UAAU;IAC1B;IACA,UAAU,WAAW,CAAC;IACtB,IAAI,OAAO,QAAQ,MAAM,IAAI,CAAC,QAAQ,GAAG,IAAI,0MAAA,CAAA,UAAG;IAEhD,gEAAgE;IAChE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;IAC3B,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,GAAG,OAAO;IAE3B,oCAAoC;IACpC,IAAI,KAAK;QACP,SAAS,UAAU;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;YAC3B,GAAG,CAAC,SAAS,EAAE,GAAG,IAAI,CAAC,EAAE;QAC3B;QACA,OAAO;IACT;IACA,OAAO,CAAA,GAAA,gNAAA,CAAA,kBAAe,AAAD,EAAE;AACzB;uCACe","ignoreList":[0]}},
    {"offset": {"line": 277, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bcomlink%402.0.1/node_modules/%40sanity/comlink/src/common.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bcomlink%402.0.1/node_modules/%40sanity/comlink/src/constants.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bcomlink%402.0.1/node_modules/%40sanity/comlink/src/request.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bcomlink%402.0.1/node_modules/%40sanity/comlink/src/connection.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bcomlink%402.0.1/node_modules/%40sanity/comlink/src/controller.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bcomlink%402.0.1/node_modules/%40sanity/comlink/src/node.ts"],"sourcesContent":["import {bufferCount, concatMap, defer, filter, fromEvent, map, pipe, take} from 'rxjs'\nimport {fromEventObservable} from 'xstate'\nimport type {ListenInput, ProtocolMessage} from './types'\n\nexport const listenInputFromContext =\n  (\n    config: (\n      | {\n          include: string | string[]\n          exclude?: string | string[]\n        }\n      | {\n          include?: string | string[]\n          exclude: string | string[]\n        }\n    ) & {\n      matches?: boolean\n      count?: number\n      responseType?: string\n    },\n  ) =>\n  <\n    T extends {\n      domain: string\n      connectTo: string\n      name: string\n      target: MessageEventSource | undefined\n    },\n  >({\n    context,\n  }: {\n    context: T\n  }): ListenInput => {\n    const {count, include, exclude, responseType = 'message.received'} = config\n    return {\n      count,\n      domain: context.domain,\n      from: context.connectTo,\n      include: include ? (Array.isArray(include) ? include : [include]) : [],\n      exclude: exclude ? (Array.isArray(exclude) ? exclude : [exclude]) : [],\n      responseType,\n      target: context.target,\n      to: context.name,\n    }\n  }\n\nexport const listenFilter =\n  (input: ListenInput) =>\n  (event: MessageEvent<ProtocolMessage>): boolean => {\n    const {data} = event\n    return (\n      (input.include.length ? input.include.includes(data.type) : true) &&\n      (input.exclude.length ? !input.exclude.includes(data.type) : true) &&\n      data.domain === input.domain &&\n      data.from === input.from &&\n      data.to === input.to &&\n      (!input.target || event.source === input.target)\n    )\n  }\n\nexport const eventToMessage =\n  <T>(type: T) =>\n  (event: MessageEvent<ProtocolMessage>): {type: T; message: MessageEvent<ProtocolMessage>} => ({\n    type,\n    message: event,\n  })\n\nexport const messageEvents$ = defer(() =>\n  fromEvent<MessageEvent<ProtocolMessage>>(window, 'message'),\n)\n\n/**\n * @public\n */\nexport const createListenLogic = (\n  compatMap?: (event: MessageEvent<ProtocolMessage>) => MessageEvent<ProtocolMessage>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n) =>\n  fromEventObservable(({input}: {input: ListenInput}) => {\n    return messageEvents$.pipe(\n      compatMap ? map(compatMap) : pipe(),\n      filter(listenFilter(input)),\n      map(eventToMessage(input.responseType)),\n      input.count\n        ? pipe(\n            bufferCount(input.count),\n            concatMap((arr) => arr),\n            take(input.count),\n          )\n        : pipe(),\n    )\n  })\n","import type {MessageType} from './types'\n\n/** @internal */\nexport const DOMAIN = 'sanity/comlink'\n\n/** @internal */\nexport const RESPONSE_TIMEOUT_DEFAULT = 3_000\n\n/** @internal */\nexport const FETCH_TIMEOUT_DEFAULT = 10_000\n\n/** @internal */\nexport const HEARTBEAT_INTERVAL = 1000\n\n/** @internal */\nexport const HANDSHAKE_INTERVAL = 500\n\n/**\n * @public\n */\nexport const MSG_RESPONSE = 'comlink/response'\n\n/**\n * @public\n */\nexport const MSG_HEARTBEAT = 'comlink/heartbeat'\n\n/** @internal */\nexport const MSG_DISCONNECT = 'comlink/disconnect'\n\n/** @internal */\nexport const MSG_HANDSHAKE_SYN = 'comlink/handshake/syn'\n\n/** @internal */\nexport const MSG_HANDSHAKE_SYN_ACK = 'comlink/handshake/syn-ack'\n\n/** @internal */\nexport const MSG_HANDSHAKE_ACK = 'comlink/handshake/ack'\n\n/** @internal */\nexport const HANDSHAKE_MSG_TYPES = [\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HANDSHAKE_ACK,\n] satisfies MessageType[]\n\n/** @internal */\nexport const INTERNAL_MSG_TYPES = [\n  MSG_RESPONSE,\n  MSG_DISCONNECT,\n  MSG_HEARTBEAT,\n  ...HANDSHAKE_MSG_TYPES,\n] satisfies MessageType[]\n","import {EMPTY, filter, fromEvent, map, take, takeUntil, type Observable} from 'rxjs'\nimport {v4 as uuid} from 'uuid'\nimport {\n  assign,\n  fromEventObservable,\n  sendTo,\n  setup,\n  type ActorRefFrom,\n  type AnyActorRef,\n} from 'xstate'\nimport {MSG_RESPONSE, RESPONSE_TIMEOUT_DEFAULT} from './constants'\nimport type {Message, MessageData, MessageType, ProtocolMessage, ResponseMessage} from './types'\n\nconst throwOnEvent =\n  <T>(message?: string) =>\n  (source: Observable<T>) =>\n    source.pipe(\n      take(1),\n      map(() => {\n        throw new Error(message)\n      }),\n    )\n\n/**\n * @public\n */\nexport interface RequestMachineContext<S extends Message> {\n  channelId: string\n  data: MessageData | undefined\n  domain: string\n  expectResponse: boolean\n  from: string\n  id: string\n  parentRef: AnyActorRef\n  resolvable: PromiseWithResolvers<S['response']> | undefined\n  response: S['response'] | null\n  responseTimeout: number | undefined\n  responseTo: string | undefined\n  signal: AbortSignal | undefined\n  suppressWarnings: boolean | undefined\n  sources: Set<MessageEventSource>\n  targetOrigin: string\n  to: string\n  type: MessageType\n}\n\n/**\n * @public\n */\nexport type RequestActorRef<S extends Message> = ActorRefFrom<\n  ReturnType<typeof createRequestMachine<S>>\n>\n\n/**\n * @public\n */\nexport const createRequestMachine = <\n  S extends Message,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  return setup({\n    types: {} as {\n      children: {\n        'listen for response': 'listen'\n      }\n      context: RequestMachineContext<S>\n      // @todo Should response types be specified?\n      events: {type: 'message'; data: ProtocolMessage<ResponseMessage>} | {type: 'abort'}\n      emitted:\n        | {type: 'request.failed'; requestId: string}\n        | {type: 'request.aborted'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: MessageData | null\n            responseTo: string | undefined\n          }\n      input: {\n        channelId: string\n        data?: S['data']\n        domain: string\n        expectResponse?: boolean\n        from: string\n        parentRef: AnyActorRef\n        resolvable?: PromiseWithResolvers<S['response']>\n        responseTimeout?: number\n        responseTo?: string\n        signal?: AbortSignal\n        sources: Set<MessageEventSource> | MessageEventSource\n        suppressWarnings?: boolean\n        targetOrigin: string\n        to: string\n        type: S['type']\n      }\n      output: {\n        requestId: string\n        response: S['response'] | null\n        responseTo: string | undefined\n      }\n    },\n    actors: {\n      listen: fromEventObservable(\n        ({\n          input,\n        }: {\n          input: {\n            requestId: string\n            sources: Set<MessageEventSource>\n            signal?: AbortSignal\n          }\n        }) => {\n          const abortSignal$ = input.signal\n            ? fromEvent(input.signal, 'abort').pipe(\n                throwOnEvent(`Request ${input.requestId} aborted`),\n              )\n            : EMPTY\n\n          const messageFilter = (event: MessageEvent<ProtocolMessage<ResponseMessage>>) =>\n            event.data?.type === MSG_RESPONSE &&\n            event.data?.responseTo === input.requestId &&\n            !!event.source &&\n            input.sources.has(event.source)\n\n          return fromEvent<MessageEvent<ProtocolMessage<ResponseMessage>>>(window, 'message').pipe(\n            filter(messageFilter),\n            take(input.sources.size),\n            takeUntil(abortSignal$),\n          )\n        },\n      ),\n    },\n    actions: {\n      'send message': ({context}, params: {message: ProtocolMessage}) => {\n        const {sources, targetOrigin} = context\n        const {message} = params\n\n        sources.forEach((source) => {\n          source.postMessage(message, {targetOrigin})\n        })\n      },\n      'on success': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          if (context.response) {\n            context.resolvable?.resolve(context.response)\n          }\n          return {\n            type: 'request.success',\n            requestId: self.id,\n            response: context.response,\n            responseTo: context.responseTo,\n          }\n        },\n      ),\n      'on fail': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          if (!context.suppressWarnings) {\n            // eslint-disable-next-line no-console\n            console.warn(\n              `[@sanity/comlink] Received no response to message '${context.type}' on client '${context.from}' (ID: '${context.id}').`,\n            )\n          }\n          context.resolvable?.reject(new Error('No response received'))\n          return {type: 'request.failed', requestId: self.id}\n        },\n      ),\n      'on abort': sendTo(\n        ({context}) => context.parentRef,\n        ({context, self}) => {\n          context.resolvable?.reject(new Error('Request aborted'))\n          return {type: 'request.aborted', requestId: self.id}\n        },\n      ),\n    },\n    guards: {\n      expectsResponse: ({context}) => context.expectResponse,\n    },\n    delays: {\n      initialTimeout: 0,\n      responseTimeout: ({context}) => context.responseTimeout ?? RESPONSE_TIMEOUT_DEFAULT,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QAoC2BDAxgCwJYDswBKAOlwgBswBiAD1gBd0GwT0AzFgJ2QNwdzoKAFVyowAewCuDItTRY8hUuSoBtAAwBdRKAAOE2P1wT8ukLUQBGAEwBWEgBYAnK+eOAzB7sB2DzY8rABoQAE9rDQc3V0cNTw8fAA4NHwBfVJCFHAJiElgwfAgCKGpNHSQQAyMBU3NLBDsrDxI7DTaAjQA2OOcNDxDwhHsNJx9Ou0TOq2cJxP9HdMyMbOU8gqL8ErUrcv1DY1qK+sbm1vaPLp6+gcRnGydo9wDGycWQLKVc9AB3dGNN6jiWCwdAwMrmKoHMxHRCJRKOEiJHwuZKBZwXKzBMKIGyYkhtAkXOweTqOHw2RJvD45Ug-P4CAH0JgsNicMA8LhwAz4fKicTSWTyZafWm-f5QcEVSE1aGgepwhFIlF9aYYrGDC4+JzEppjGzOUkeGbpDIgfASCBwczU5QQ-YyuqIAC0nRuCBd+IJXu9KSpwppZEoYDt1RMsosiEcNjdVjiJEeGisiSTHkcVgWpptuXyhWKIahjqGzi1BqRJINnVcdkcbuTLS9VYC8ISfsUAbp4vzDphCHJIyjBvJNlxNmRNexQ3sJGH43GPj8jWJrZWuXYfyoEC7YcLsbrgRsjkcvkmdgNbopVhIPhVfnsh8ClMz-tWsCkmEwcHgUvt257u8v+6Hse4xnhOdZnImVidPqCRNB4JqpEAA */\n    context: ({input}) => {\n      return {\n        channelId: input.channelId,\n        data: input.data,\n        domain: input.domain,\n        expectResponse: input.expectResponse ?? false,\n        from: input.from,\n        id: `msg-${uuid()}`,\n        parentRef: input.parentRef,\n        resolvable: input.resolvable,\n        response: null,\n        responseTimeout: input.responseTimeout,\n        responseTo: input.responseTo,\n        signal: input.signal,\n        sources: input.sources instanceof Set ? input.sources : new Set([input.sources]),\n        suppressWarnings: input.suppressWarnings,\n        targetOrigin: input.targetOrigin,\n        to: input.to,\n        type: input.type,\n      }\n    },\n    initial: 'idle',\n    on: {\n      abort: '.aborted',\n    },\n    states: {\n      idle: {\n        after: {\n          initialTimeout: [\n            {\n              target: 'sending',\n            },\n          ],\n        },\n      },\n      sending: {\n        entry: {\n          type: 'send message',\n          params: ({context}) => {\n            const {channelId, data, domain, from, id, responseTo, to, type} = context\n            const message = {\n              channelId,\n              data,\n              domain,\n              from,\n              id,\n              to,\n              type,\n              responseTo,\n            }\n            return {message}\n          },\n        },\n        always: [\n          {\n            guard: 'expectsResponse',\n            target: 'awaiting',\n          },\n          'success',\n        ],\n      },\n      awaiting: {\n        invoke: {\n          id: 'listen for response',\n          src: 'listen',\n          input: ({context}) => ({\n            requestId: context.id,\n            sources: context.sources,\n            signal: context.signal,\n          }),\n          onError: 'aborted',\n        },\n        after: {\n          responseTimeout: 'failed',\n        },\n        on: {\n          message: {\n            actions: assign({\n              response: ({event}) => event.data.data,\n              responseTo: ({event}) => event.data.responseTo,\n            }),\n            target: 'success',\n          },\n        },\n      },\n      failed: {\n        type: 'final',\n        entry: 'on fail',\n      },\n      success: {\n        type: 'final',\n        entry: 'on success',\n      },\n      aborted: {\n        type: 'final',\n        entry: 'on abort',\n      },\n    },\n    output: ({context, self}) => {\n      const output = {\n        requestId: self.id,\n        response: context.response,\n        responseTo: context.responseTo,\n      }\n      return output\n    },\n  })\n}\n\n// export const delayedRequestMachine = requestMachine.provide({\n//   delays: {\n//     initialTimeout: 500,\n//   },\n// })\n","import {v4 as uuid} from 'uuid'\nimport {\n  assertEvent,\n  assign,\n  createActor,\n  enqueueActions,\n  fromCallback,\n  raise,\n  setup,\n  stopChild,\n  type ActorRefFrom,\n  type EventObject,\n} from 'xstate'\nimport {createListenLogic, listenInputFromContext} from './common'\nimport {\n  DOMAIN,\n  HANDSHAKE_INTERVAL,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n} from './constants'\nimport {createRequestMachine, type RequestActorRef} from './request'\nimport type {\n  BufferAddedEmitEvent,\n  BufferFlushedEmitEvent,\n  Message,\n  MessageEmitEvent,\n  ProtocolMessage,\n  RequestData,\n  Status,\n  WithoutResponse,\n} from './types'\n\n/**\n * @public\n */\nexport type ConnectionActorLogic<S extends Message, R extends Message> = ReturnType<\n  typeof createConnectionMachine<S, R>\n>\n/**\n * @public\n */\nexport type ConnectionActor<S extends Message, R extends Message> = ActorRefFrom<\n  ReturnType<typeof createConnectionMachine<S, R>>\n>\n\n/**\n * @public\n */\nexport type Connection<S extends Message = Message, R extends Message = Message> = {\n  actor: ConnectionActor<S, R>\n  connect: () => void\n  disconnect: () => void\n  id: string\n  name: string\n  machine: ReturnType<typeof createConnectionMachine<S, R>>\n  on: <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => Promise<U['response']> | U['response'],\n  ) => () => void\n  onStatus: (handler: (status: Status) => void) => () => void\n  post: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params: (U['data'] extends undefined ? [T] : never) | [T, U['data']]\n  ) => void\n  setTarget: (target: MessageEventSource) => void\n  start: () => () => void\n  stop: () => void\n  target: MessageEventSource | undefined\n}\n\n/**\n * @public\n */\nexport interface ConnectionInput {\n  connectTo: string\n  domain?: string\n  heartbeat?: boolean\n  name: string\n  id?: string\n  target?: MessageEventSource\n  targetOrigin: string\n}\n\nconst sendBackAtInterval = fromCallback<\n  EventObject,\n  {event: EventObject; immediate?: boolean; interval: number}\n>(({sendBack, input}) => {\n  const send = () => {\n    sendBack(input.event)\n  }\n\n  if (input.immediate) {\n    send()\n  }\n\n  const interval = setInterval(send, input.interval)\n\n  return () => {\n    clearInterval(interval)\n  }\n})\n\n/**\n * @public\n */\nexport const createConnectionMachine = <\n  S extends Message, // Sends\n  R extends Message, // Receives\n  V extends WithoutResponse<S> = WithoutResponse<S>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  const connectionMachine = setup({\n    types: {} as {\n      children: {\n        'listen for handshake': 'listen'\n        'listen for messages': 'listen'\n        'send heartbeat': 'sendBackAtInterval'\n        'send syn': 'sendBackAtInterval'\n      }\n      context: {\n        buffer: Array<V>\n        channelId: string\n        connectTo: string\n        domain: string\n        heartbeat: boolean\n        id: string\n        name: string\n        requests: Array<RequestActorRef<S>>\n        target: MessageEventSource | undefined\n        targetOrigin: string\n      }\n      emitted:\n        | BufferAddedEmitEvent<V>\n        | BufferFlushedEmitEvent<V>\n        | MessageEmitEvent<R>\n        | (R extends R ? {type: R['type']; message: ProtocolMessage<R>} : never)\n      events:\n        | {type: 'connect'}\n        | {type: 'disconnect'}\n        | {type: 'message.received'; message: MessageEvent<ProtocolMessage<R>>}\n        | {type: 'post'; data: V}\n        | {type: 'response'; respondTo: string; data: Pick<S, 'response'>}\n        | {type: 'request.aborted'; requestId: string}\n        | {type: 'request.failed'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: S['response'] | null\n            responseTo: string | undefined\n          }\n        | {type: 'request'; data: RequestData<S> | RequestData<S>[]}\n        | {type: 'syn'}\n        | {type: 'target.set'; target: MessageEventSource}\n      input: ConnectionInput\n    },\n    actors: {\n      requestMachine: createRequestMachine<S>(),\n      listen: createListenLogic(),\n      sendBackAtInterval,\n    },\n    actions: {\n      'buffer message': enqueueActions(({enqueue}) => {\n        enqueue.assign({\n          buffer: ({event, context}) => {\n            assertEvent(event, 'post')\n            return [...context.buffer, event.data]\n          },\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'post')\n          return {\n            type: '_buffer.added',\n            message: event.data,\n          } satisfies BufferAddedEmitEvent<V>\n        })\n      }),\n      'create request': assign({\n        requests: ({context, event, self, spawn}) => {\n          assertEvent(event, 'request')\n          const arr = Array.isArray(event.data) ? event.data : [event.data]\n          const requests = arr.map((request) => {\n            const id = `req-${uuid()}`\n            return spawn('requestMachine', {\n              id,\n              input: {\n                channelId: context.channelId,\n                data: request.data,\n                domain: context.domain,\n                expectResponse: request.expectResponse,\n                from: context.name,\n                parentRef: self,\n                responseTo: request.responseTo,\n                sources: context.target!,\n                targetOrigin: context.targetOrigin,\n                to: context.connectTo,\n                type: request.type,\n              },\n            })\n          })\n          return [...context.requests, ...requests]\n        },\n      }),\n      'emit received message': enqueueActions(({enqueue}) => {\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          return {\n            type: '_message',\n            message: event.message.data,\n          } satisfies MessageEmitEvent<R>\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          const emit = {\n            type: event.message.data.type,\n            message: event.message.data,\n          }\n          return emit\n        })\n      }),\n      'flush buffer': enqueueActions(({enqueue}) => {\n        enqueue.raise(({context}) => ({\n          type: 'request',\n          data: context.buffer.map(({data, type}) => ({data, type})),\n        }))\n        enqueue.emit(({context}) => {\n          return {\n            type: '_buffer.flushed',\n            messages: context.buffer,\n          } satisfies BufferFlushedEmitEvent<V>\n        })\n        enqueue.assign({\n          buffer: [],\n        })\n      }),\n      'post': raise(({event}) => {\n        assertEvent(event, 'post')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data.data,\n            expectResponse: true,\n            type: event.data.type,\n          },\n        }\n      }),\n      'remove request': enqueueActions(({context, enqueue, event}) => {\n        assertEvent(event, ['request.success', 'request.failed', 'request.aborted'])\n        stopChild(event.requestId)\n        enqueue.assign({requests: context.requests.filter(({id}) => id !== event.requestId)})\n      }),\n      'respond': raise(({event}) => {\n        assertEvent(event, 'response')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data,\n            type: MSG_RESPONSE,\n            responseTo: event.respondTo,\n          },\n        }\n      }),\n      'send handshake ack': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_ACK},\n      }),\n      'send disconnect': raise(() => {\n        return {\n          type: 'request' as const,\n          data: {type: MSG_DISCONNECT},\n        }\n      }),\n      'send handshake syn': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_SYN},\n      }),\n      'set target': assign({\n        target: ({event}) => {\n          assertEvent(event, 'target.set')\n          return event.target\n        },\n      }),\n    },\n    guards: {\n      'has target': ({context}) => !!context.target,\n      'should send heartbeats': ({context}) => context.heartbeat,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QGMAWBDAdpsAbAxAC7oBOMhAdLGIQNoAMAuoqAA4D2sAloV+5ixAAPRAHZRAJgoAWABz0ArHICMy2QGZZCgJwAaEAE9EE+tIrb6ANgkLl46fTuj1AXxf60WHARJgAjgCucJSwAcjIcLAMzEggHNy8-IIiCKLS2hQS6qb2yurisrL6RgjK9LIyCuqq0g7WstZuHhjYePi+gcEUAGboXLiQ0YLxPHwCsSmiCgoykpayDtqS6trqxYjKEk0gnq24FFwQA-jI-DjIdEzDnKNJExuOZpZ12eq29OrSCuupypYUojUaTKCnm5Wk2123gORzA+HilxibBuiXGoBSGnUAIU4gU9FWamUtR+lmUM1EllBEkslMUEnpkJa0JaEFgGAA1lxMFB8LADJghrERqjkhtshk3mTtNo5OpqpYfqCKhTptoqpY1WUtu4dky8BQWWz0Jzue1-EFYIjrgkxqLSupqRRPpoPqJtLI0hIioZENJJE7NnJ8ZYHVk1YyvPrDRyuTyEYLkTa7uixVlMh81KGFhS1j6EPkZlpVjTphr8mkI3sDVhWTHTQBbSLoGAUXwRLgAN0GVyFKNt91KimUFEKXvKC2s9R+6X+jipnzJeSqEJ1UKjNaNJp5EC4sFOrQuCbifeTwg2cgoym0RPxDtqkj0eaB9Ao8zSolMEivZVcq71+33c5CEgeFOCtXskzRM8EDxKRpmkSw3QJbQsmpH5tHmV8JHSbJpDsakV2aSMALOMALhAjoLXAxNbiglI-SxWw1Vw0QNDw0Qfg9KQ7EJSxHHxApK2hQCyOAiAzVgDhMGoI9hX7FMEHSF8cWkelpHURCbBsb481xAEgT9BQJCmWQsiE-URPI8TG1gWBmzAVsyLATtuyRY9ILtWoKmlL82Kqd0tAVJ91LMHFZDKIkVlkNVZHMkiDzE-Adz3UjDx7GiRQHCKnheD53k+HSSkDDIwpBVTqQwuKKEssSDTAUhCAAI3qyg0DIrd8Fkk86MQUMnVM+RynoegTDJH48hGp0vR-FDRqqKqasgOqGua9AQjATAd1NSiul6fpXOtWi7Wy19cslD4vnG7IX3oVjVDUVYEJQqrksW8SdstLqPKy0wKgG1RhtMWogqKhoMjkWp6XxUyFBe3c3tAz70vco6fq+V8PTkGUFzdQqNnELEM2yClrwwzQ4ZShKQJqr7UYU98AS0W9pT4z5pHG0yXwMkNNTyGk3B1TB2AgOBBDXXBDsyhSFG9EovQqN5i1JeRcKqw4Bkl+ToMx8x0j+EaqQ9XMSkBURMgMkEwQWKro2NWNNdPFJAzN0lJGM4slDxhBEJfXyplBd03wW1KxIdnrBxBh4JAyW75C8rJpmDqmIGWkgmpasPjqUcaHooMLHA0uU1UkJOgKW1B6rT1bWor5At0zgcTAkK7hrz1irB0D8cW0UvRPLyv07WqgNq2qAG+l9SnXUz0UOXD5xuMs3Y4+DVJBX7UiKrV6Q8gcfoJO54rFefLLqfJYX1WKYNLxL4NO1NwgA */\n    id: 'connection',\n    context: ({input}) => ({\n      id: input.id || `${input.name}-${uuid()}`,\n      buffer: [],\n      channelId: `chn-${uuid()}`,\n      connectTo: input.connectTo,\n      domain: input.domain ?? DOMAIN,\n      heartbeat: input.heartbeat ?? false,\n      name: input.name,\n      requests: [],\n      target: input.target,\n      targetOrigin: input.targetOrigin,\n    }),\n    on: {\n      'target.set': {\n        actions: 'set target',\n      },\n      'request.success': {\n        actions: 'remove request',\n      },\n      'request.failed': {\n        actions: 'remove request',\n      },\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        on: {\n          connect: {\n            target: 'handshaking',\n            guard: 'has target',\n          },\n          post: {\n            actions: 'buffer message',\n          },\n        },\n      },\n      handshaking: {\n        id: 'handshaking',\n        invoke: [\n          {\n            id: 'send syn',\n            src: 'sendBackAtInterval',\n            input: () => ({\n              event: {type: 'syn'},\n              interval: HANDSHAKE_INTERVAL,\n              immediate: true,\n            }),\n          },\n          {\n            id: 'listen for handshake',\n            src: 'listen',\n            input: (input) =>\n              listenInputFromContext({\n                include: MSG_HANDSHAKE_SYN_ACK,\n                count: 1,\n              })(input),\n            /* Below would maybe be more readable than transitioning to\n          'connected' on 'message', and 'ack' on exit but having onDone when\n          using passing invocations currently breaks XState Editor */\n            // onDone: {\n            //   target: 'connected',\n            //   actions: 'ack',\n            // },\n          },\n        ],\n        on: {\n          'syn': {\n            actions: 'send handshake syn',\n          },\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'buffer message',\n          },\n          'message.received': {\n            target: 'connected',\n          },\n          'disconnect': {\n            target: 'disconnected',\n          },\n        },\n        exit: 'send handshake ack',\n      },\n      connected: {\n        entry: 'flush buffer',\n        invoke: {\n          id: 'listen for messages',\n          src: 'listen',\n          input: listenInputFromContext({\n            exclude: [MSG_RESPONSE, MSG_HEARTBEAT],\n          }),\n        },\n        on: {\n          'post': {\n            actions: 'post',\n          },\n          'request': {\n            actions: 'create request',\n          },\n          'response': {\n            actions: 'respond',\n          },\n          'message.received': {\n            actions: 'emit received message',\n          },\n          'disconnect': {\n            target: 'disconnected',\n          },\n        },\n        initial: 'heartbeat',\n        states: {\n          heartbeat: {\n            initial: 'checking',\n            states: {\n              checking: {\n                always: {\n                  guard: 'should send heartbeats',\n                  target: 'sending',\n                },\n              },\n              sending: {\n                on: {\n                  'request.failed': {\n                    target: '#handshaking',\n                  },\n                },\n                invoke: {\n                  id: 'send heartbeat',\n                  src: 'sendBackAtInterval',\n                  input: () => ({\n                    event: {type: 'post', data: {type: MSG_HEARTBEAT, data: undefined}},\n                    interval: 2000,\n                    immediate: false,\n                  }),\n                },\n              },\n            },\n          },\n        },\n      },\n      disconnected: {\n        id: 'disconnected',\n        entry: 'send disconnect',\n        on: {\n          request: {\n            actions: 'create request',\n          },\n          post: {\n            actions: 'buffer message',\n          },\n          connect: {\n            target: 'handshaking',\n            guard: 'has target',\n          },\n        },\n      },\n    },\n  })\n\n  return connectionMachine\n}\n\n/**\n * @public\n */\nexport const createConnection = <S extends Message, R extends Message>(\n  input: ConnectionInput,\n  machine: ConnectionActorLogic<S, R> = createConnectionMachine<S, R>(),\n): Connection<S, R> => {\n  const id = input.id || `${input.name}-${uuid()}`\n  const actor = createActor(machine, {\n    input: {...input, id},\n  })\n\n  const on = <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => Promise<U['response']> | U['response'],\n  ) => {\n    const {unsubscribe} = actor.on(\n      // @ts-expect-error @todo `type` typing\n      type,\n      async (event: {type: T; message: ProtocolMessage<U>}) => {\n        const response = await handler(event.message.data)\n        if (response) {\n          actor.send({type: 'response', respondTo: event.message.id, data: response})\n        }\n      },\n    )\n    return unsubscribe\n  }\n\n  const connect = () => {\n    actor.send({type: 'connect'})\n  }\n\n  const disconnect = () => {\n    actor.send({type: 'disconnect'})\n  }\n\n  const onStatus = (handler: (status: Status) => void) => {\n    const currentSnapshot = actor.getSnapshot()\n    let currentStatus: Status =\n      typeof currentSnapshot.value === 'string'\n        ? currentSnapshot.value\n        : Object.keys(currentSnapshot.value)[0]\n\n    const {unsubscribe} = actor.subscribe((state) => {\n      const status: Status =\n        typeof state.value === 'string' ? state.value : Object.keys(state.value)[0]\n      if (currentStatus !== status) {\n        currentStatus = status\n        handler(status)\n      }\n    })\n    return unsubscribe\n  }\n\n  const setTarget = (target: MessageEventSource) => {\n    actor.send({type: 'target.set', target})\n  }\n\n  const post = <T extends S['type'], U extends Extract<S, {type: T}>>(\n    type: T,\n    data?: U['data'],\n  ) => {\n    const _data = {type, data} as WithoutResponse<U>\n    actor.send({type: 'post', data: _data})\n  }\n\n  const stop = () => {\n    actor.stop()\n  }\n\n  const start = () => {\n    actor.start()\n    return stop\n  }\n\n  return {\n    actor,\n    connect,\n    disconnect,\n    id,\n    name: input.name,\n    machine,\n    on,\n    onStatus,\n    post,\n    setTarget,\n    start,\n    stop,\n    get target() {\n      return actor.getSnapshot().context.target\n    },\n  }\n}\n\n// Helper function to cleanup a connection\nexport const cleanupConnection: (connection: Connection<Message, Message>) => void = (\n  connection,\n) => {\n  connection.disconnect()\n  // Necessary to allow disconnect messages to be sent before the connection\n  // actor is stopped\n  setTimeout(() => {\n    connection.stop()\n  }, 0)\n}\n","import {\n  cleanupConnection,\n  createConnection,\n  createConnectionMachine,\n  type Connection,\n  type ConnectionActorLogic,\n  type ConnectionInput,\n} from './connection'\nimport {type InternalEmitEvent, type Message, type StatusEvent} from './types'\n\n/**\n * @public\n */\nexport type ChannelInput = Omit<ConnectionInput, 'target' | 'targetOrigin'>\n\n/**\n * @public\n */\nexport interface ChannelInstance<S extends Message, R extends Message> {\n  on: <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => Promise<U['response']> | U['response'],\n  ) => () => void\n  onInternalEvent: <\n    T extends InternalEmitEvent<S, R>['type'],\n    U extends Extract<InternalEmitEvent<S, R>, {type: T}>,\n  >(\n    type: T,\n    handler: (event: U) => void,\n  ) => () => void\n  onStatus: (handler: (event: StatusEvent) => void) => void\n  post: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params: (U['data'] extends undefined ? [T] : never) | [T, U['data']]\n  ) => void\n  start: () => () => void\n  stop: () => void\n}\n\n/**\n * @public\n */\nexport interface Controller {\n  addTarget: (target: MessageEventSource) => () => void\n  createChannel: <S extends Message, R extends Message>(\n    input: ChannelInput,\n    machine?: ConnectionActorLogic<S, R>,\n  ) => ChannelInstance<S, R>\n  destroy: () => void\n}\n\ninterface Channel<\n  S extends Message = Message,\n  R extends Message = Message,\n  T extends InternalEmitEvent<S, R>['type'] = InternalEmitEvent<S, R>['type'],\n> {\n  input: ChannelInput\n  connections: Set<Connection<S, R>>\n  internalEventSubscribers: Set<{\n    type: T\n    handler: (event: Extract<InternalEmitEvent<S, R>, {type: T}>) => void\n    unsubscribers: Array<() => void>\n  }>\n  machine: ConnectionActorLogic<S, R>\n  statusSubscribers: Set<{\n    handler: (event: StatusEvent) => void\n    unsubscribers: Array<() => void>\n  }>\n  subscribers: Set<{\n    type: R['type']\n    handler: (event: R['data']) => Promise<R['response']> | R['response']\n    unsubscribers: Array<() => void>\n  }>\n}\n\nconst noop = () => {}\n\n/**\n * @public\n */\nexport const createController = (input: {targetOrigin: string}): Controller => {\n  const {targetOrigin} = input\n  const targets = new Set<MessageEventSource>()\n  const channels = new Set<Channel>()\n\n  const addTarget = (target: MessageEventSource) => {\n    // If the target has already been added, return just a noop cleanup\n    if (targets.has(target)) {\n      return noop\n    }\n\n    if (!targets.size || !channels.size) {\n      targets.add(target)\n\n      // If there are existing channels, set the target on all existing\n      // connections, and trigger a connection event\n      channels.forEach((channel) => {\n        channel.connections.forEach((connection) => {\n          connection.setTarget(target)\n          connection.connect()\n        })\n      })\n      // We perform a 'soft' cleanup here: disconnect only as we want to\n      // maintain at least one live connection per channel\n      return () => {\n        targets.delete(target)\n        channels.forEach((channel) => {\n          channel.connections.forEach((connection) => {\n            if (connection.target === target) {\n              connection.disconnect()\n            }\n          })\n        })\n      }\n    }\n\n    targets.add(target)\n\n    // Maintain a list of connections to cleanup\n    const targetConnections = new Set<Connection<Message, Message>>()\n\n    // If we already have targets and channels, we need to create new\n    // connections for each source with all the associated subscribers.\n    channels.forEach((channel) => {\n      const connection = createConnection(\n        {\n          ...channel.input,\n          target,\n          targetOrigin,\n        },\n        channel.machine,\n      )\n\n      targetConnections.add(connection)\n      channel.connections.add(connection)\n\n      channel.subscribers.forEach(({type, handler, unsubscribers}) => {\n        unsubscribers.push(connection.on(type, handler))\n      })\n      channel.internalEventSubscribers.forEach(({type, handler, unsubscribers}) => {\n        // @ts-expect-error @todo\n        unsubscribers.push(connection.actor.on(type, handler).unsubscribe)\n      })\n      channel.statusSubscribers.forEach(({handler, unsubscribers}) => {\n        unsubscribers.push(\n          connection.onStatus((status) => handler({connection: connection.id, status})),\n        )\n      })\n\n      connection.start()\n      connection.connect()\n    })\n\n    // We perform a more 'aggressive' cleanup here as we do not need to maintain\n    // these 'duplicate' connections: disconnect, stop, and remove the connections from\n    // all channels\n    return () => {\n      targets.delete(target)\n      targetConnections.forEach((connection) => {\n        cleanupConnection(connection)\n        channels.forEach((channel) => {\n          channel.connections.delete(connection)\n        })\n      })\n    }\n  }\n\n  const createChannel = <S extends Message, R extends Message>(\n    input: ChannelInput,\n    machine: ConnectionActorLogic<S, R> = createConnectionMachine<S, R>(),\n  ): ChannelInstance<S, R> => {\n    const channel: Channel<S, R> = {\n      connections: new Set(),\n      input,\n      internalEventSubscribers: new Set(),\n      machine,\n      statusSubscribers: new Set(),\n      subscribers: new Set(),\n    }\n\n    channels.add(channel as unknown as Channel)\n\n    const {connections, internalEventSubscribers, statusSubscribers, subscribers} = channel\n\n    if (targets.size) {\n      // If targets have already been added, create a connection for each target\n      targets.forEach((target) => {\n        const connection = createConnection<S, R>(\n          {\n            ...input,\n            target,\n            targetOrigin,\n          },\n          machine,\n        )\n        connections.add(connection)\n      })\n    } else {\n      // If targets have not been added yet, create a connection without a target\n      const connection = createConnection<S, R>({...input, targetOrigin}, machine)\n      connections.add(connection)\n    }\n\n    const post: ChannelInstance<S, R>['post'] = (...params) => {\n      const [type, data] = params\n      connections.forEach((connection) => {\n        connection.post(type, data)\n      })\n    }\n\n    const on: ChannelInstance<S, R>['on'] = (type, handler) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        unsubscribers.push(connection.on(type, handler))\n      })\n      const subscriber = {type, handler, unsubscribers}\n      subscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        subscribers.delete(subscriber)\n      }\n    }\n\n    const onInternalEvent = <\n      T extends InternalEmitEvent<S, R>['type'],\n      U extends Extract<InternalEmitEvent<S, R>, {type: T}>,\n    >(\n      type: T,\n      handler: (event: U) => void,\n    ) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        // @ts-expect-error @todo @help\n        unsubscribers.push(connection.actor.on(type, handler).unsubscribe)\n      })\n      const subscriber = {type, handler, unsubscribers}\n      // @ts-expect-error @todo @help\n      internalEventSubscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        // @ts-expect-error @todo @help\n        internalEventSubscribers.delete(subscriber)\n      }\n    }\n\n    const onStatus = (handler: (event: StatusEvent) => void) => {\n      const unsubscribers: Array<() => void> = []\n      connections.forEach((connection) => {\n        unsubscribers.push(\n          connection.onStatus((status) => handler({connection: connection.id, status})),\n        )\n      })\n      const subscriber = {handler, unsubscribers}\n      statusSubscribers.add(subscriber)\n      return () => {\n        unsubscribers.forEach((unsub) => unsub())\n        statusSubscribers.delete(subscriber)\n      }\n    }\n\n    // Stop a connection, cleanup all connections and remove the connection itself\n    // from the controller\n    // @todo Remove casting\n    const stop = () => {\n      const connections = channel.connections as unknown as Set<Connection>\n      connections.forEach(cleanupConnection)\n      connections.clear()\n      channels.delete(channel as unknown as Channel)\n    }\n\n    const start = () => {\n      connections.forEach((connection) => {\n        connection.start()\n        connection.connect()\n      })\n\n      return stop\n    }\n\n    return {\n      on,\n      onInternalEvent,\n      onStatus,\n      post,\n      start,\n      stop,\n    }\n  }\n\n  // Destroy the controller, cleanup all connections in all channels\n  const destroy = () => {\n    channels.forEach(({connections}) => {\n      connections.forEach(cleanupConnection)\n      connections.clear()\n    })\n    channels.clear()\n    targets.clear()\n  }\n\n  return {\n    addTarget,\n    createChannel,\n    destroy,\n  }\n}\n","import {v4 as uuid} from 'uuid'\nimport {\n  assertEvent,\n  assign,\n  createActor,\n  emit,\n  enqueueActions,\n  raise,\n  setup,\n  stopChild,\n  type ActorRefFrom,\n} from 'xstate'\nimport {createListenLogic, listenInputFromContext} from './common'\nimport {\n  DOMAIN,\n  FETCH_TIMEOUT_DEFAULT,\n  MSG_DISCONNECT,\n  MSG_HANDSHAKE_ACK,\n  MSG_HANDSHAKE_SYN,\n  MSG_HANDSHAKE_SYN_ACK,\n  MSG_HEARTBEAT,\n  MSG_RESPONSE,\n} from './constants'\nimport {createRequestMachine, type RequestActorRef} from './request'\nimport type {\n  BufferAddedEmitEvent,\n  BufferFlushedEmitEvent,\n  HeartbeatEmitEvent,\n  HeartbeatMessage,\n  Message,\n  MessageEmitEvent,\n  ProtocolMessage,\n  RequestData,\n  Status,\n  WithoutResponse,\n} from './types'\n\n/**\n * @public\n */\nexport interface NodeInput {\n  name: string\n  connectTo: string\n  domain?: string\n}\n\n/**\n * @public\n */\nexport type NodeActorLogic<S extends Message, R extends Message> = ReturnType<\n  typeof createNodeMachine<S, R>\n>\n\n/**\n * @public\n */\nexport type NodeActor<S extends Message, R extends Message> = ActorRefFrom<NodeActorLogic<S, R>>\n\n/**\n * @public\n */\nexport type Node<S extends Message, R extends Message> = {\n  actor: NodeActor<S, R>\n  fetch: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params:\n      | (U['data'] extends undefined ? [T] : never)\n      | [T, U['data']]\n      | [T, U['data'], {signal?: AbortSignal; suppressWarnings?: boolean}]\n  ) => S extends U ? (S['type'] extends T ? Promise<S['response']> : never) : never\n  machine: NodeActorLogic<S, R>\n  on: <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => U['response'],\n  ) => () => void\n  onStatus: (handler: (status: Status) => void) => () => void\n  post: <T extends S['type'], U extends Extract<S, {type: T}>>(\n    ...params: (U['data'] extends undefined ? [T] : never) | [T, U['data']]\n  ) => void\n  start: () => () => void\n  stop: () => void\n}\n\n/**\n * @public\n */\nexport const createNodeMachine = <\n  S extends Message, // Sends\n  R extends Message, // Receives\n  V extends WithoutResponse<S> = WithoutResponse<S>,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n>() => {\n  const nodeMachine = setup({\n    types: {} as {\n      children: {\n        'listen for disconnect': 'listen'\n        'listen for handshake ack': 'listen'\n        'listen for handshake syn': 'listen'\n        'listen for heartbeat': 'listen'\n        'listen for messages': 'listen'\n      }\n      context: {\n        buffer: Array<{\n          data: V\n          resolvable?: PromiseWithResolvers<S['response']>\n          options?: {\n            signal?: AbortSignal\n            suppressWarnings?: boolean\n          }\n        }>\n        channelId: string | null\n        connectTo: string\n        domain: string\n        // The handshake buffer is a workaround to maintain backwards\n        // compatibility with the Sanity channels package, which may incorrectly\n        // send buffered messages _before_ it completes the handshake (i.e.\n        // sends an ack message). It should be removed in the next major.\n        handshakeBuffer: Array<{\n          type: 'message.received'\n          message: MessageEvent<ProtocolMessage<R>>\n        }>\n        name: string\n        requests: Array<RequestActorRef<S>>\n        target: MessageEventSource | undefined\n        targetOrigin: string | null\n      }\n      emitted:\n        | BufferAddedEmitEvent<V>\n        | BufferFlushedEmitEvent<V>\n        | HeartbeatEmitEvent\n        | MessageEmitEvent<R>\n        | (R extends R ? {type: R['type']; message: ProtocolMessage<R>} : never)\n      events:\n        | {type: 'heartbeat.received'; message: MessageEvent<ProtocolMessage<HeartbeatMessage>>}\n        | {type: 'message.received'; message: MessageEvent<ProtocolMessage<R>>}\n        | {type: 'handshake.syn'; message: MessageEvent<ProtocolMessage<R>>}\n        | {\n            type: 'post'\n            data: V\n            resolvable?: PromiseWithResolvers<S['response']>\n            options?: {\n              responseTimeout?: number\n              signal?: AbortSignal\n              suppressWarnings?: boolean\n            }\n          }\n        | {type: 'request.aborted'; requestId: string}\n        | {type: 'request.failed'; requestId: string}\n        | {\n            type: 'request.success'\n            requestId: string\n            response: S['response'] | null\n            responseTo: string | undefined\n          }\n        | {type: 'request'; data: RequestData<S> | RequestData<S>[]} // @todo align with 'post' type\n      input: NodeInput\n    },\n    actors: {\n      requestMachine: createRequestMachine<S>(),\n      listen: createListenLogic(),\n    },\n    actions: {\n      'buffer incoming message': assign({\n        handshakeBuffer: ({event, context}) => {\n          assertEvent(event, 'message.received')\n          return [...context.handshakeBuffer, event]\n        },\n      }),\n      'buffer message': enqueueActions(({enqueue}) => {\n        enqueue.assign({\n          buffer: ({event, context}) => {\n            assertEvent(event, 'post')\n            return [\n              ...context.buffer,\n              {\n                data: event.data,\n                resolvable: event.resolvable,\n                options: event.options,\n              },\n            ]\n          },\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'post')\n          return {\n            type: '_buffer.added',\n            message: event.data,\n          } satisfies BufferAddedEmitEvent<V>\n        })\n      }),\n      'create request': assign({\n        requests: ({context, event, self, spawn}) => {\n          assertEvent(event, 'request')\n          const arr = Array.isArray(event.data) ? event.data : [event.data]\n          const requests = arr.map((request) => {\n            const id = `req-${uuid()}`\n            return spawn('requestMachine', {\n              id,\n              input: {\n                channelId: context.channelId!,\n                data: request.data,\n                domain: context.domain!,\n                expectResponse: request.expectResponse,\n                from: context.name,\n                parentRef: self,\n                resolvable: request.resolvable,\n                responseTimeout: request.options?.responseTimeout,\n                responseTo: request.responseTo,\n                signal: request.options?.signal,\n                sources: context.target!,\n                suppressWarnings: request.options?.suppressWarnings,\n                targetOrigin: context.targetOrigin!,\n                to: context.connectTo,\n                type: request.type,\n              },\n            })\n          })\n          return [...context.requests, ...requests]\n        },\n      }),\n      'emit heartbeat': emit(() => {\n        return {\n          type: '_heartbeat',\n        } satisfies HeartbeatEmitEvent\n      }),\n      'emit received message': enqueueActions(({enqueue}) => {\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          return {\n            type: '_message',\n            message: event.message.data,\n          } satisfies MessageEmitEvent<R>\n        })\n        enqueue.emit(({event}) => {\n          assertEvent(event, 'message.received')\n          const emit = {\n            type: event.message.data.type,\n            message: event.message.data,\n          }\n          return emit\n        })\n      }),\n      'flush buffer': enqueueActions(({enqueue}) => {\n        enqueue.raise(({context}) => ({\n          type: 'request',\n          data: context.buffer.map(({data, resolvable, options}) => ({\n            data: data.data,\n            type: data.type,\n            expectResponse: resolvable ? true : false,\n            resolvable,\n            options,\n          })),\n        }))\n        enqueue.emit(({context}) => {\n          return {\n            type: '_buffer.flushed',\n            messages: context.buffer.map(({data}) => data),\n          } satisfies BufferFlushedEmitEvent<V>\n        })\n        enqueue.assign({\n          buffer: [],\n        })\n      }),\n      'flush handshake buffer': enqueueActions(({context, enqueue}) => {\n        context.handshakeBuffer.forEach((event) => enqueue.raise(event))\n        enqueue.assign({\n          handshakeBuffer: [],\n        })\n      }),\n      'post': raise(({event}) => {\n        assertEvent(event, 'post')\n        return {\n          type: 'request' as const,\n          data: {\n            data: event.data.data,\n            expectResponse: event.resolvable ? true : false,\n            type: event.data.type,\n            resolvable: event.resolvable,\n            options: event.options,\n          },\n        }\n      }),\n      'remove request': enqueueActions(({context, enqueue, event}) => {\n        assertEvent(event, ['request.success', 'request.failed', 'request.aborted'])\n        stopChild(event.requestId)\n        enqueue.assign({requests: context.requests.filter(({id}) => id !== event.requestId)})\n      }),\n      'send response': raise(({event}) => {\n        assertEvent(event, ['message.received', 'heartbeat.received'])\n        return {\n          type: 'request' as const,\n          data: {\n            type: MSG_RESPONSE,\n            responseTo: event.message.data.id,\n            data: undefined,\n          },\n        }\n      }),\n      'send handshake syn ack': raise({\n        type: 'request',\n        data: {type: MSG_HANDSHAKE_SYN_ACK},\n      }),\n      'set connection config': assign({\n        channelId: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.data.channelId\n        },\n        target: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.source || undefined\n        },\n        targetOrigin: ({event}) => {\n          assertEvent(event, 'handshake.syn')\n          return event.message.origin\n        },\n      }),\n    },\n    guards: {\n      hasSource: ({context}) => context.target !== null,\n    },\n  }).createMachine({\n    /** @xstate-layout N4IgpgJg5mDOIC5QDsD2EwGIBOYCOArnAC4B0sBAxpXLANoAMAuoqAA6qwCWxXqyrEAA9EAVgYAWUgEYJDUQA4JAZmUSJC0coDsAGhABPRNIYLSErdOkBOAGzbx227YUBfV-rQYc+IrDIAZgCGXAA2kIwsSCAc3Lz8giIIoiakqgBMDKbp2tYS0srp+kYI0ununuhgpFwQ4ZgQ-NVcyABuqADW1V7NdWAILe2UQfHIkZGCsTx8AtFJ6aKipAzWOtrpC7Z5BUWGiNoK6aS26RLW2tLaqkqqFSA9NX2YALa0QTCkuDRcrRHMk5xpgk5ogJLZSNZIVDoVCFLZiohbIVSLkXLZRHZDgxbHcHrV6rFiBNolNRolEVJbCsdGUzsoyhiEcllOC1DowelVmVrOUPPcqqQABZBZAQWDCjotKANJo1NqdboC4Wi8VBSXIKADeXDUbjf4kwFkkEILbg8RZMHKOzWKzKJkHJa086Xa4qZS4pUisUSqU+QgkYnsQ0zcnJaRLDbpZwKNQSBYspm2MEyC5KTnaDSSd18h7K71q32EwMxYPA0BJFLKY5yZxIrKSURM0RnFHSBTrQqQ9babQejBCr2q9XSiBcWCUfjIMCUIn6oNxEPGtTWFFR0RUy7iGzt+3Ip0XURXVZKPvVCfIKczyB+vyzqLzoGzcuIG0MGTyCztjRtjaJjbHVMNAUTdu1PUhz0vYhryLOcSwXMthBfK0ZGsLQGBZekCi0Jso1IdI23WG04zOE4wIg6coIgBox3Imdi1JRdnxNOxSHNSQkWtW0mTjMxMQ7fDzgcbNKn7WjKJeN4Pi+MAfj+e84MfUMFHbZZwxOHZNDyO09gQOQjmAhZJCM9IMjIycKOvQUwCCbBiAAI2sshpNkiB6NLJ9EIQBQbWOdJlMhYCUjbJkchXGsFmsJQMVsWl3BzKp4GiHoAXgjykgAWmkZZ6xy3LZF2EobCy6xsQWJQ42kE4FjA-EwBSxTjSRUhDgqkzgO2BxdykU4AvXFQ-KjMC8yHKV6qNJi6WOdcypcZsXGxe0JG0XySKjM5lKsMyLwsiAxsYzylDfONznUEqrmi+1ThkHqXDONbULi1wgA */\n    id: 'node',\n    context: ({input}) => ({\n      buffer: [],\n      channelId: null,\n      connectTo: input.connectTo,\n      domain: input.domain ?? DOMAIN,\n      handshakeBuffer: [],\n      name: input.name,\n      requests: [],\n      target: undefined,\n      targetOrigin: null,\n    }),\n    // Always listen for handshake syn messages. The channel could have\n    // disconnected without being able to notify the node, and so need to\n    // re-establish the connection.\n    invoke: {\n      id: 'listen for handshake syn',\n      src: 'listen',\n      input: listenInputFromContext({\n        include: MSG_HANDSHAKE_SYN,\n        responseType: 'handshake.syn',\n      }),\n    },\n    on: {\n      'request.success': {\n        actions: 'remove request',\n      },\n      'request.failed': {\n        actions: 'remove request',\n      },\n      'request.aborted': {\n        actions: 'remove request',\n      },\n      'handshake.syn': {\n        actions: 'set connection config',\n        target: '.handshaking',\n      },\n    },\n    initial: 'idle',\n    states: {\n      idle: {\n        on: {\n          post: {\n            actions: 'buffer message',\n          },\n        },\n      },\n      handshaking: {\n        guard: 'hasSource',\n        entry: 'send handshake syn ack',\n        invoke: [\n          {\n            id: 'listen for handshake ack',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_HANDSHAKE_ACK,\n              count: 1,\n              // Override the default `message.received` responseType to prevent\n              // buffering the ack message. We transition to the connected state\n              // using onDone instead of listening to this event using `on`\n              responseType: 'handshake.complete',\n            }),\n            onDone: 'connected',\n          },\n          {\n            id: 'listen for disconnect',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_DISCONNECT,\n              count: 1,\n              responseType: 'disconnect',\n            }),\n          },\n          {\n            id: 'listen for messages',\n            src: 'listen',\n            input: listenInputFromContext({\n              exclude: [\n                MSG_DISCONNECT,\n                MSG_HANDSHAKE_SYN,\n                MSG_HANDSHAKE_ACK,\n                MSG_HEARTBEAT,\n                MSG_RESPONSE,\n              ],\n            }),\n          },\n        ],\n        on: {\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'buffer message',\n          },\n          'message.received': {\n            actions: 'buffer incoming message',\n          },\n          'disconnect': {\n            target: 'idle',\n          },\n        },\n      },\n      connected: {\n        entry: ['flush handshake buffer', 'flush buffer'],\n        invoke: [\n          {\n            id: 'listen for messages',\n            src: 'listen',\n            input: listenInputFromContext({\n              exclude: [\n                MSG_DISCONNECT,\n                MSG_HANDSHAKE_SYN,\n                MSG_HANDSHAKE_ACK,\n                MSG_HEARTBEAT,\n                MSG_RESPONSE,\n              ],\n            }),\n          },\n          {\n            id: 'listen for heartbeat',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_HEARTBEAT,\n              responseType: 'heartbeat.received',\n            }),\n          },\n          {\n            id: 'listen for disconnect',\n            src: 'listen',\n            input: listenInputFromContext({\n              include: MSG_DISCONNECT,\n              count: 1,\n              responseType: 'disconnect',\n            }),\n          },\n        ],\n        on: {\n          'request': {\n            actions: 'create request',\n          },\n          'post': {\n            actions: 'post',\n          },\n          'disconnect': {\n            target: 'idle',\n          },\n          'message.received': {\n            actions: ['send response', 'emit received message'],\n          },\n          'heartbeat.received': {\n            actions: ['send response', 'emit heartbeat'],\n          },\n        },\n      },\n    },\n  })\n  return nodeMachine\n}\n\n/**\n * @public\n */\nexport const createNode = <S extends Message, R extends Message>(\n  input: NodeInput,\n  machine: NodeActorLogic<S, R> = createNodeMachine<S, R>(),\n): Node<S, R> => {\n  const actor = createActor(machine, {\n    input,\n  })\n\n  const on = <T extends R['type'], U extends Extract<R, {type: T}>>(\n    type: T,\n    handler: (event: U['data']) => U['response'],\n  ) => {\n    const {unsubscribe} = actor.on(\n      // @ts-expect-error @todo `type` typing\n      type,\n      (event: {type: T; message: ProtocolMessage<U>}) => {\n        handler(event.message.data)\n      },\n    )\n    return unsubscribe\n  }\n\n  const onStatus = (handler: (status: Status) => void) => {\n    const snapshot = actor.getSnapshot()\n    let currentStatus: Status =\n      typeof snapshot.value === 'string' ? snapshot.value : Object.keys(snapshot.value)[0]\n\n    const {unsubscribe} = actor.subscribe((state) => {\n      const status: Status =\n        typeof state.value === 'string' ? state.value : Object.keys(state.value)[0]\n      if (currentStatus !== status) {\n        currentStatus = status\n        handler(status)\n      }\n    })\n    return unsubscribe\n  }\n\n  const post = <T extends S['type'], U extends Extract<S, {type: T}>>(\n    type: T,\n    data?: U['data'],\n  ) => {\n    const _data = {type, data} as WithoutResponse<U>\n    actor.send({type: 'post', data: _data})\n  }\n\n  const fetch = <T extends S['type'], U extends Extract<S, {type: T}>>(\n    type: T,\n    data?: U['data'],\n    options?: {\n      responseTimeout?: number\n      signal?: AbortSignal\n      suppressWarnings?: boolean\n    },\n  ) => {\n    const {responseTimeout = FETCH_TIMEOUT_DEFAULT, signal, suppressWarnings} = options || {}\n\n    const resolvable = Promise.withResolvers<S['response']>()\n    const _data = {type, data} as WithoutResponse<U>\n\n    actor.send({\n      type: 'post',\n      data: _data,\n      resolvable,\n      options: {responseTimeout, signal, suppressWarnings},\n    })\n    return resolvable.promise as never\n  }\n\n  const stop = () => {\n    actor.stop()\n  }\n\n  const start = () => {\n    actor.start()\n    return stop\n  }\n\n  return {\n    actor,\n    fetch,\n    machine,\n    on,\n    onStatus,\n    post,\n    start,\n    stop,\n  }\n}\n"],"names":["uuid","input","connections"],"mappings":"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","ignoreList":[0,1,2,3,4,5]}},
    {"offset": {"line": 1399, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1415, "column": 0}, "map": {"version":3,"file":"DisplayedDocumentBroadcaster.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/loader/DisplayedDocumentBroadcaster.tsx"],"sourcesContent":["/**\n * Report back up the document state being displayed in the document pane,\n * allowing Presentation Tool to patch the live queries with the same state.\n * This makes the Perspective switcher less confusing, as it applies to everything else on the page.\n * It's also why it's possible to select an older revision and see it in the preview,\n * effectively letting you preview a revert action you might be considering to perform.\n */\n\nimport isEqual from 'fast-deep-equal'\nimport {createContext, useCallback, useContext, useEffect, type PropsWithChildren} from 'react'\nimport {type SanityDocument} from 'sanity'\n\n/** @internal */\nexport type SetDisplayedDocument = (displayed: Partial<SanityDocument> | null | undefined) => void\n\nconst Context = createContext<SetDisplayedDocument | null>(null)\n\nexport interface DisplayedDocumentBroadcasterProps extends PropsWithChildren {\n  setDisplayedDocument: React.Dispatch<\n    React.SetStateAction<Partial<SanityDocument> | null | undefined>\n  >\n  documentId: string | null | undefined\n}\n\nexport function DisplayedDocumentBroadcasterProvider(\n  props: DisplayedDocumentBroadcasterProps,\n): JSX.Element {\n  const {children, setDisplayedDocument, documentId} = props\n\n  const context = useCallback<SetDisplayedDocument>(\n    (next) => setDisplayedDocument((prev) => (isEqual(prev, next) ? prev : next)),\n    [setDisplayedDocument],\n  )\n\n  useEffect(() => {\n    // If no document is currently being displayed then reset the state\n    if (documentId) {\n      return\n    }\n    const timeout = setTimeout(() => setDisplayedDocument(null))\n    return () => clearTimeout(timeout)\n  }, [documentId, setDisplayedDocument])\n\n  return <Context.Provider value={context}>{children}</Context.Provider>\n}\n\nexport function useDisplayedDocumentBroadcaster(): SetDisplayedDocument | null {\n  return useContext(Context)\n}\n"],"names":["Context","createContext","DisplayedDocumentBroadcasterProvider","props","$","_c","children","setDisplayedDocument","documentId","t0","next","prev","isEqual","context","t1","t2","timeout","setTimeout","clearTimeout","useEffect","t3","useDisplayedDocumentBroadcaster","useContext"],"mappings":";;;;;;;;;;;;AAeA,MAAMA,6UAAUC,gBAAAA,EAA2C,IAAI;AASxD,SAAAC,qCAAAC,KAAAA,EAAA;IAAAC,MAAAA,QAAAC,oSAAAA,EAAA,CAAA,GAGL,EAAAC,QAAAA,EAAAC,oBAAAA,EAAAC,UAAAA,EAAAA,GAAqDL;IAAKM,IAAAA;IAAAL,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAGxDE,KAAAC,CAAAA,OAAUH,qBAAoBI,CAAAA,+NAAYC,UAAAA,EAAQD,MAAMD,IAAI,IAAIC,OAAOD,IAAK,GAACN,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAK,EAAAA,IAAAA,KAAAL,CAAAA,CAAA,CAAA,CAAA;IAD/E,MAAAS,UAAgBJ;IAGf,IAAAK,IAAAC;IAAAX,CAAAA,CAAAI,CAAAA,CAAAA,KAAAA,cAAAJ,CAAAA,CAAAA,EAAAA,KAAAG,uBAAAA,CAESO,KAAAA,MAAA;QAEJN,IAAAA,YAAU;QAGd,MAAAQ,UAAgBC,WAAAA,IAAiBV,qBAAoB,IAAK,CAAC;QAC9CW,OAAAA,IAAAA,aAAaF,OAAO;IAChCD,GAAAA,KAAA;QAACP;QAAYD,oBAAoB;KAAA,EAACH,CAAAA,CAAAA,EAAAA,GAAAI,YAAAJ,CAAAA,CAAAA,EAAAA,GAAAG,sBAAAH,CAAAA,CAAAA,EAAAA,GAAAU,IAAAV,CAAAA,CAAAA,EAAAA,GAAAW,EAAAA,IAAAA,CAAAD,KAAAV,CAAAA,CAAA,CAAA,CAAA,EAAAW,KAAAX,CAAAA,CAAA,CAAA,CAAA,IAPrCe,8UAAAA,EAAUL,IAOPC,EAAkC;IAACK,IAAAA;IAAA,OAAAhB,CAAAA,CAAAE,CAAAA,CAAAA,KAAAA,YAAAF,CAAAA,CAAAA,EAAAA,KAAAS,UAAAA,CAE/BO,KAAA,aAAA,GAAA,CAAA,GAAA,uUAAA,CAAA,MAAA,EAAA,QAAA,QAAA,EAAA;QAAyBP,OAAAA;QAAUP;IAAAA,CAAS,GAAmBF,CAAAA,CAAAA,EAAAA,GAAAE,UAAAF,CAAAA,CAAAA,EAAAA,GAAAS,SAAAT,CAAAA,CAAAA,EAAAA,GAAAgB,EAAAA,IAAAA,KAAAhB,CAAAA,CAAA,CAAA,CAAA,EAA/DgB;AAA+D;AAGjE,SAAAC,kCAAA;IAAA,0UACEC,aAAAA,EAAAtB,OAAkB;AAAC","ignoreList":[0]}},
    {"offset": {"line": 1453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1459, "column": 0}, "map": {"version":3,"file":"constants.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpreview-url-secret%402.0.5_%40sanity%2Bclient%406.24.1_debug%404.4.0_/node_modules/%40sanity/preview-url-secret/src/constants.ts"],"sourcesContent":["import type {\n  PreviewUrlSecretSchemaIdPrefix,\n  PreviewUrlSecretSchemaType,\n  PreviewUrlSecretSchemaTypeSingleton,\n} from './types'\n\n/** @internal */\nexport const schemaType = 'sanity.previewUrlSecret' satisfies PreviewUrlSecretSchemaType\n\n/** @internal */\nexport const schemaIdPrefix = 'sanity-preview-url-secret' satisfies PreviewUrlSecretSchemaIdPrefix\n\n/** @internal */\nexport const schemaIdSingleton = `${schemaIdPrefix}.share-access` as const\n\n/** @internal */\nexport const schemaTypeSingleton =\n  'sanity.previewUrlShareAccess' satisfies PreviewUrlSecretSchemaTypeSingleton\n\n/** @internal */\nexport const apiVersion = '2023-11-09'\n\n/** @internal */\nexport const urlSearchParamPreviewSecret = 'sanity-preview-secret'\n\n/** @internal */\nexport const urlSearchParamPreviewPathname = 'sanity-preview-pathname'\n\n/** @internal */\nexport const urlSearchParamPreviewPerspective = 'sanity-preview-perspective'\n\n/** @internal */\nexport const isDev = process.env.NODE_ENV === 'development'\n\n/**\n * updated within the hour, if it's older it'll create a new secret or return null\n * @internal\n */\nexport const SECRET_TTL = 60 * 60\n\n/** @internal */\nexport const fetchSecretQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && secret == $secret && dateTime(_updatedAt) > dateTime(now()) - ${SECRET_TTL}][0]{\n    _id,\n    _updatedAt,\n    secret,\n    studioUrl,\n  }` as const\n\n/** @internal */\nexport const fetchSharedAccessQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\"][0].secret` as const\n\n/** @internal */\nexport const fetchSharedAccessSecretQuery =\n  /* groq */ `*[_id == \"${schemaIdSingleton}\" && _type == \"${schemaTypeSingleton}\" && secret == $secret][0]{\n  secret,\n  studioUrl,\n}` as const\n\n/** @internal */\nexport const deleteExpiredSecretsQuery =\n  /* groq */ `*[_type == \"${schemaType}\" && dateTime(_updatedAt) <= dateTime(now()) - ${SECRET_TTL}]` as const\n\n/**\n * Used for tagging `client.fetch` queries\n * @internal\n */\nexport const tag = 'sanity.preview-url-secret' as const\n\n/** @internal */\nexport const perspectiveCookieName = 'sanity-preview-perspective'\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAgCqB,QAAQ,IAAI;AAzBpB,MAAA,aAAa,2BAGb,iBAAiB,6BAGjB,oBAAoB,GAAG,cAAc,CAAA,aAAA,CAAA,EAGrC,sBACX,gCAGW,aAAa,cAGb,8BAA8B,yBAG9B,gCAAgC,2BAGhC,mCAAmC,8BAGnC,4DAAiC,eAMjC,aAAa,KAAK,IAGlB,mBAAA,QAAA,GACA,CAAA,YAAA,EAAe,UAAU,CAAA,mEAAA,EAAsE,UAAU,CAAA;;;;;GAAA,CAAA,EAQzG,yBAAA,QAAA,GACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA,YAAA,CAAA,EAGnE,+BAAA,QAAA,GACA,CAAA,UAAA,EAAa,iBAAiB,CAAA,eAAA,EAAkB,mBAAmB,CAAA;;;CAAA,CAAA,EAMnE,4BAAA,QAAA,GACA,CAAA,YAAA,EAAe,UAAU,CAAA,+CAAA,EAAkD,UAAU,CAAA,CAAA,CAAA,EAMrF,MAAM,6BAGN,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 1489, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1495, "column": 0}, "map": {"version":3,"file":"without-secret-search-params.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpreview-url-secret%402.0.5_%40sanity%2Bclient%406.24.1_debug%404.4.0_/node_modules/%40sanity/preview-url-secret/src/withoutSecretSearchParams.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from './constants'\n\n/** @alpha */\nexport function withoutSecretSearchParams(url: URL): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.delete(urlSearchParamPreviewPathname)\n  searchParams.delete(urlSearchParamPreviewSecret)\n  searchParams.delete(urlSearchParamPreviewPerspective)\n  return newUrl\n}\n\n/** @alpha */\nexport function hasSecretSearchParams(url: URL): boolean {\n  return url.searchParams.has(urlSearchParamPreviewSecret)\n}\n\n/** @alpha */\nexport function setSecretSearchParams(\n  url: URL,\n  secret: string,\n  redirectTo: string,\n  perspective: string,\n): URL {\n  const newUrl = new URL(url)\n  const {searchParams} = newUrl\n  searchParams.set(urlSearchParamPreviewSecret, secret)\n  searchParams.set(urlSearchParamPreviewPathname, redirectTo)\n  searchParams.set(urlSearchParamPreviewPerspective, perspective)\n  return newUrl\n}\n"],"names":[],"mappings":";;;;;;;AAOO,SAAS,0BAA0B,GAAA,EAAe;IACvD,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACV,OAAA,aAAA,MAAA,0TAAO,gCAA6B,GACjD,aAAa,MAAA,0TAAO,8BAA2B,GAC/C,aAAa,MAAA,0TAAO,mCAAgC,GAC7C;AACT;AAGO,SAAS,sBAAsB,GAAA,EAAmB;IAChD,OAAA,IAAI,YAAA,CAAa,GAAA,0TAAI,8BAA2B;AACzD;AAGO,SAAS,sBACd,GAAA,EACA,MAAA,EACA,UAAA,EACA,WAAA,EACK;IACL,MAAM,SAAS,IAAI,IAAI,GAAG,GACpB,EAAC,YAAA,EAAA,GAAgB;IACvB,OAAA,aAAa,GAAA,0TAAI,8BAAA,EAA6B,MAAM,GACpD,aAAa,GAAA,0TAAI,gCAAA,EAA+B,UAAU,GAC1D,aAAa,GAAA,0TAAI,mCAAA,EAAkC,WAAW,GACvD;AACT","ignoreList":[0]}},
    {"offset": {"line": 1515, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1521, "column": 0}, "map": {"version":3,"file":"generateSecret.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpreview-url-secret%402.0.5_%40sanity%2Bclient%406.24.1_debug%404.4.0_/node_modules/%40sanity/preview-url-secret/src/generateSecret.ts"],"sourcesContent":["/** @internal */\nexport function generateUrlSecret(): string {\n  // Try using WebCrypto if available\n  if (typeof crypto !== 'undefined') {\n    // Generate a random array of 16 bytes\n    const array = new Uint8Array(16)\n    crypto.getRandomValues(array)\n\n    // Convert the array to a URL-safe string\n    let key = ''\n    for (let i = 0; i < array.length; i++) {\n      // Convert each byte to a 2-digit hexadecimal number\n      key += array[i].toString(16).padStart(2, '0')\n    }\n\n    // Replace '+' and '/' from base64url to '-' and '_'\n    key = btoa(key).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/[=]+$/, '')\n\n    return key\n  }\n  // If not fallback to Math.random\n  return Math.random().toString(36).slice(2)\n}\n"],"names":[],"mappings":";;;AACO,SAAS,oBAA4B;IAEtC,IAAA,OAAO,SAAW,KAAa;QAE3B,MAAA,QAAQ,IAAI,WAAW,EAAE;QAC/B,OAAO,eAAA,CAAgB,KAAK;QAG5B,IAAI,MAAM;QACV,IAAA,IAAS,IAAI,GAAG,IAAI,MAAM,MAAA,EAAQ,IAEzB,OAAA,KAAA,CAAM,CAAC,CAAA,CAAE,QAAA,CAAS,EAAE,EAAE,QAAA,CAAS,GAAG,GAAG;QAI9C,OAAA,MAAM,KAAK,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,OAAO,GAAG,EAAE,OAAA,CAAQ,SAAS,EAAE,GAEpE;IAAA;IAGT,OAAO,KAAK,MAAA,GAAS,QAAA,CAAS,EAAE,EAAE,KAAA,CAAM,CAAC;AAC3C","ignoreList":[0]}},
    {"offset": {"line": 1536, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1542, "column": 0}, "map": {"version":3,"file":"toggle-preview-access-sharing.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpreview-url-secret%402.0.5_%40sanity%2Bclient%406.24.1_debug%404.4.0_/node_modules/%40sanity/preview-url-secret/src/togglePreviewAccessSharing.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {schemaIdSingleton as _id, schemaTypeSingleton as _type, apiVersion, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function enablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<{secret: string}> {\n  const client = _client.withConfig({apiVersion})\n  const newSecret = generateUrlSecret()\n  const patch = client.patch(_id).set({secret: newSecret, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n\n  return {secret: newSecret}\n}\n\n/** @internal */\nexport async function disablePreviewAccessSharing(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n): Promise<void> {\n  const client = _client.withConfig({apiVersion})\n  const patch = client.patch(_id).set({secret: null, studioUrl, userId})\n  await client\n    .transaction()\n    .createIfNotExists({_id, _type, source, studioUrl, userId})\n    .patch(patch)\n    .commit({tag})\n}\n\nexport type {SanityClientLike}\n"],"names":["_id","_type"],"mappings":";;;;;;;;AAMA,eAAsB,2BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EAC2B;IACrB,MAAA,SAAS,QAAQ,UAAA,CAAW;6UAAC,aAAA;IAAA,CAAW,GACxC,gBAAY,mWAAA,KACZ,QAAQ,OAAO,KAAA,0TAAMA,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAW;QAAW;IAAA,CAAO;IACpE,OAAA,MAAA,OACH,WAAA,GACA,iBAAA,CAAkB;QAAA,8TAACA,oBAAAA;QAAKC,gUAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAO,CAAA,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;sUAAC,MAAA;IAAA,CAAI,GAER;QAAC,QAAQ;IAAS;AAC3B;AAGA,eAAsB,4BACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACe;IACf,MAAM,SAAS,QAAQ,UAAA,CAAW;6UAAC,aAAA;IAAW,CAAA,GACxC,QAAQ,OAAO,KAAA,0TAAMD,oBAAG,EAAE,GAAA,CAAI;QAAC,QAAQ;QAAM;QAAW;IAAA,CAAO;IACrE,MAAM,OACH,WAAA,CAAY,EACZ,iBAAA,CAAkB;QAACA,8TAAAA,oBAAAA;QAAKC,gUAAAA,sBAAAA;QAAO;QAAQ;QAAW;IAAM,CAAC,EACzD,KAAA,CAAM,KAAK,EACX,MAAA,CAAO;sUAAC,MAAA;IAAA,CAAI;AACjB","ignoreList":[0]}},
    {"offset": {"line": 1590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1596, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/framer-motion%4011.0.8_react-dom%4018.3.1_react%4018.3.1__react%4018.3.1/node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs"],"sourcesContent":["import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\nexport { MotionConfig };\n"],"names":[],"mappings":";;;AAAA;AAGA;AADA;AAEA;;;;;;AAEA;;;;;;;;;;;;;;;;CAgBC,GACD,SAAS,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,QAAQ;IACtD,eAAe,CAAA,GAAA,0UAAA,CAAA,0BAAuB,AAAD,EAAE;IACvC;;KAEC,GACD,SAAS;QAAE,GAAG,CAAA,GAAA,8TAAA,CAAA,aAAU,AAAD,EAAE,+TAAA,CAAA,sBAAmB,CAAC;QAAE,GAAG,MAAM;IAAC;IACzD;;;KAGC,GACD,OAAO,QAAQ,GAAG,CAAA,GAAA,yTAAA,CAAA,cAAW,AAAD;oCAAE,IAAM,OAAO,QAAQ;;IACnD;;;KAGC,GACD,MAAM,UAAU,CAAA,GAAA,8TAAA,CAAA,UAAO,AAAD;yCAAE,IAAM;wCAAQ;QAAC,KAAK,SAAS,CAAC,OAAO,UAAU;QAAG,OAAO,kBAAkB;QAAE,OAAO,aAAa;KAAC;IAC1H,OAAQ,+TAAM,aAAa,CAAC,+TAAA,CAAA,sBAAmB,CAAC,QAAQ,EAAE;QAAE,OAAO;IAAQ,GAAG;AAClF","ignoreList":[0]}},
    {"offset": {"line": 1653, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1659, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/path-to-regexp%406.3.0/node_modules/path-to-regexp/src/index.ts"],"sourcesContent":["/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2072, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2078, "column": 0}, "map": {"version":3,"file":"resolveEditInfo.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/studioPath.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/getPublishedId.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/jsonPath.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/resolveMapping.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/isArray.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/isRecord.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/walkMap.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/createEditUrl.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/resolveEditInfo.ts"],"sourcesContent":["/** @alpha */\nexport type KeyedSegment = {_key: string}\n\n/** @alpha */\nexport type IndexTuple = [number | '', number | '']\n\n/** @alpha */\nexport type PathSegment = string | number | KeyedSegment | IndexTuple\n\n/** @alpha */\nexport type Path = PathSegment[]\n\nconst rePropName =\n  /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g\n/** @internal */\nexport const reKeySegment = /_key\\s*==\\s*['\"](.*)['\"]/\nconst reIndexTuple = /^\\d*:\\d*$/\n\n/** @internal */\nexport function isIndexSegment(segment: PathSegment): segment is number {\n  return typeof segment === 'number' || (typeof segment === 'string' && /^\\[\\d+\\]$/.test(segment))\n}\n\n/** @internal */\nexport function isKeySegment(segment: PathSegment): segment is KeyedSegment {\n  if (typeof segment === 'string') {\n    return reKeySegment.test(segment.trim())\n  }\n\n  return typeof segment === 'object' && '_key' in segment\n}\n\n/** @internal */\nexport function isIndexTuple(segment: PathSegment): segment is IndexTuple {\n  if (typeof segment === 'string' && reIndexTuple.test(segment)) {\n    return true\n  }\n\n  if (!Array.isArray(segment) || segment.length !== 2) {\n    return false\n  }\n\n  const [from, to] = segment\n  return (typeof from === 'number' || from === '') && (typeof to === 'number' || to === '')\n}\n\n/** @internal */\nexport function get<Result = unknown, Fallback = unknown>(\n  obj: unknown,\n  path: Path | string,\n  defaultVal?: Fallback,\n): Result | typeof defaultVal {\n  const select = typeof path === 'string' ? fromString(path) : path\n  if (!Array.isArray(select)) {\n    throw new Error('Path must be an array or a string')\n  }\n\n  let acc: unknown | undefined = obj\n  for (let i = 0; i < select.length; i++) {\n    const segment = select[i]\n    if (isIndexSegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc[segment]\n    }\n\n    if (isKeySegment(segment)) {\n      if (!Array.isArray(acc)) {\n        return defaultVal\n      }\n\n      acc = acc.find((item) => item._key === segment._key)\n    }\n\n    if (typeof segment === 'string') {\n      acc =\n        typeof acc === 'object' && acc !== null\n          ? ((acc as Record<string, unknown>)[segment] as Result)\n          : undefined\n    }\n\n    if (typeof acc === 'undefined') {\n      return defaultVal\n    }\n  }\n\n  return acc as Result\n}\n\n/** @alpha */\nexport function toString(path: Path): string {\n  if (!Array.isArray(path)) {\n    throw new Error('Path is not an array')\n  }\n\n  return path.reduce<string>((target, segment, i) => {\n    const segmentType = typeof segment\n    if (segmentType === 'number') {\n      return `${target}[${segment}]`\n    }\n\n    if (segmentType === 'string') {\n      const separator = i === 0 ? '' : '.'\n      return `${target}${separator}${segment}`\n    }\n\n    if (isKeySegment(segment) && segment._key) {\n      return `${target}[_key==\"${segment._key}\"]`\n    }\n\n    if (Array.isArray(segment)) {\n      const [from, to] = segment\n      return `${target}[${from}:${to}]`\n    }\n\n    throw new Error(`Unsupported path segment \\`${JSON.stringify(segment)}\\``)\n  }, '')\n}\n\n/** @alpha */\nexport function fromString(path: string): Path {\n  if (typeof path !== 'string') {\n    throw new Error('Path is not a string')\n  }\n\n  const segments = path.match(rePropName)\n  if (!segments) {\n    throw new Error('Invalid path string')\n  }\n\n  return segments.map(parsePathSegment)\n}\n\nfunction parsePathSegment(segment: string): PathSegment {\n  if (isIndexSegment(segment)) {\n    return parseIndexSegment(segment)\n  }\n\n  if (isKeySegment(segment)) {\n    return parseKeySegment(segment)\n  }\n\n  if (isIndexTuple(segment)) {\n    return parseIndexTupleSegment(segment)\n  }\n\n  return segment\n}\n\nfunction parseIndexSegment(segment: string): PathSegment {\n  return Number(segment.replace(/[^\\d]/g, ''))\n}\n\nfunction parseKeySegment(segment: string): KeyedSegment {\n  const segments = segment.match(reKeySegment)\n  return {_key: segments![1]}\n}\n\nfunction parseIndexTupleSegment(segment: string): IndexTuple {\n  const [from, to] = segment.split(':').map((seg) => (seg === '' ? seg : Number(seg)))\n  return [from, to]\n}\n","export const DRAFTS_PREFIX = 'drafts.'\n\n/** @internal */\nexport function getPublishedId(id: string): string {\n  if (id.startsWith(DRAFTS_PREFIX)) {\n    return id.slice(DRAFTS_PREFIX.length)\n  }\n\n  return id\n}\n","import * as studioPath from './studioPath'\nimport type {\n  ContentSourceMapParsedPath,\n  ContentSourceMapParsedPathKeyedSegment,\n  ContentSourceMapPaths,\n  Path,\n} from './types'\n\nconst ESCAPE: Record<string, string> = {\n  '\\f': '\\\\f',\n  '\\n': '\\\\n',\n  '\\r': '\\\\r',\n  '\\t': '\\\\t',\n  \"'\": \"\\\\'\",\n  '\\\\': '\\\\\\\\',\n}\n\nconst UNESCAPE: Record<string, string> = {\n  '\\\\f': '\\f',\n  '\\\\n': '\\n',\n  '\\\\r': '\\r',\n  '\\\\t': '\\t',\n  \"\\\\'\": \"'\",\n  '\\\\\\\\': '\\\\',\n}\n\n/**\n * @internal\n */\nexport function jsonPath(path: ContentSourceMapParsedPath): ContentSourceMapPaths[number] {\n  return `$${path\n    .map((segment) => {\n      if (typeof segment === 'string') {\n        const escapedKey = segment.replace(/[\\f\\n\\r\\t'\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `['${escapedKey}']`\n      }\n\n      if (typeof segment === 'number') {\n        return `[${segment}]`\n      }\n\n      if (segment._key !== '') {\n        const escapedKey = segment._key.replace(/['\\\\]/g, (match) => {\n          return ESCAPE[match]\n        })\n        return `[?(@._key=='${escapedKey}')]`\n      }\n\n      return `[${segment._index}]`\n    })\n    .join('')}`\n}\n\n/**\n * @internal\n */\nexport function parseJsonPath(path: ContentSourceMapPaths[number]): ContentSourceMapParsedPath {\n  const parsed: ContentSourceMapParsedPath = []\n\n  const parseRe = /\\['(.*?)'\\]|\\[(\\d+)\\]|\\[\\?\\(@\\._key=='(.*?)'\\)\\]/g\n  let match: RegExpExecArray | null\n\n  while ((match = parseRe.exec(path)) !== null) {\n    if (match[1] !== undefined) {\n      const key = match[1].replace(/\\\\(\\\\|f|n|r|t|')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push(key)\n      continue\n    }\n\n    if (match[2] !== undefined) {\n      parsed.push(parseInt(match[2], 10))\n      continue\n    }\n\n    if (match[3] !== undefined) {\n      const _key = match[3].replace(/\\\\(\\\\')/g, (m) => {\n        return UNESCAPE[m]\n      })\n\n      parsed.push({\n        _key,\n        _index: -1,\n      })\n      continue\n    }\n  }\n\n  return parsed\n}\n\n/**\n * @internal\n */\nexport function jsonPathToStudioPath(path: ContentSourceMapParsedPath): Path {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._key !== '') {\n      return {_key: segment._key}\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\n/**\n * @internal\n */\nexport function studioPathToJsonPath(path: Path | string): ContentSourceMapParsedPath {\n  const parsedPath = typeof path === 'string' ? studioPath.fromString(path) : path\n\n  return parsedPath.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (Array.isArray(segment)) {\n      throw new Error(`IndexTuple segments aren't supported:${JSON.stringify(segment)}`)\n    }\n\n    if (isContentSourceMapParsedPathKeyedSegment(segment)) {\n      return segment\n    }\n\n    if (segment._key) {\n      return {_key: segment._key, _index: -1}\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n\nfunction isContentSourceMapParsedPathKeyedSegment(\n  segment: studioPath.PathSegment | ContentSourceMapParsedPath[number],\n): segment is ContentSourceMapParsedPathKeyedSegment {\n  return typeof segment === 'object' && '_key' in segment && '_index' in segment\n}\n\n/**\n * @internal\n */\nexport function jsonPathToMappingPath(path: ContentSourceMapParsedPath): (string | number)[] {\n  return path.map((segment) => {\n    if (typeof segment === 'string') {\n      return segment\n    }\n\n    if (typeof segment === 'number') {\n      return segment\n    }\n\n    if (segment._index !== -1) {\n      return segment._index\n    }\n\n    throw new Error(`invalid segment:${JSON.stringify(segment)}`)\n  })\n}\n","import {jsonPath, jsonPathToMappingPath} from './jsonPath'\nimport type {ContentSourceMap, ContentSourceMapMapping, ContentSourceMapParsedPath} from './types'\n\n/**\n * @internal\n */\nexport function resolveMapping(\n  resultPath: ContentSourceMapParsedPath,\n  csm?: ContentSourceMap,\n):\n  | {\n      mapping: ContentSourceMapMapping\n      matchedPath: string\n      pathSuffix: string\n    }\n  | undefined {\n  if (!csm?.mappings) {\n    return undefined\n  }\n  const resultMappingPath = jsonPath(jsonPathToMappingPath(resultPath))\n\n  if (csm.mappings[resultMappingPath] !== undefined) {\n    return {\n      mapping: csm.mappings[resultMappingPath],\n      matchedPath: resultMappingPath,\n      pathSuffix: '',\n    }\n  }\n\n  const mappings = Object.entries(csm.mappings)\n    .filter(([key]) => resultMappingPath.startsWith(key))\n    .sort(([key1], [key2]) => key2.length - key1.length)\n\n  if (mappings.length == 0) {\n    return undefined\n  }\n\n  const [matchedPath, mapping] = mappings[0]\n  const pathSuffix = resultMappingPath.substring(matchedPath.length)\n  return {mapping, matchedPath, pathSuffix}\n}\n","/** @internal */\nexport function isArray(value: unknown): value is Array<unknown> {\n  return value !== null && Array.isArray(value)\n}\n","/** @internal */\nexport function isRecord(value: unknown): value is Record<string, unknown> {\n  return typeof value === 'object' && value !== null\n}\n","import {isArray} from './isArray'\nimport {isRecord} from './isRecord'\nimport type {ContentSourceMapParsedPath, WalkMapFn} from './types'\n\n/**\n * generic way to walk a nested object or array and apply a mapping function to each value\n * @internal\n */\nexport function walkMap(\n  value: unknown,\n  mappingFn: WalkMapFn,\n  path: ContentSourceMapParsedPath = [],\n): unknown {\n  if (isArray(value)) {\n    return value.map((v, idx) => {\n      if (isRecord(v)) {\n        const _key = v['_key']\n        if (typeof _key === 'string') {\n          return walkMap(v, mappingFn, path.concat({_key, _index: idx}))\n        }\n      }\n\n      return walkMap(v, mappingFn, path.concat(idx))\n    })\n  }\n\n  if (isRecord(value)) {\n    // Handle Portable Text in a faster way\n    if (value._type === 'block' || value._type === 'span') {\n      const result = {...value}\n      if (value._type === 'block') {\n        result.children = walkMap(value.children, mappingFn, path.concat('children'))\n      } else if (value._type === 'span') {\n        result.text = walkMap(value.text, mappingFn, path.concat('text'))\n      }\n      return result\n    }\n\n    return Object.fromEntries(\n      Object.entries(value).map(([k, v]) => [k, walkMap(v, mappingFn, path.concat(k))]),\n    )\n  }\n\n  return mappingFn(value, path)\n}\n","import {DRAFTS_PREFIX, getPublishedId} from './getPublishedId'\nimport {jsonPathToStudioPath} from './jsonPath'\nimport * as studioPath from './studioPath'\nimport type {CreateEditUrlOptions, EditIntentUrl, StudioBaseUrl} from './types'\n\n/** @internal */\nexport function createEditUrl(options: CreateEditUrlOptions): `${StudioBaseUrl}${EditIntentUrl}` {\n  const {\n    baseUrl,\n    workspace: _workspace = 'default',\n    tool: _tool = 'default',\n    id: _id,\n    type,\n    path,\n    projectId,\n    dataset,\n  } = options\n\n  if (!baseUrl) {\n    throw new Error('baseUrl is required')\n  }\n  if (!path) {\n    throw new Error('path is required')\n  }\n  if (!_id) {\n    throw new Error('id is required')\n  }\n  if (baseUrl !== '/' && baseUrl.endsWith('/')) {\n    throw new Error('baseUrl must not end with a slash')\n  }\n\n  const workspace = _workspace === 'default' ? undefined : _workspace\n  const tool = _tool === 'default' ? undefined : _tool\n  const id = getPublishedId(_id)\n  const stringifiedPath = Array.isArray(path)\n    ? studioPath.toString(jsonPathToStudioPath(path))\n    : path\n\n  // eslint-disable-next-line no-warning-comments\n  // @TODO Using searchParams as a temporary workaround until `@sanity/overlays` can decode state from the path reliably\n  const searchParams = new URLSearchParams({\n    baseUrl,\n    id,\n    type,\n    path: stringifiedPath,\n  })\n  if (workspace) {\n    searchParams.set('workspace', workspace)\n  }\n  if (tool) {\n    searchParams.set('tool', tool)\n  }\n  if (projectId) {\n    searchParams.set('projectId', projectId)\n  }\n  if (dataset) {\n    searchParams.set('dataset', dataset)\n  }\n  if (_id.startsWith(DRAFTS_PREFIX)) {\n    searchParams.set('isDraft', '')\n  }\n\n  const segments = [baseUrl === '/' ? '' : baseUrl]\n  if (workspace) {\n    segments.push(workspace)\n  }\n  const routerParams = [\n    'mode=presentation',\n    `id=${id}`,\n    `type=${type}`,\n    `path=${encodeURIComponent(stringifiedPath)}`,\n  ]\n  if (tool) {\n    routerParams.push(`tool=${tool}`)\n  }\n  segments.push('intent', 'edit', `${routerParams.join(';')}?${searchParams}`)\n  return segments.join('/') as unknown as `${StudioBaseUrl}${EditIntentUrl}`\n}\n","import {parseJsonPath} from './jsonPath'\nimport {resolveMapping} from './resolveMapping'\nimport type {\n  CreateEditUrlOptions,\n  ResolveEditInfoOptions,\n  StudioBaseRoute,\n  StudioBaseUrl,\n  StudioUrl,\n} from './types'\n\n/** @internal */\nexport function resolveEditInfo(options: ResolveEditInfoOptions): CreateEditUrlOptions | undefined {\n  const {resultSourceMap: csm, resultPath} = options\n  const {mapping, pathSuffix} = resolveMapping(resultPath, csm) || {}\n\n  if (!mapping) {\n    // console.warn('no mapping for path', { path: resultPath, sourceMap: csm })\n    return undefined\n  }\n\n  if (mapping.source.type === 'literal') {\n    return undefined\n  }\n\n  if (mapping.source.type === 'unknown') {\n    return undefined\n  }\n\n  const sourceDoc = csm.documents[mapping.source.document]\n  const sourcePath = csm.paths[mapping.source.path]\n\n  if (sourceDoc && sourcePath) {\n    const {baseUrl, workspace, tool} = resolveStudioBaseRoute(\n      typeof options.studioUrl === 'function' ? options.studioUrl(sourceDoc) : options.studioUrl,\n    )\n    if (!baseUrl) return undefined\n    const {_id, _type, _projectId, _dataset} = sourceDoc\n    return {\n      baseUrl,\n      workspace,\n      tool,\n      id: _id,\n      type: _type,\n      path: parseJsonPath(sourcePath + pathSuffix),\n      projectId: _projectId,\n      dataset: _dataset,\n    } satisfies CreateEditUrlOptions\n  }\n\n  return undefined\n}\n\n/** @internal */\nexport function resolveStudioBaseRoute(studioUrl: StudioUrl): StudioBaseRoute {\n  let baseUrl: StudioBaseUrl = typeof studioUrl === 'string' ? studioUrl : studioUrl.baseUrl\n  if (baseUrl !== '/') {\n    baseUrl = baseUrl.replace(/\\/$/, '')\n  }\n  if (typeof studioUrl === 'string') {\n    return {baseUrl}\n  }\n  return {...studioUrl, baseUrl}\n}\n"],"names":["studioPath.fromString","studioPath.toString"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8]}},
    {"offset": {"line": 2357, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2363, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/suspend-react%400.1.3_react%4018.3.1/node_modules/suspend-react/index.js"],"sourcesContent":["const isPromise = promise => typeof promise === 'object' && typeof promise.then === 'function';\n\nconst globalCache = [];\n\nfunction shallowEqualArrays(arrA, arrB, equal = (a, b) => a === b) {\n  if (arrA === arrB) return true;\n  if (!arrA || !arrB) return false;\n  const len = arrA.length;\n  if (arrB.length !== len) return false;\n\n  for (let i = 0; i < len; i++) if (!equal(arrA[i], arrB[i])) return false;\n\n  return true;\n}\n\nfunction query(fn, keys = null, preload = false, config = {}) {\n  // If no keys were given, the function is the key\n  if (keys === null) keys = [fn];\n\n  for (const entry of globalCache) {\n    // Find a match\n    if (shallowEqualArrays(keys, entry.keys, entry.equal)) {\n      // If we're pre-loading and the element is present, just return\n      if (preload) return undefined; // If an error occurred, throw\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'error')) throw entry.error; // If a response was successful, return\n\n      if (Object.prototype.hasOwnProperty.call(entry, 'response')) {\n        if (config.lifespan && config.lifespan > 0) {\n          if (entry.timeout) clearTimeout(entry.timeout);\n          entry.timeout = setTimeout(entry.remove, config.lifespan);\n        }\n\n        return entry.response;\n      } // If the promise is still unresolved, throw\n\n\n      if (!preload) throw entry.promise;\n    }\n  } // The request is new or has changed.\n\n\n  const entry = {\n    keys,\n    equal: config.equal,\n    remove: () => {\n      const index = globalCache.indexOf(entry);\n      if (index !== -1) globalCache.splice(index, 1);\n    },\n    promise: // Execute the promise\n    (isPromise(fn) ? fn : fn(...keys) // When it resolves, store its value\n    ).then(response => {\n      entry.response = response; // Remove the entry in time if a lifespan was given\n\n      if (config.lifespan && config.lifespan > 0) {\n        entry.timeout = setTimeout(entry.remove, config.lifespan);\n      }\n    }) // Store caught errors, they will be thrown in the render-phase to bubble into an error-bound\n    .catch(error => entry.error = error)\n  }; // Register the entry\n\n  globalCache.push(entry); // And throw the promise, this yields control back to React\n\n  if (!preload) throw entry.promise;\n  return undefined;\n}\n\nconst suspend = (fn, keys, config) => query(fn, keys, false, config);\n\nconst preload = (fn, keys, config) => void query(fn, keys, true, config);\n\nconst peek = keys => {\n  var _globalCache$find;\n\n  return (_globalCache$find = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal))) == null ? void 0 : _globalCache$find.response;\n};\n\nconst clear = keys => {\n  if (keys === undefined || keys.length === 0) globalCache.splice(0, globalCache.length);else {\n    const entry = globalCache.find(entry => shallowEqualArrays(keys, entry.keys, entry.equal));\n    if (entry) entry.remove();\n  }\n};\n\nexport { clear, peek, preload, suspend };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2440, "column": 0}, "map": {"version":3,"file":"define-preview-url.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpreview-url-secret%402.0.5_%40sanity%2Bclient%406.24.1_debug%404.4.0_/node_modules/%40sanity/preview-url-secret/src/definePreviewUrl.ts"],"sourcesContent":["import {\n  urlSearchParamPreviewPathname,\n  urlSearchParamPreviewPerspective,\n  urlSearchParamPreviewSecret,\n} from './constants'\nimport type {\n  PreviewUrlResolver,\n  PreviewUrlResolverContext,\n  PreviewUrlResolverOptions,\n} from './types'\n\n/**\n * @internal\n */\nexport function definePreviewUrl<SanityClientType>(\n  options: PreviewUrlResolverOptions,\n): PreviewUrlResolver<SanityClientType> {\n  const {\n    draftMode,\n    previewMode,\n    origin = typeof location === 'undefined' ? 'https://localhost' : location.origin,\n  } = options\n  const enableUrl = previewMode?.enable || draftMode?.enable\n  let {preview = '/'} = options\n  const productionUrl = new URL(preview, origin)\n  const enablePreviewModeUrl = enableUrl ? new URL(enableUrl, origin) : undefined\n\n  return async (context): Promise<string> => {\n    try {\n      if (context.previewSearchParam) {\n        const restoredUrl = new URL(context.previewSearchParam, productionUrl)\n        if (restoredUrl.origin === productionUrl.origin) {\n          preview = `${restoredUrl.pathname}${restoredUrl.search}`\n        }\n      }\n    } catch {\n      // ignore\n    }\n    // Prevent infinite recursion\n    if (\n      typeof location !== 'undefined' &&\n      location.origin === productionUrl.origin &&\n      context.studioBasePath &&\n      (preview.startsWith(`${context.studioBasePath}/`) || preview === context.studioBasePath)\n    ) {\n      preview = options.preview || '/'\n    }\n    const previewUrl = new URL(preview, productionUrl)\n    if (enablePreviewModeUrl) {\n      const enablePreviewModeRequestUrl = new URL(enablePreviewModeUrl)\n      const {searchParams} = enablePreviewModeRequestUrl\n      searchParams.set(urlSearchParamPreviewSecret, context.previewUrlSecret)\n      searchParams.set(urlSearchParamPreviewPerspective, context.studioPreviewPerspective)\n      if (previewUrl.pathname !== enablePreviewModeRequestUrl.pathname) {\n        searchParams.set(\n          urlSearchParamPreviewPathname,\n          `${previewUrl.pathname}${previewUrl.search}`,\n        )\n      }\n\n      return enablePreviewModeRequestUrl.toString()\n    }\n    return previewUrl.toString()\n  }\n}\n\nexport type {PreviewUrlResolver, PreviewUrlResolverContext, PreviewUrlResolverOptions}\n"],"names":[],"mappings":";;;;;AAcO,SAAS,iBACd,OAAA,EACsC;IAChC,MAAA,EACJ,SAAA,EACA,WAAA,EACA,SAAS,OAAO,WAAa,MAAc,sBAAsB,SAAS,MAAA,EACxE,GAAA,SACE,YAAY,aAAa,UAAU,WAAW;IAChD,IAAA,EAAC,UAAU,GAAA,CAAA,CAAA,GAAO;IACtB,MAAM,gBAAgB,IAAI,IAAI,SAAS,MAAM,GACvC,uBAAuB,YAAY,IAAI,IAAI,WAAW,MAAM,IAAI,KAAA;IAEtE,OAAO,OAAO,YAA6B;QACrC,IAAA;YACF,IAAI,QAAQ,kBAAA,EAAoB;gBAC9B,MAAM,cAAc,IAAI,IAAI,QAAQ,kBAAA,EAAoB,aAAa;gBACjE,YAAY,MAAA,KAAW,cAAc,MAAA,IAAA,CACvC,UAAU,GAAG,YAAY,QAAQ,GAAG,YAAY,MAAM,EAAA;YAAA;QAE1D,EAAA,OACM,CAAA;QAKN,OAAO,WAAa,OACpB,SAAS,MAAA,KAAW,cAAc,MAAA,IAClC,QAAQ,cAAA,IAAA,CACP,QAAQ,UAAA,CAAW,GAAG,QAAQ,cAAc,CAAA,CAAA,CAAG,KAAK,YAAY,QAAQ,cAAA,KAAA,CAEzE,UAAU,QAAQ,OAAA,IAAW,GAAA;QAE/B,MAAM,aAAa,IAAI,IAAI,SAAS,aAAa;QACjD,IAAI,sBAAsB;YACxB,MAAM,8BAA8B,IAAI,IAAI,oBAAoB,GAC1D,EAAC,YAAA,EAAA,GAAgB;YACvB,OAAA,aAAa,GAAA,0TAAI,8BAAA,EAA6B,QAAQ,gBAAgB,GACtE,aAAa,GAAA,0TAAI,mCAAA,EAAkC,QAAQ,wBAAwB,GAC/E,WAAW,QAAA,KAAa,4BAA4B,QAAA,IACtD,aAAa,GAAA,0TACX,gCAAA,EACA,GAAG,WAAW,QAAQ,GAAG,WAAW,MAAM,EAAA,GAIvC,4BAA4B,QAAA,CAAS;QAAA;QAE9C,OAAO,WAAW,QAAA,CAAS;IAC7B;AACF","ignoreList":[0]}},
    {"offset": {"line": 2467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2473, "column": 0}, "map": {"version":3,"file":"create-secret.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpreview-url-secret%402.0.5_%40sanity%2Bclient%406.24.1_debug%404.4.0_/node_modules/%40sanity/preview-url-secret/src/createPreviewSecret.ts"],"sourcesContent":["import type {SanityClient} from '@sanity/client'\nimport {uuid} from '@sanity/uuid'\nimport {apiVersion, deleteExpiredSecretsQuery, schemaType, SECRET_TTL, tag} from './constants'\nimport {generateUrlSecret} from './generateSecret'\nimport type {SanityClientLike} from './types'\n\n/** @internal */\nexport async function createPreviewSecret(\n  _client: SanityClient,\n  source: string,\n  studioUrl: string,\n  userId?: string,\n  id = uuid(),\n): Promise<{secret: string; expiresAt: Date}> {\n  const client = _client.withConfig({apiVersion})\n\n  try {\n    const expiresAt = new Date(Date.now() + 1000 * SECRET_TTL)\n    const _id = `drafts.${id}`\n    const newSecret = generateUrlSecret()\n    const patch = client.patch(_id).set({secret: newSecret, source, studioUrl, userId})\n    await client.transaction().createOrReplace({_id, _type: schemaType}).patch(patch).commit({tag})\n\n    return {secret: newSecret, expiresAt}\n  } finally {\n    try {\n      // Garbage collect expired secrets\n      await client.delete({query: deleteExpiredSecretsQuery})\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Failed to delete expired secrets', err)\n    }\n  }\n}\n\nexport type {SanityClientLike}\n"],"names":[],"mappings":";;;;;;;;;AAOA,eAAsB,oBACpB,OAAA,EACA,MAAA,EACA,SAAA,EACA,MAAA,EACA,qPAAK,OAAA,GAAA,EACuC;IAC5C,MAAM,SAAS,QAAQ,UAAA,CAAW;6UAAC,aAAA;IAAA,CAAW;IAE1C,IAAA;QACF,MAAM,YAAY,IAAI,KAAK,KAAK,GAAA,CAAI,IAAI,+TAAO,aAAU,GACnD,MAAM,CAAA,OAAA,EAAU,EAAE,EAAA,EAClB,aAAY,sWAAA,CAAkB,IAC9B,QAAQ,OAAO,KAAA,CAAM,GAAG,EAAE,GAAA,CAAI;YAAC,QAAQ;YAAW;YAAQ;YAAW;QAAA,CAAO;QAC5E,OAAA,MAAA,OAAO,WAAA,GAAc,eAAA,CAAgB;YAAC;YAAK,gUAAO,aAAA;QAAA,CAAW,EAAE,KAAA,CAAM,KAAK,EAAE,MAAA,CAAO;0UAAC,MAAA;QAAA,CAAI,GAEvF;YAAC,QAAQ;YAAW;QAAS;IAAA,SACpC;QACI,IAAA;YAEF,MAAM,OAAO,MAAA,CAAO;gBAAC,gUAAO,4BAAA;YAAA,CAA0B;QAAA,EAAA,OAC/C,KAAK;YAEJ,QAAA,KAAA,CAAM,oCAAoC,GAAG;QAAA;IACvD;AAEJ","ignoreList":[0]}},
    {"offset": {"line": 2514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2520, "column": 0}, "map": {"version":3,"file":"PresentationToolGrantsCheck.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/visual-editing-helpers/dist/index.js","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/lib/debounce.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/overlays/SharedStateProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/PanelsContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/Panel.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/usePanelsStorage.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/util.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/Panels.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/components/ErrorCard.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/editor/PresentationPaneRouterProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/editor/DocumentListPane.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/editor/DocumentPane.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/editor/DocumentPanel.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/editor/usePreviewState.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/editor/ContentEditor.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/stringify.js","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/rng.js","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/native.js","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/node_modules/.pnpm/uuid%4010.0.0/node_modules/uuid/dist/esm-browser/v4.js","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/usePanelId.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/panels/PanelResizer.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationContent.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationNavigateProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/useLocalState.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationNavigator.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationParamsProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/preview/IFrame.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/preview/OpenPreviewButton.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/preview/PreviewLocationInput.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/preview/SharePreviewMenu.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/preview/PreviewHeader.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/preview/Preview.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/util/useEffectOnChange.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/RevisionSwitcher.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/util/warnOnce.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/useDocumentsOnPage.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/useMainDocument.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/lib/parse.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/useParams.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/usePopups.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/usePreviewUrl.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/useStatus.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationTool.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/PresentationToolGrantsCheck.tsx"],"sourcesContent":["import { createListenLogic, createRequestMachine, DOMAIN, MSG_HANDSHAKE_SYN, MSG_HANDSHAKE_SYN_ACK, MSG_HANDSHAKE_ACK, MSG_RESPONSE, MSG_HEARTBEAT, MSG_DISCONNECT } from \"@sanity/comlink\";\nimport { MSG_RESPONSE as MSG_RESPONSE2 } from \"@sanity/comlink\";\nimport { studioPath } from \"@sanity/client/csm\";\nimport { encodeSanityNodeData } from \"./_chunks-es/transformSanityNodeData.js\";\nimport { pathToUrlString, urlStringToPath } from \"./_chunks-es/transformSanityNodeData.js\";\nconst channelsToComlinkMap = {\n  \"handshake/syn\": MSG_HANDSHAKE_SYN,\n  \"handshake/syn-ack\": MSG_HANDSHAKE_SYN_ACK,\n  \"handshake/ack\": MSG_HANDSHAKE_ACK,\n  \"channel/response\": MSG_RESPONSE,\n  \"channel/heartbeat\": MSG_HEARTBEAT,\n  \"channel/disconnect\": MSG_DISCONNECT,\n  \"overlay/focus\": \"visual-editing/focus\",\n  \"overlay/navigate\": \"visual-editing/navigate\",\n  \"overlay/toggle\": \"visual-editing/toggle\",\n  \"presentation/toggleOverlay\": \"presentation/toggle-overlay\"\n}, comlinkToChannelsMap = {\n  [MSG_HANDSHAKE_SYN]: \"handshake/syn\",\n  [MSG_HANDSHAKE_SYN_ACK]: \"handshake/syn-ack\",\n  [MSG_HANDSHAKE_ACK]: \"handshake/ack\",\n  [MSG_RESPONSE]: \"channel/response\",\n  [MSG_HEARTBEAT]: \"channel/heartbeat\",\n  [MSG_DISCONNECT]: \"channel/disconnect\",\n  \"visual-editing/focus\": \"overlay/focus\",\n  \"visual-editing/navigate\": \"overlay/navigate\",\n  \"visual-editing/toggle\": \"overlay/toggle\",\n  \"presentation/toggle-overlay\": \"presentation/toggleOverlay\"\n}, convertToComlinkEvent = (event) => {\n  const { data } = event;\n  return data && typeof data == \"object\" && \"domain\" in data && \"type\" in data && \"from\" in data && \"to\" in data && (data.domain === \"sanity/channels\" && (data.domain = DOMAIN), data.to === \"overlays\" && (data.to = \"visual-editing\"), data.from === \"overlays\" && (data.from = \"visual-editing\"), data.channelId = data.connectionId, delete data.connectionId, data.type = channelsToComlinkMap[data.type] ?? data.type), event;\n}, convertToChannelsMessage = (comlinkMessage) => {\n  const { channelId, ...rest } = comlinkMessage, message = { ...rest, connectionId: channelId };\n  return message.domain === DOMAIN && (message.domain = \"sanity/channels\"), message.to === \"visual-editing\" && (message.to = \"overlays\"), message.from === \"visual-editing\" && (message.from = \"overlays\"), message.type = comlinkToChannelsMap[message.type] ?? message.type, message.type === \"channel/response\" && message.responseTo && !message.data && (message.data = { responseTo: message.responseTo }), (message.type === \"handshake/syn\" || message.type === \"handshake/syn-ack\" || message.type === \"handshake/ack\") && (message.data = { id: message.connectionId }), message;\n}, sendAsChannelsMessage = ({ context }, params) => {\n  const { sources, targetOrigin } = context, message = convertToChannelsMessage(params.message);\n  sources.forEach((source) => {\n    source.postMessage(message, { targetOrigin });\n  });\n}, createCompatibilityActors = () => ({\n  listen: createListenLogic(convertToComlinkEvent),\n  requestMachine: createRequestMachine().provide({\n    actions: {\n      \"send message\": sendAsChannelsMessage\n    }\n  })\n});\nfunction createDataAttribute(props) {\n  function normalizePath(path) {\n    return path ? typeof path == \"string\" ? studioPath.fromString(path) : path : [];\n  }\n  function toString(props2) {\n    if (!props2.id) throw new Error(\"`id` is required to create a data attribute\");\n    if (!props2.type) throw new Error(\"`type` is required to create a data attribute\");\n    if (!props2.path || !props2.path.length)\n      throw new Error(\"`path` is required to create a data attribute\");\n    const attrs = {\n      baseUrl: props2.baseUrl || \"/\",\n      workspace: props2.workspace,\n      tool: props2.tool,\n      type: props2.type,\n      id: props2.id,\n      path: typeof props2.path == \"string\" ? props2.path : studioPath.toString(props2.path)\n    };\n    return encodeSanityNodeData(attrs);\n  }\n  const DataAttribute = (path) => toString({\n    ...props,\n    path: [...normalizePath(props.path), ...normalizePath(path)]\n  });\n  return DataAttribute.toString = function() {\n    return toString(props);\n  }, DataAttribute.combine = function(attrs) {\n    return createDataAttribute({\n      ...props,\n      ...attrs\n    });\n  }, DataAttribute.scope = function(path) {\n    return createDataAttribute({\n      ...props,\n      path: [...normalizePath(props.path), ...normalizePath(path)]\n    });\n  }, DataAttribute;\n}\nfunction getQueryCacheKey(query, params) {\n  return `${query}-${typeof params == \"string\" ? params : JSON.stringify(params)}`;\n}\nconst IS_MAC = typeof window < \"u\" && /Mac|iPod|iPhone|iPad/.test(window.navigator.platform), MODIFIERS = {\n  alt: \"altKey\",\n  ctrl: \"ctrlKey\",\n  mod: IS_MAC ? \"metaKey\" : \"ctrlKey\",\n  shift: \"shiftKey\"\n};\nfunction isHotkey(keys, event) {\n  return keys.every((key) => MODIFIERS[key] ? event[MODIFIERS[key]] : event.key === key.toUpperCase());\n}\nfunction isModKey(event) {\n  return event.key === (IS_MAC ? \"Meta\" : \"Ctrl\");\n}\nfunction isAltKey(event) {\n  return event.key === \"Alt\";\n}\nexport {\n  MSG_RESPONSE2 as MSG_RESPONSE,\n  createCompatibilityActors,\n  createDataAttribute,\n  getQueryCacheKey,\n  isAltKey,\n  isHotkey,\n  isModKey,\n  pathToUrlString,\n  urlStringToPath\n};\n//# sourceMappingURL=index.js.map\n","export function debounce<F extends (...args: Parameters<F>) => ReturnType<F>>(\n  fn: F,\n  timeout: number,\n): F {\n  let timer: ReturnType<typeof setTimeout>\n  return ((...args: Parameters<F>) => {\n    clearTimeout(timer)\n    timer = setTimeout(() => {\n      fn.apply(fn, args)\n    }, timeout)\n  }) as F\n}\n","import type {Serializable, SerializableObject} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {VisualEditingConnection} from '../types'\nimport {SharedStateContext, type SharedStateContextValue} from './SharedStateContext'\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink: VisualEditingConnection | null\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const sharedState = useRef<SerializableObject>({})\n\n  useEffect(() => {\n    return comlink?.on('visual-editing/shared-state', () => {\n      return {state: sharedState.current}\n    })\n  }, [comlink])\n\n  const setValue = useCallback(\n    (key: string, value: Serializable) => {\n      sharedState.current[key] = value\n      comlink?.post('presentation/shared-state', {key, value})\n    },\n    [comlink],\n  )\n\n  const removeValue = useCallback(\n    (key: string) => {\n      comlink?.post('presentation/shared-state', {key})\n      delete sharedState.current[key]\n    },\n    [comlink],\n  )\n\n  const context = useMemo<SharedStateContextValue>(\n    () => ({removeValue, setValue}),\n    [removeValue, setValue],\n  )\n\n  return <SharedStateContext.Provider value={context}>{children}</SharedStateContext.Provider>\n}\n","import {createContext, type CSSProperties} from 'react'\nimport type {PanelElement, ResizerElement} from './types'\n\nexport const PanelsContext = createContext<{\n  activeResizer: string | null\n  drag: (id: string, event: MouseEvent) => void\n  getPanelStyle: (id: string) => CSSProperties\n  registerElement: (id: string, panel: PanelElement | ResizerElement) => void\n  startDragging: (id: string, event: MouseEvent) => void\n  stopDragging: () => void\n  unregisterElement: (id: string) => void\n} | null>(null)\n\nPanelsContext.displayName = 'PanelsContext'\n","import {useContext, useLayoutEffect, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\n\ninterface PanelProps extends PropsWithChildren {\n  defaultSize?: number | null\n  id: string\n  minWidth?: number\n  maxWidth?: number\n  order?: number\n}\n\nconst Root = styled.div`\n  overflow: hidden;\n  flex-basis: 0;\n  flex-shrink: 1;\n`\n\nexport const Panel: FunctionComponent<PanelProps> = function ({\n  children,\n  defaultSize = null,\n  id,\n  minWidth,\n  maxWidth,\n  order = 0,\n}) {\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const {getPanelStyle, registerElement, unregisterElement} = context\n\n  const style = getPanelStyle(id)\n\n  useLayoutEffect(() => {\n    registerElement(id, {\n      id,\n      type: 'panel',\n      defaultSize,\n      maxWidth: maxWidth ?? null,\n      minWidth: minWidth ?? 0,\n      order,\n    })\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, defaultSize, order, maxWidth, minWidth, registerElement, unregisterElement])\n\n  return <Root style={style}>{children}</Root>\n}\n","import {useMemo} from 'react'\nimport {debounce} from '../lib/debounce'\nimport type {PanelElement} from './types'\n\nconst itemKey = 'presentation/panels'\n\ntype StoredPanelsState = Record<string, number[]>\n\nconst getStoredItem = () => {\n  // @todo Validate\n  return JSON.parse(localStorage.getItem(itemKey) || '{}') as StoredPanelsState\n}\nconst setStoredItem = (data: StoredPanelsState) => {\n  localStorage.setItem(itemKey, JSON.stringify(data))\n}\n\nconst getKeyForPanels = (panels: PanelElement[]) => {\n  return panels.map((panel) => [panel.id, panel.order].join(':')).join(',')\n}\n\nexport function usePanelsStorage(): {\n  get: (panels: PanelElement[]) => number[] | undefined\n  set: (panels: PanelElement[], widths: number[]) => void\n  setDebounced: (panels: PanelElement[], widths: number[]) => void\n} {\n  return useMemo(() => {\n    const get = (panels: PanelElement[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      return Array.isArray(stored[key]) && stored[key].some((val) => val === null)\n        ? undefined\n        : stored[key]\n    }\n\n    const set = (panels: PanelElement[], widths: number[]) => {\n      const stored = getStoredItem()\n      const key = getKeyForPanels(panels)\n      const data = {\n        ...stored,\n        [key]: widths,\n      }\n      setStoredItem(data)\n    }\n\n    const setDebounced = debounce(set, 100)\n    return {\n      get,\n      set,\n      setDebounced,\n    }\n  }, [])\n}\n","import type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\n\nfunction getNextWidth(panel: PanelElement, nextWidth: number, containerWidth: number) {\n  const {maxWidth: maxWidthPx, minWidth: minWidthPx} = panel\n  const maxWidth = maxWidthPx == null ? 100 : (maxWidthPx / containerWidth) * 100\n  const minWidth = (minWidthPx / containerWidth) * 100\n  return Math.min(maxWidth, Math.max(minWidth, nextWidth))\n}\n\nexport function getNextWidths(\n  delta: number,\n  containerWidth: number,\n  panelBefore: PanelElement,\n  panelAfter: PanelElement,\n  panelsState: PanelsState,\n  initialDragState: InitialDragState,\n): number[] {\n  const {panels, widths: prevWidths} = panelsState\n  const {widths: initialWidths} = initialDragState\n\n  const widths = initialWidths || prevWidths\n  const nextWidths = [...widths]\n\n  {\n    const pivotPanel = delta < 0 ? panelAfter : panelBefore\n    const index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n    const width = widths[index]\n    const nextWidth = getNextWidth(pivotPanel, width + Math.abs(delta), containerWidth)\n    if (width === nextWidth) {\n      return widths\n    } else {\n      delta = delta < 0 ? width - nextWidth : nextWidth - width\n    }\n  }\n\n  let deltaApplied = 0\n  let pivotPanel = delta < 0 ? panelBefore : panelAfter\n  let index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const panel = panels[index]\n    const width = widths[index]\n\n    const deltaRemaining = Math.abs(delta) - Math.abs(deltaApplied)\n\n    const nextWidth = getNextWidth(panel, width - deltaRemaining, containerWidth)\n\n    if (width !== nextWidth) {\n      deltaApplied += width - nextWidth\n      nextWidths[index] = nextWidth\n\n      if (\n        deltaApplied.toPrecision(10).localeCompare(Math.abs(delta).toPrecision(10), undefined, {\n          numeric: true,\n        }) >= 0\n      ) {\n        break\n      }\n    }\n\n    if (delta < 0) {\n      if (--index < 0) {\n        break\n      }\n    } else {\n      if (++index >= panels.length) {\n        break\n      }\n    }\n  }\n\n  if (deltaApplied === 0) {\n    return widths\n  }\n\n  pivotPanel = delta < 0 ? panelAfter : panelBefore\n  index = panels.findIndex((panel) => panel.id === pivotPanel.id)\n  nextWidths[index] = widths[index] + deltaApplied\n\n  return nextWidths\n}\n\nexport function getPanelWidth(panels: PanelElement[], id: string, widths: number[]): string {\n  if (panels.length === 1) return '100'\n\n  const index = panels.findIndex((panel) => panel.id === id)\n  const width = widths[index]\n\n  if (width == null) return '0'\n\n  return width.toPrecision(10)\n}\n\nexport function getOffset(\n  event: MouseEvent,\n  handleElement: HTMLDivElement,\n  initialOffset: number = 0,\n  initialHandleElementRect: DOMRect | null = null,\n): number {\n  const pointerOffset = event.clientX\n\n  const rect = initialHandleElementRect || handleElement.getBoundingClientRect()\n  const elementOffset = rect.left\n\n  return pointerOffset - elementOffset - initialOffset\n}\n\nexport function isPanel(element: PanelElement | ResizerElement): element is PanelElement {\n  return element.type === 'panel'\n}\n\nexport function isResizer(element: PanelElement | ResizerElement): element is ResizerElement {\n  return element.type === 'resizer'\n}\n\nexport function getSortedElements(elements: ElementMap): Array<PanelElement | ResizerElement> {\n  return Array.from(elements.values()).sort(({order: a}, {order: b}) => {\n    if (a == null && b == null) return 0\n    if (a == null) return -1\n    if (b == null) return 1\n    return a - b\n  })\n}\n\nexport function validateWidths(\n  panels: PanelElement[],\n  widthsToValidate: number[],\n  containerWidth: number,\n): number[] {\n  // Clamp widths proportionally to total 100\n  const total = widthsToValidate.reduce((total, width) => total + width, 0)\n  const widths = [...widthsToValidate].map((width) => (width / total) * 100)\n\n  let remainingWidth = 0\n\n  for (let index = 0; index < panels.length; index++) {\n    const panel = panels[index]\n    const width = widths[index]\n    const nextWidth = getNextWidth(panel, width, containerWidth)\n    if (width != nextWidth) {\n      remainingWidth += width - nextWidth\n      widths[index] = nextWidth\n    }\n  }\n\n  if (remainingWidth.toFixed(3) !== '0.000') {\n    for (let index = 0; index < panels.length; index++) {\n      const panel = panels[index]\n\n      let {maxWidth, minWidth} = panel\n\n      minWidth = (minWidth / containerWidth) * 100\n      if (maxWidth != null) {\n        maxWidth = (maxWidth / containerWidth) * 100\n      }\n\n      const width = Math.min(\n        maxWidth != null ? maxWidth : 100,\n        Math.max(minWidth, widths[index] + remainingWidth),\n      )\n\n      if (width !== widths[index]) {\n        remainingWidth -= width - widths[index]\n        widths[index] = width\n\n        if (Math.abs(remainingWidth).toFixed(3) === '0.000') {\n          break\n        }\n      }\n    }\n  }\n\n  return widths\n}\n\nexport function getDefaultWidths(panels: PanelElement[]): number[] {\n  let panelsWithoutWidth = panels.length\n  let remainingWidthTotal = 100\n\n  const widthsWithNulls = panels.map((panel) => {\n    if (panel.defaultSize) {\n      remainingWidthTotal = remainingWidthTotal - panel.defaultSize\n      panelsWithoutWidth = panelsWithoutWidth - 1\n      return panel.defaultSize\n    }\n    return null\n  })\n\n  const defaultWidth = remainingWidthTotal / panelsWithoutWidth\n  const widths = widthsWithNulls.map((width) => {\n    if (width === null) return defaultWidth\n    return width\n  })\n\n  return widths\n}\n","// Slightly modified version of react-resizable-panels\n// https://github.com/bvaughn/react-resizable-panels/tree/main/packages/react-resizable-panels\n\nimport {\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n  type CSSProperties,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport type {ElementMap, InitialDragState, PanelElement, PanelsState, ResizerElement} from './types'\nimport {usePanelsStorage} from './usePanelsStorage'\nimport {\n  getDefaultWidths,\n  getNextWidths,\n  getOffset,\n  getPanelWidth,\n  getSortedElements,\n  isPanel,\n  isResizer,\n  validateWidths,\n} from './util'\n\nconst PanelsWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  overflow: hidden;\n  width: 100%;\n`\n\nexport const Panels: FunctionComponent<PropsWithChildren> = function ({children}) {\n  const panelsEl = useRef<HTMLDivElement | null>(null)\n\n  const [elements, setElements] = useState<ElementMap>(new Map())\n\n  const panels = useMemo(() => getSortedElements(elements).filter(isPanel), [elements])\n\n  const [widths, setWidths] = useState<number[]>([])\n  const [activeResizer, setActiveResizer] = useState<string | null>(null)\n\n  const panelsRef = useRef<PanelsState>({\n    elements,\n    panels,\n    widths,\n  })\n\n  const getPanelStyle = useCallback(\n    (id: string): CSSProperties => {\n      return {\n        flexGrow: getPanelWidth(panels, id, widths),\n        pointerEvents: activeResizer === null ? undefined : 'none',\n      }\n    },\n    [activeResizer, panels, widths],\n  )\n\n  const registerElement = useCallback((id: string, data: PanelElement | ResizerElement) => {\n    setElements((prev) => {\n      if (prev.has(id)) return prev\n      const next = new Map(prev)\n      next.set(id, data)\n      return next\n    })\n  }, [])\n  const unregisterElement = useCallback((id: string) => {\n    setElements((prev) => {\n      if (!prev.has(id)) return prev\n      const next = new Map(prev)\n      next.delete(id)\n      return next\n    })\n  }, [])\n\n  const dragRef = useRef<InitialDragState>({\n    containerWidth: window.innerWidth,\n    dragOffset: 0,\n    panelAfter: null,\n    panelBefore: null,\n    resizerIndex: -1,\n    resizerRect: null,\n    startX: 0,\n    widths: [],\n  })\n\n  const startDragging = useCallback(\n    (id: string, event: MouseEvent) => {\n      const elementsArr = getSortedElements(elements)\n      const index = elementsArr.findIndex((el) => el.id === id)\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      dragRef.current = {\n        resizerIndex: index,\n        panelBefore: elementsArr.reduce(\n          (acc, el, i) => (isPanel(el) && i < index ? el : acc),\n          null as PanelElement | null,\n        ),\n        panelAfter: elementsArr.reduce(\n          (acc, el, i) => (acc === null && isPanel(el) && i > index ? el : acc),\n          null as PanelElement | null,\n        ),\n        containerWidth: window.innerWidth,\n        startX: event.pageX,\n        dragOffset: getOffset(event, resizeElement),\n        resizerRect: resizeElement.getBoundingClientRect(),\n        widths: panelsRef.current.widths,\n      }\n\n      setActiveResizer(id)\n    },\n    [elements],\n  )\n\n  const stopDragging = useCallback(() => {\n    setActiveResizer(null)\n  }, [])\n\n  const drag = useCallback(\n    (id: string, event: MouseEvent) => {\n      event.preventDefault()\n      event.stopPropagation()\n\n      const {containerWidth, dragOffset, panelBefore, panelAfter, resizerRect} = dragRef.current\n\n      if (panelBefore == null || panelAfter == null) {\n        return\n      }\n\n      const resizer = elements.get(id)\n      if (!resizer || !isResizer(resizer)) return\n      const resizeElement = resizer.el.current\n      if (!resizeElement) return\n\n      const offset = getOffset(event, resizeElement, dragOffset, resizerRect)\n\n      if (offset === 0) {\n        return\n      }\n\n      const {widths: prevWidths} = panelsRef.current\n      const rect = panelsEl.current!.getBoundingClientRect()\n      const delta = (offset / rect.width) * 100\n\n      const nextWidths = getNextWidths(\n        delta,\n        containerWidth,\n        panelBefore,\n        panelAfter,\n        panelsRef.current,\n        dragRef.current,\n      )\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    },\n    [elements],\n  )\n\n  // For setting the panels state\n  useLayoutEffect(() => {\n    panelsRef.current.elements = elements\n    panelsRef.current.panels = panels\n    panelsRef.current.widths = widths\n  }, [elements, panels, widths])\n\n  const storage = usePanelsStorage()\n\n  // For setting default sizing when panels are updated\n  useLayoutEffect(() => {\n    const {widths} = panelsRef.current\n\n    if (widths.length === panels.length) {\n      return\n    }\n\n    const storedWidths = storage.get(panels)\n\n    if (storedWidths) {\n      const validatedStoredWidths = validateWidths(panels, storedWidths, window.innerWidth)\n      setWidths(validatedStoredWidths)\n      return\n    }\n\n    const defaultWidths = getDefaultWidths(panels)\n    setWidths(defaultWidths)\n  }, [storage, panels])\n\n  // For storing current widths in localStorage\n  useEffect(() => {\n    if (!widths.length) return\n    storage.setDebounced(panels, widths)\n  }, [storage, panels, widths])\n\n  useLayoutEffect(() => {\n    const resizeObserver = new ResizeObserver(() => {\n      const {panels, widths: prevWidths} = panelsRef.current\n\n      const nextWidths = validateWidths(panels, prevWidths, window.innerWidth)\n\n      const widthsChanged = prevWidths.some((prevWidth, i) => prevWidth !== nextWidths[i])\n      if (widthsChanged) {\n        setWidths(nextWidths)\n      }\n    })\n\n    resizeObserver.observe(panelsEl.current!)\n\n    return () => {\n      resizeObserver.disconnect()\n    }\n  }, [])\n\n  const context = useMemo(\n    () => ({\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    }),\n    [\n      activeResizer,\n      drag,\n      getPanelStyle,\n      registerElement,\n      startDragging,\n      stopDragging,\n      unregisterElement,\n    ],\n  )\n\n  return (\n    <PanelsContext.Provider value={context}>\n      <PanelsWrapper ref={panelsEl}>{children}</PanelsWrapper>\n    </PanelsContext.Provider>\n  )\n}\n","import {Box, Button, Card, Container, Flex, Inline, Stack, Text, type CardProps} from '@sanity/ui'\nimport type {ReactElement, ReactNode} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\n\nexport function ErrorCard(\n  props: {\n    children?: ReactNode\n    message: string\n    onRetry?: () => void\n    onContinueAnyway?: () => void\n  } & CardProps,\n): ReactElement {\n  const {children, message, onRetry, onContinueAnyway, ...restProps} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const retryButton = (\n    <Button fontSize={1} mode=\"ghost\" onClick={onRetry} text={t('error-card.retry-button.text')} />\n  )\n  const continueAnywayButton = (\n    <Button\n      fontSize={1}\n      mode=\"ghost\"\n      tone=\"critical\"\n      onClick={onContinueAnyway}\n      text={t('error-card.continue-button.text')}\n    />\n  )\n\n  return (\n    <Card height=\"fill\" {...restProps}>\n      <Flex align=\"center\" height=\"fill\" justify=\"center\">\n        <Container padding={4} sizing=\"border\" width={0}>\n          <Stack space={4}>\n            <Stack space={3}>\n              <Text size={1} weight=\"semibold\">\n                {t('error-card.title')}\n              </Text>\n              <Text muted size={1}>\n                {message}\n              </Text>\n            </Stack>\n\n            {children}\n\n            {onRetry && onContinueAnyway ? (\n              <Inline space={2}>\n                {retryButton}\n                {continueAnywayButton}\n              </Inline>\n            ) : onRetry ? (\n              <Box>{retryButton}</Box>\n            ) : onContinueAnyway ? (\n              <Box>{continueAnywayButton}</Box>\n            ) : null}\n          </Stack>\n        </Container>\n      </Flex>\n    </Card>\n  )\n}\n","/* eslint-disable no-console */\n\nimport {forwardRef, useCallback, useMemo, type PropsWithChildren, type ReactElement} from 'react'\nimport {StateLink, useRouter} from 'sanity/router'\nimport {\n  getPublishedId,\n  PaneRouterContext,\n  useUnique,\n  type BackLinkProps,\n  type PaneRouterContextValue,\n  type ReferenceChildLinkProps,\n} from '../internals'\nimport type {\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\n\nfunction encodeQueryString(params: Record<string, unknown> = {}): string {\n  const parts = Object.entries(params)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&')\n\n  return parts.length ? `?${parts}` : ''\n}\n\nfunction resolveQueryStringFromParams(nextParams: Record<string, string | undefined>) {\n  const allowed = [\n    'comment',\n    'inspect',\n    'instruction',\n    'pathKey',\n    'rev',\n    'since',\n    'template',\n    'view',\n  ] satisfies Array<keyof PresentationParams> as string[]\n\n  const safeNextParams = Object.entries(nextParams)\n    .filter(([key]) => allowed.includes(key))\n    .reduce((obj, [key, value]) => {\n      if (value == undefined) return obj\n      return {...obj, [key]: value}\n    }, {})\n\n  return encodeQueryString(safeNextParams)\n}\n\nconst BackLink = forwardRef(function BackLink(\n  props: BackLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {searchParams, ...restProps} = props\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        type: undefined,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nconst ReferenceChildLink = forwardRef(function ReferenceChildLink(\n  props: ReferenceChildLinkProps & {searchParams: PresentationSearchParams},\n  ref: React.ForwardedRef<HTMLAnchorElement>,\n) {\n  const {\n    documentId,\n    documentType,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    parentRefPath,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    template,\n    searchParams,\n    ...restProps\n  } = props\n\n  return (\n    <StateLink\n      {...restProps}\n      ref={ref}\n      state={{\n        id: documentId,\n        type: documentType,\n        _searchParams: Object.entries(searchParams),\n      }}\n      title={undefined}\n    />\n  )\n})\n\nexport function PresentationPaneRouterProvider(\n  props: PropsWithChildren<{\n    onStructureParams: (params: StructureDocumentPaneParams) => void\n    refs?: {_id: string; _type: string}[]\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>,\n): ReactElement {\n  const {children, onStructureParams, structureParams, searchParams, refs} = props\n\n  const {state: routerState, resolvePathFromState} = useRouter()\n\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const createPathWithParams: PaneRouterContextValue['createPathWithParams'] = useCallback(\n    (nextParams) => {\n      const path = resolvePathFromState(routerState)\n      const qs = resolveQueryStringFromParams({\n        ...routerSearchParams,\n        ...nextParams,\n      })\n      return `${path}${qs}`\n    },\n    [resolvePathFromState, routerSearchParams, routerState],\n  )\n\n  const context: PaneRouterContextValue = useMemo(() => {\n    return {\n      index: 0,\n      groupIndex: 0,\n      siblingIndex: 0,\n      payload: {},\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      params: structureParams as any,\n      hasGroupSiblings: false,\n      groupLength: 1,\n      routerPanesState: [],\n      ChildLink: (childLinkProps) => {\n        const {childId, ...restProps} = childLinkProps\n        const ref = refs?.find((r) => r._id === childId || getPublishedId(r._id) === childId)\n        if (ref) {\n          return (\n            <StateLink\n              {...restProps}\n              state={{\n                id: childId,\n                type: ref._type,\n                _searchParams: Object.entries(searchParams),\n              }}\n            />\n          )\n        }\n\n        return <div {...restProps} />\n      },\n      BackLink: (backLinkProps) => <BackLink {...backLinkProps} searchParams={searchParams} />,\n      ReferenceChildLink: (childLinkProps) => (\n        <ReferenceChildLink {...childLinkProps} searchParams={searchParams} />\n      ),\n      ParameterizedLink: () => <>ParameterizedLink</>,\n      closeCurrentAndAfter: () => {\n        console.warn('closeCurrentAndAfter')\n      },\n      handleEditReference: (options) => {\n        console.warn('handleEditReference', options)\n      },\n      replaceCurrent: (pane) => {\n        console.warn('replaceCurrent', pane)\n      },\n      closeCurrent: () => {\n        console.warn('closeCurrent')\n      },\n      duplicateCurrent: (pane) => {\n        console.warn('duplicateCurrent', pane)\n      },\n      setView: (viewId) => {\n        console.warn('setView', viewId)\n      },\n      setParams: (nextParams) => {\n        // eslint-disable-next-line no-warning-comments\n        // @todo set inspect param to undefined manually as param is missing from object when closing inspector\n        onStructureParams({\n          ...nextParams,\n          inspect: nextParams['inspect'] ?? undefined,\n        } as StructureDocumentPaneParams)\n      },\n      setPayload: (payload) => {\n        console.warn('setPayload', payload)\n      },\n      navigateIntent: (intentName, intentParams, options) => {\n        console.warn('navigateIntent', intentName, intentParams, options)\n      },\n      createPathWithParams,\n    }\n  }, [createPathWithParams, onStructureParams, refs, searchParams, structureParams])\n\n  return <PaneRouterContext.Provider value={context}>{children}</PaneRouterContext.Provider>\n}\n","import {Card, Code, ErrorBoundary, Flex, Label, Stack} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type ErrorInfo, type ReactElement} from 'react'\nimport {useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPublishedId,\n  PaneLayout,\n  DocumentListPane as StructureDocumentListPane,\n  StructureToolProvider,\n  type PaneNode,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst RootLayout = styled(PaneLayout)`\n  height: 100%;\n`\n\nconst Root = styled(Flex)`\n  & > div {\n    min-width: none !important;\n    max-width: none !important;\n  }\n`\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentListPane(props: {\n  mainDocumentState?: MainDocumentState\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  refs: {_id: string; _type: string}[]\n}): ReactElement {\n  const {mainDocumentState, onStructureParams, searchParams, refs} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const ids = useMemo(\n    () =>\n      refs\n        .filter((r) => getPublishedId(r._id) !== mainDocumentState?.document?._id)\n        .map((r) => r._id),\n    [mainDocumentState, refs],\n  )\n\n  const pane: Extract<PaneNode, {type: 'documentList'}> = useMemo(\n    () => ({\n      id: '$root',\n      options: {\n        filter: '_id in $ids',\n        params: {ids},\n        // defaultOrdering: [{field: '_updatedAt', direction: 'desc'}],\n      },\n      schemaTypeName: '',\n      title: t('document-list-pane.document-list.title'),\n      type: 'documentList',\n    }),\n    [ids, t],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  const [structureParams] = useState(() => ({}))\n\n  // Reset error state when `refs` value schanges\n  useEffect(() => setErrorParams(null), [refs])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-list-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <RootLayout>\n        <StructureToolProvider>\n          <PresentationPaneRouterProvider\n            onStructureParams={onStructureParams}\n            structureParams={structureParams}\n            searchParams={searchParams}\n            refs={refs}\n          >\n            <Root direction=\"column\" flex={1}>\n              <StructureDocumentListPane index={0} itemId=\"$root\" pane={pane} paneKey=\"$root\" />\n            </Root>\n          </PresentationPaneRouterProvider>\n        </StructureToolProvider>\n      </RootLayout>\n    </ErrorBoundary>\n  )\n}\n","import {Card, Code, ErrorBoundary, Label, Stack} from '@sanity/ui'\nimport {\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n  type ErrorInfo,\n  type ReactElement,\n} from 'react'\nimport {useTranslation, type Path} from 'sanity'\nimport {styled} from 'styled-components'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  decodeJsonParams,\n  PaneLayout,\n  DocumentPane as StructureDocumentPane,\n  type DocumentPaneNode,\n} from '../internals'\nimport {PresentationSpinner} from '../PresentationSpinner'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {PresentationPaneRouterProvider} from './PresentationPaneRouterProvider'\n\nconst WrappedCode = styled(Code)`\n  white-space: pre-wrap;\n`\n\nexport function DocumentPane(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  const {template, templateParams} = structureParams\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {devMode} = usePresentationTool()\n\n  const paneDocumentNode: DocumentPaneNode = useMemo(\n    () => ({\n      id: documentId,\n      options: {\n        id: documentId,\n        type: documentType,\n        template,\n        templateParameters: decodeJsonParams(templateParams),\n      },\n      title: '',\n      type: 'document',\n    }),\n    [documentId, documentType, template, templateParams],\n  )\n\n  const [errorParams, setErrorParams] = useState<{\n    info: ErrorInfo\n    error: Error\n  } | null>(null)\n\n  const handleRetry = useCallback(() => setErrorParams(null), [])\n\n  // Reset error state when parameters change\n  useEffect(() => {\n    setErrorParams(null)\n  }, [documentId, documentType, structureParams])\n\n  if (errorParams) {\n    return (\n      <ErrorCard flex={1} message={t('document-pane.error.text')} onRetry={handleRetry}>\n        {devMode && (\n          // show runtime error message in dev mode\n          <Card overflow=\"auto\" padding={3} radius={2} tone=\"critical\">\n            <Stack space={3}>\n              <Label muted size={0}>\n                {t('presentation-error.label')}\n              </Label>\n              <WrappedCode size={1}>{errorParams.error.message}</WrappedCode>\n            </Stack>\n          </Card>\n        )}\n      </ErrorCard>\n    )\n  }\n\n  return (\n    <ErrorBoundary onCatch={setErrorParams}>\n      <PaneLayout style={{height: '100%'}}>\n        <PresentationPaneRouterProvider\n          searchParams={searchParams}\n          onStructureParams={onStructureParams}\n          structureParams={structureParams}\n        >\n          <Suspense fallback={<PresentationSpinner />}>\n            <StructureDocumentPane\n              paneKey=\"document\"\n              index={1}\n              itemId=\"document\"\n              pane={paneDocumentNode}\n              onFocusPath={onFocusPath}\n            />\n          </Suspense>\n        </PresentationPaneRouterProvider>\n      </PaneLayout>\n    </ErrorBoundary>\n  )\n}\n","import {type ReactElement} from 'react'\nimport {type Path} from 'sanity'\nimport {StructureToolProvider} from '../internals'\nimport type {PresentationSearchParams, StructureDocumentPaneParams} from '../types'\nimport {DocumentPane} from './DocumentPane'\n\nexport function DocumentPanel(props: {\n  documentId: string\n  documentType: string\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n}): ReactElement {\n  const {documentId, documentType, onFocusPath, onStructureParams, searchParams, structureParams} =\n    props\n  return (\n    <StructureToolProvider>\n      <DocumentPane\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </StructureToolProvider>\n  )\n}\n","import {type SchemaType} from '@sanity/types'\nimport {useEffect, useState} from 'react'\nimport {\n  getPreviewStateObservable,\n  useDocumentPreviewStore,\n  type PreviewValue,\n  type SanityDocument,\n} from '../internals'\n\ninterface PreviewState {\n  isLoading?: boolean\n  draft?: PreviewValue | Partial<SanityDocument> | null\n  published?: PreviewValue | Partial<SanityDocument> | null\n}\n\nexport default function usePreviewState(documentId: string, schemaType?: SchemaType): PreviewState {\n  const documentPreviewStore = useDocumentPreviewStore()\n  const [preview, setPreview] = useState<PreviewState>({})\n\n  useEffect(() => {\n    if (!schemaType) {\n      return undefined\n    }\n    const subscription = getPreviewStateObservable(\n      documentPreviewStore,\n      schemaType,\n      documentId,\n      '',\n    ).subscribe((state) => {\n      setPreview(state)\n    })\n\n    return () => {\n      subscription?.unsubscribe()\n    }\n  }, [documentPreviewStore, schemaType, documentId])\n\n  return preview\n}\n","import {WarningOutlineIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {useCallback, useMemo, type HTMLProps, type ReactElement} from 'react'\nimport {StateLink} from 'sanity/router'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  getPreviewValueWithFallback,\n  PreviewCard,\n  SanityDefaultPreview,\n  Translate,\n  useSchema,\n  useTranslation,\n  type Path,\n  type SanityDocument,\n} from '../internals'\nimport type {\n  MainDocumentState,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from '../types'\nimport {DocumentListPane} from './DocumentListPane'\nimport {DocumentPanel} from './DocumentPanel'\nimport usePreviewState from './usePreviewState'\n\nexport function ContentEditor(props: {\n  documentId?: string\n  documentType?: string\n  mainDocumentState?: MainDocumentState\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  refs: {_id: string; _type: string}[]\n  structureParams: StructureDocumentPaneParams\n  searchParams: PresentationSearchParams\n}): ReactElement {\n  const {\n    documentId,\n    documentType,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    refs,\n    searchParams,\n    structureParams,\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const schema = useSchema()\n\n  const MainDocumentLink = useCallback(\n    (props: HTMLProps<HTMLAnchorElement>) => {\n      return (\n        <StateLink\n          {...props}\n          state={{\n            id: mainDocumentState?.document?._id,\n            type: mainDocumentState?.document?._type,\n            _searchParams: Object.entries(searchParams),\n          }}\n        />\n      )\n    },\n    [mainDocumentState, searchParams],\n  )\n\n  const schemaType = useMemo(\n    () => schema.get(mainDocumentState?.document?._type || 'shoe')!,\n    [mainDocumentState, schema],\n  )\n\n  const previewState = usePreviewState(mainDocumentState?.document?._id || '', schemaType)\n\n  const preview = useMemo(() => {\n    if (!mainDocumentState?.document) return null\n\n    return (\n      <SanityDefaultPreview\n        {...getPreviewValueWithFallback({\n          value: mainDocumentState!.document! as SanityDocument,\n          published: previewState.published,\n          draft: previewState.draft,\n        })}\n        schemaType={schemaType}\n        status={\n          <Card padding={1} radius={2} shadow={1}>\n            <Text muted size={0} weight=\"medium\">\n              {t('main-document.label')}\n            </Text>\n          </Card>\n        }\n      />\n    )\n  }, [mainDocumentState, schemaType, t, previewState])\n\n  if (documentId && documentType) {\n    return (\n      <DocumentPanel\n        documentId={documentId}\n        documentType={documentType}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    )\n  }\n\n  return (\n    <Flex direction=\"column\" flex={1} height=\"fill\">\n      {mainDocumentState && (\n        <Card padding={3} tone={mainDocumentState.document ? 'inherit' : 'caution'}>\n          {mainDocumentState.document ? (\n            <PreviewCard\n              __unstable_focusRing\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              as={MainDocumentLink as any}\n              data-as=\"a\"\n              radius={2}\n              sizing=\"border\"\n              tone=\"inherit\"\n            >\n              {preview}\n            </PreviewCard>\n          ) : (\n            <Card padding={2} radius={2} tone=\"inherit\">\n              <Flex gap={3}>\n                <Box flex=\"none\">\n                  <Text size={1}>\n                    <WarningOutlineIcon />\n                  </Text>\n                </Box>\n                <Box flex={1}>\n                  <Text size={1}>\n                    <Translate\n                      t={t}\n                      i18nKey=\"main-document.missing.text\"\n                      components={{Code: 'code'}}\n                      values={{path: mainDocumentState.path}}\n                    />\n                  </Text>\n                </Box>\n              </Flex>\n            </Card>\n          )}\n        </Card>\n      )}\n\n      <DocumentListPane\n        mainDocumentState={mainDocumentState}\n        onStructureParams={onStructureParams}\n        searchParams={searchParams}\n        refs={refs}\n      />\n    </Flex>\n  )\n}\n","import validate from './validate.js';\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  //\n  // Note to future-self: No, you can't remove the `toLowerCase()` call.\n  // REF: https://github.com/uuidjs/uuid/pull/677#issuecomment-1757351351\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\nfunction stringify(arr, offset = 0) {\n  var uuid = unsafeStringify(arr, offset);\n  // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n  return uuid;\n}\nexport default stringify;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\n\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n  return getRandomValues(rnds8);\n}","var randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};","import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    offset = offset || 0;\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n    return buf;\n  }\n  return unsafeStringify(rnds);\n}\nexport default v4;","import {useState} from 'react'\nimport {v4 as uuid} from 'uuid'\n\nexport function usePanelId(id?: string): string {\n  const [panelId] = useState(() => id || uuid())\n  return panelId\n}\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  type FunctionComponent,\n  type MouseEvent as ReactMouseEvent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport {PanelsContext} from './PanelsContext'\nimport {usePanelId} from './usePanelId'\n\nconst Resizer = styled.div`\n  position: relative;\n`\nconst ResizerInner = styled.div<{\n  $disabled: boolean\n}>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: -5px;\n  width: 9px;\n  z-index: 10;\n  cursor: ${({$disabled}) => ($disabled ? 'auto' : 'ew-resize')};\n\n  /* Border */\n  & > span:nth-child(1) {\n    display: block;\n    border-left: 1px solid var(--card-border-color);\n    position: absolute;\n    top: 0;\n    left: 4px;\n    bottom: 0;\n    transition: opacity 200ms;\n  }\n\n  ${({$disabled}) =>\n    !$disabled &&\n    `\n    /* Hover effect */\n    & > span:nth-child(2) {\n      display: block;\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 9px;\n      bottom: 0;\n      background-color: var(--card-border-color);\n      opacity: 0;\n      transition: opacity 150ms;\n    }\n\n    @media (hover: hover) {\n      &:hover > span:nth-child(2) {\n        opacity: 0.2;\n      }\n    }\n  `}\n`\n\nexport const PanelResizer: FunctionComponent<{\n  id?: string\n  order: number\n  disabled?: boolean\n}> = function ({id: propId, order, disabled = false}) {\n  const el = useRef<HTMLDivElement>(null)\n\n  const context = useContext(PanelsContext)\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const id = usePanelId(propId)\n\n  const {activeResizer, drag, startDragging, stopDragging, registerElement, unregisterElement} =\n    context\n\n  const isDragging = activeResizer === id\n\n  if (context === null) {\n    throw Error(`Panel components must be rendered within a PanelGroup container`)\n  }\n\n  const onMouseDown = useCallback(\n    (event: ReactMouseEvent) => {\n      startDragging(id, event.nativeEvent)\n    },\n    [id, startDragging],\n  )\n\n  const onDrag = useCallback(\n    (e: MouseEvent) => {\n      drag(id, e)\n    },\n    [id, drag],\n  )\n\n  const onDragStop = useCallback(() => {\n    el.current!.blur()\n    stopDragging()\n  }, [stopDragging])\n\n  useEffect(() => {\n    if (!isDragging || disabled) return\n\n    // Set styles to prevent text selection and force an ew-resize cursor whilst\n    // dragging. Return a reset callback so we can revert to any values that\n    // might have been present before dragging started.\n    function setDocumentStyles() {\n      const bodyStyle = document.body.style\n      const documentStyle = document.documentElement.style\n\n      const {cursor} = documentStyle\n      const {userSelect} = bodyStyle\n\n      documentStyle.cursor = 'ew-resize'\n      bodyStyle.userSelect = 'none'\n\n      return () => {\n        if (cursor) documentStyle.cursor = cursor\n        else documentStyle.removeProperty('cursor')\n\n        if (userSelect) bodyStyle.userSelect = userSelect\n        else bodyStyle.removeProperty('user-select')\n      }\n    }\n\n    const resetDocumentStyles = setDocumentStyles()\n    window.addEventListener('mousemove', onDrag)\n    window.addEventListener('mouseup', onDragStop)\n    window.addEventListener('contextmenu', onDragStop)\n\n    return () => {\n      resetDocumentStyles()\n      window.removeEventListener('mousemove', onDrag)\n      window.removeEventListener('mouseup', onDragStop)\n      window.removeEventListener('contextmenu', onDragStop)\n    }\n  }, [disabled, isDragging, onDrag, onDragStop])\n\n  useLayoutEffect(() => {\n    registerElement(id, {id, order, type: 'resizer', el})\n\n    return () => {\n      unregisterElement(id)\n    }\n  }, [id, order, registerElement, unregisterElement])\n\n  return (\n    <Resizer onMouseDown={onMouseDown} ref={el}>\n      <ResizerInner $disabled={disabled}>\n        <span />\n        <span />\n      </ResizerInner>\n    </Resizer>\n  )\n}\n","import {\n  type Dispatch,\n  type FunctionComponent,\n  type PropsWithChildren,\n  type SetStateAction,\n} from 'react'\nimport type {Path, SanityDocument} from 'sanity'\nimport {ContentEditor} from './editor/ContentEditor'\nimport {CommentsIntentProvider, type CommentIntentGetter} from './internals'\nimport {DisplayedDocumentBroadcasterProvider} from './loader/DisplayedDocumentBroadcaster'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {\n  MainDocumentState,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport interface PresentationContentProps {\n  documentId: PresentationParams['id']\n  documentsOnPage: {_id: string; _type: string}[]\n  documentType: PresentationParams['type']\n  getCommentIntent: CommentIntentGetter\n  mainDocumentState: MainDocumentState | undefined\n  onFocusPath: (path: Path) => void\n  onStructureParams: (params: StructureDocumentPaneParams) => void\n  searchParams: PresentationSearchParams\n  setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  structureParams: StructureDocumentPaneParams\n}\n\nconst PresentationContentWrapper: FunctionComponent<\n  PropsWithChildren<{\n    documentId?: string\n    getCommentIntent: CommentIntentGetter\n    setDisplayedDocument: Dispatch<SetStateAction<Partial<SanityDocument> | null | undefined>>\n  }>\n> = (props) => {\n  const {documentId, setDisplayedDocument, getCommentIntent} = props\n  return (\n    <>\n      <PanelResizer order={4} />\n      <Panel id=\"content\" minWidth={325} order={5}>\n        <DisplayedDocumentBroadcasterProvider\n          documentId={documentId}\n          setDisplayedDocument={setDisplayedDocument}\n        >\n          <CommentsIntentProvider getIntent={getCommentIntent}>\n            {props.children}\n          </CommentsIntentProvider>\n        </DisplayedDocumentBroadcasterProvider>\n      </Panel>\n    </>\n  )\n}\n\nexport const PresentationContent: FunctionComponent<PresentationContentProps> = (props) => {\n  const {\n    documentId,\n    documentsOnPage,\n    documentType,\n    getCommentIntent,\n    mainDocumentState,\n    onFocusPath,\n    onStructureParams,\n    searchParams,\n    setDisplayedDocument,\n    structureParams,\n  } = props\n\n  return (\n    <PresentationContentWrapper\n      documentId={documentId}\n      getCommentIntent={getCommentIntent}\n      setDisplayedDocument={setDisplayedDocument}\n    >\n      <ContentEditor\n        documentId={documentId}\n        documentType={documentType}\n        mainDocumentState={mainDocumentState}\n        onFocusPath={onFocusPath}\n        onStructureParams={onStructureParams}\n        refs={documentsOnPage}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      />\n    </PresentationContentWrapper>\n  )\n}\n","import {useCallback, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {\n  PresentationNavigateContext,\n  type PresentationNavigateContextValue,\n} from './PresentationNavigateContext'\nimport type {PresentationNavigate} from './types'\n\nexport const PresentationNavigateProvider: FunctionComponent<\n  PropsWithChildren<{\n    navigate: PresentationNavigate\n  }>\n> = function (props) {\n  const {children, navigate: _navigate} = props\n\n  const navigate = useCallback<PresentationNavigateContextValue>(\n    (preview, document = undefined) => {\n      _navigate(document || {}, preview ? {preview} : {})\n    },\n    [_navigate],\n  )\n\n  return (\n    <PresentationNavigateContext.Provider value={navigate}>\n      {children}\n    </PresentationNavigateContext.Provider>\n  )\n}\n","import {useEffect, useState, type Dispatch, type SetStateAction} from 'react'\n\nexport function useLocalState<T>(key: string, defaultValue: T): [T, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState<T>(() =>\n    JSON.parse(localStorage.getItem(key) ?? JSON.stringify(defaultValue)),\n  )\n\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value))\n  }, [key, value])\n\n  return [value, setValue]\n}\n","import {memo, useCallback, useMemo} from 'react'\nimport {Panel} from './panels/Panel'\nimport {PanelResizer} from './panels/PanelResizer'\nimport type {NavigatorOptions} from './types'\nimport {useLocalState} from './useLocalState'\n\n/** @internal */\nexport interface UsePresentationNavigatorProps {\n  unstable_navigator?: NavigatorOptions\n}\n\n/** @internal */\nexport interface UsePresentationNavigatorState {\n  navigatorEnabled: boolean\n  toggleNavigator: (() => void) | undefined\n}\n\n/** @internal */\nexport function usePresentationNavigator(\n  props: UsePresentationNavigatorProps,\n): [UsePresentationNavigatorState, () => JSX.Element] {\n  const {unstable_navigator} = props\n\n  const navigatorProvided = !!unstable_navigator?.component\n  const [_navigatorEnabled, setNavigatorEnabled] = useLocalState<boolean>(\n    'presentation/navigator',\n    navigatorProvided,\n  )\n  const navigatorEnabled = navigatorProvided ? _navigatorEnabled : false\n  const toggleNavigator = useMemo(() => {\n    if (!navigatorProvided) return undefined\n\n    return () => setNavigatorEnabled((enabled) => !enabled)\n  }, [navigatorProvided, setNavigatorEnabled])\n\n  const Component = useCallback(\n    function PresentationNavigator() {\n      return <>{navigatorEnabled && <Navigator {...unstable_navigator!} />}</>\n    },\n    [navigatorEnabled, unstable_navigator],\n  )\n\n  return [{navigatorEnabled, toggleNavigator}, Component]\n}\n\nfunction NavigatorComponent(props: NavigatorOptions) {\n  const {minWidth, maxWidth, component: NavigatorComponent} = props\n  const navigatorDisabled = minWidth != null && maxWidth != null && minWidth === maxWidth\n  return (\n    <>\n      <Panel id=\"navigator\" minWidth={minWidth} maxWidth={maxWidth} order={1}>\n        <NavigatorComponent />\n      </Panel>\n      <PanelResizer order={2} disabled={navigatorDisabled} />\n    </>\n  )\n}\nconst Navigator = memo(NavigatorComponent)\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationParamsContext} from './PresentationParamsContext'\nimport type {PresentationParams} from './types'\n\nexport const PresentationParamsProvider: FunctionComponent<\n  PropsWithChildren<{\n    params: PresentationParams\n  }>\n> = function (props) {\n  const {children, params} = props\n\n  const context = useMemo<PresentationParams>(() => params, [params])\n\n  return (\n    <PresentationParamsContext.Provider value={context}>\n      {children}\n    </PresentationParamsContext.Provider>\n  )\n}\n","import {useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport {PresentationContext, type PresentationContextValue} from './PresentationContext'\nimport type {\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nexport const PresentationProvider: FunctionComponent<\n  PropsWithChildren<{\n    devMode: boolean\n    name: string\n    navigate: PresentationNavigate\n    params: PresentationParams\n    searchParams: PresentationSearchParams\n    structureParams: StructureDocumentPaneParams\n  }>\n> = function (props) {\n  const {children, devMode, name, navigate, params, searchParams, structureParams} = props\n\n  const context = useMemo<PresentationContextValue>(\n    () => ({\n      devMode,\n      name,\n      navigate,\n      params,\n      searchParams,\n      structureParams,\n    }),\n    [devMode, name, navigate, params, searchParams, structureParams],\n  )\n\n  return <PresentationContext.Provider value={context}>{children}</PresentationContext.Provider>\n}\n","import {Box} from '@sanity/ui'\nimport {motion, type VariantLabels, type Variants} from 'framer-motion'\nimport {forwardRef, useId, type ReactEventHandler} from 'react'\nimport {styled} from 'styled-components'\n\nconst IFrameElement = motion(styled.iframe`\n  box-shadow: 0 0 0 1px var(--card-border-color);\n  border: 0;\n  max-height: 100%;\n  width: 100%;\n  view-transition-class: presentation-tool-iframe;\n`)\n\nconst IFrameOverlay = styled(Box)`\n  position: absolute;\n  inset: 0;\n  background: transparent;\n`\n\ninterface IFrameProps {\n  animate: VariantLabels\n  initial: VariantLabels\n  onLoad: ReactEventHandler<HTMLIFrameElement>\n  preventClick: boolean\n  src: string\n  variants: Variants\n  style: React.CSSProperties\n}\n\nexport const IFrame = forwardRef<HTMLIFrameElement, IFrameProps>(function IFrame(props, ref) {\n  const {animate, initial, onLoad, preventClick, src, variants, style} = props\n  const id = useId()\n\n  return (\n    <>\n      <IFrameElement\n        style={{\n          ...style,\n          // useId() guarantees that the ID will be unique, even if we add support for multiple iframe instances,\n          // while `view-transition-class: presentation-tool-iframe` provides userland a way to customize the transition with CSS if they wish\n          viewTransitionName: `presentation-tool-iframe-${id.replace(/[^a-zA-Z0-9-_]/g, '_')}`,\n        }}\n        animate={animate}\n        initial={initial}\n        onLoad={onLoad}\n        ref={ref}\n        src={src}\n        variants={variants}\n      />\n      {preventClick && <IFrameOverlay />}\n    </>\n  )\n})\n","import {LaunchIcon} from '@sanity/icons'\nimport {Button, Text, Tooltip} from '@sanity/ui'\nimport {useCallback} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\n/** @internal */\nexport function OpenPreviewButton(\n  props: Pick<PreviewProps, 'openPopup'> & {\n    previewLocationOrigin: string\n    previewLocationRoute: string\n  },\n): React.ReactNode {\n  const {openPopup, previewLocationOrigin, previewLocationRoute} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const handleOpenPopup = useCallback(\n    (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => {\n      event.preventDefault()\n      openPopup(event.currentTarget.href)\n    },\n    [openPopup],\n  )\n\n  return (\n    <Tooltip\n      animate\n      content={<Text size={1}>{t('share-url.menu-item.open.text')}</Text>}\n      fallbackPlacements={['bottom-start']}\n      padding={2}\n      placement=\"bottom\"\n      portal\n    >\n      <Button\n        as=\"a\"\n        aria-label={t('share-url.menu-item.open.text')}\n        fontSize={1}\n        icon={LaunchIcon}\n        mode=\"bleed\"\n        padding={2}\n        href={`${previewLocationOrigin}${previewLocationRoute}`}\n        // @ts-expect-error the `as=\"a\"` prop isn't enough to change the type of event.target from <div> to <a>\n        onClick={handleOpenPopup}\n        rel=\"opener\"\n        target=\"_blank\"\n      />\n    </Tooltip>\n  )\n}\n","import {ResetIcon} from '@sanity/icons'\nimport {TextInput, type TextInputClearButtonProps} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type ChangeEvent,\n  type FunctionComponent,\n  type KeyboardEvent,\n  type ReactNode,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {useActiveWorkspace} from '../internals'\n\nexport const PreviewLocationInput: FunctionComponent<{\n  fontSize?: number\n  onChange: (value: string) => void\n  origin: string\n  padding?: number\n  prefix?: ReactNode\n  suffix?: ReactNode\n  value: string\n}> = function (props) {\n  const {fontSize = 1, onChange, origin, padding = 3, prefix, suffix, value} = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {basePath = '/'} = useActiveWorkspace()?.activeWorkspace || {}\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n  const [sessionValue, setSessionValue] = useState<string | undefined>(undefined)\n  const [customValidity, setCustomValidity] = useState<string | undefined>(undefined)\n\n  const handleChange = useCallback((event: ChangeEvent<HTMLInputElement>) => {\n    setSessionValue(event.currentTarget.value)\n  }, [])\n\n  const handleKeyDown = useCallback(\n    (event: KeyboardEvent<HTMLInputElement>) => {\n      if (event.key === 'Enter') {\n        if (sessionValue === undefined) {\n          return\n        }\n\n        const absoluteValue =\n          sessionValue.startsWith('/') || sessionValue === ''\n            ? `${origin}${sessionValue}`\n            : sessionValue\n\n        if (!absoluteValue.startsWith(origin + '/') && absoluteValue !== origin) {\n          setCustomValidity(t('preview-location-input.error', {origin, context: 'missing-origin'}))\n          return\n        }\n        // `origin` is an empty string '' if the Studio is embedded, and that's when we need to protect against recursion\n        if (!origin && (absoluteValue.startsWith(`${basePath}/`) || absoluteValue === basePath)) {\n          setCustomValidity(\n            t('preview-location-input.error', {basePath, context: 'same-base-path'}),\n          )\n          return\n        }\n\n        const nextValue = absoluteValue === origin ? origin + '/' : absoluteValue\n\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n\n        onChange(nextValue.slice(origin.length))\n\n        inputRef.current?.blur()\n      }\n\n      if (event.key === 'Escape') {\n        setCustomValidity(undefined)\n        setSessionValue(undefined)\n      }\n    },\n    [basePath, onChange, origin, sessionValue, t],\n  )\n\n  const handleBlur = useCallback(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [])\n\n  useEffect(() => {\n    setCustomValidity(undefined)\n    setSessionValue(undefined)\n  }, [origin, value])\n\n  const resetButton: TextInputClearButtonProps = useMemo(() => ({icon: ResetIcon}), [])\n\n  return (\n    <>\n      <TextInput\n        clearButton={customValidity ? resetButton : undefined}\n        customValidity={customValidity}\n        fontSize={fontSize}\n        onBlur={handleBlur}\n        onClear={() => {\n          setCustomValidity(undefined)\n          setSessionValue(origin + value)\n        }}\n        onChange={handleChange}\n        onKeyDownCapture={handleKeyDown}\n        padding={padding}\n        prefix={prefix}\n        style={{zIndex: 1}}\n        radius={2}\n        ref={inputRef}\n        space={padding}\n        suffix={suffix}\n        value={sessionValue === undefined ? `${origin}${value}` : sessionValue}\n      />\n    </>\n  )\n}\n","import type {SyncTag} from '@sanity/client'\nimport {CopyIcon, ShareIcon} from '@sanity/icons'\nimport {SanityMonogram} from '@sanity/logos'\nimport {fetchSharedAccessQuery} from '@sanity/preview-url-secret/constants'\nimport {\n  disablePreviewAccessSharing,\n  enablePreviewAccessSharing,\n} from '@sanity/preview-url-secret/toggle-preview-access-sharing'\nimport {setSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Grid,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  Spinner,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  useToast,\n} from '@sanity/ui'\nimport {AnimatePresence, motion} from 'framer-motion'\nimport {lazy, memo, Suspense, useCallback, useEffect, useMemo, useState} from 'react'\nimport {useClient, useCurrentUser, useTranslation} from 'sanity'\nimport {styled} from 'styled-components'\nimport {API_VERSION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport type {PreviewProps} from './Preview'\n\nconst QRCodeSVG = lazy(() => import('./QRCodeSVG'))\n\nexport interface SharePreviewMenuProps {\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  previewLocationRoute: string\n  initialUrl: PreviewProps['initialUrl']\n  perspective: string\n}\n\nconst QrCodeLogoSize = 24\nconst QrCodeLogoPadding = 16\nconst QrSize = 224\n\nconst StyledSanityMonogram = styled(SanityMonogram)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  height: ${QrCodeLogoSize}px;\n  width: ${QrCodeLogoSize}px;\n`\n\nconst MotionSpinner = motion(Spinner)\nconst MotionText = motion(Text)\nconst MotionMonogram = motion(StyledSanityMonogram)\n\nexport const SharePreviewMenu = memo(function SharePreviewMenuComponent(\n  props: SharePreviewMenuProps,\n) {\n  const {\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    initialUrl,\n    previewLocationRoute,\n    perspective,\n  } = props\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {push: pushToast} = useToast()\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [loading, setLoading] = useState(true)\n  const [enabling, setEnabling] = useState(false)\n  const [disabling, setDisabling] = useState(false)\n  const [secret, setSecret] = useState<string | null>(null)\n  const busy = enabling || disabling || loading\n  const url = useMemo(\n    () =>\n      secret ? setSecretSearchParams(initialUrl, secret, previewLocationRoute, perspective) : null,\n    [initialUrl, perspective, previewLocationRoute, secret],\n  )\n\n  const [error, setError] = useState<unknown>(null)\n  if (error) {\n    throw error\n  }\n\n  const handleUnableToToggle = useCallback(() => {\n    pushToast({\n      closable: true,\n      status: 'warning',\n      title: t('share-preview-menu.error_toggle-sharing', {context: 'toggle-sharing'}),\n    })\n  }, [pushToast, t])\n\n  const handleDisableSharing = useCallback(async () => {\n    try {\n      setDisabling(true)\n      await disablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(null)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setDisabling(false)\n    }\n  }, [client, currentUser?.id])\n  const handleEnableSharing = useCallback(async () => {\n    try {\n      setEnabling(true)\n\n      const previewUrlSecret = await enablePreviewAccessSharing(\n        client,\n        '@sanity/presentation',\n        typeof window === 'undefined' ? '' : location.href,\n        currentUser?.id,\n      )\n      setSecret(previewUrlSecret.secret)\n    } catch (error) {\n      setError(error)\n    } finally {\n      setEnabling(false)\n    }\n  }, [client, currentUser?.id])\n\n  const handleCopyUrl = useCallback(() => {\n    try {\n      if (!url) {\n        throw new Error('No URL to copy')\n      }\n      navigator.clipboard.writeText(url.toString())\n      pushToast({\n        closable: true,\n        status: 'success',\n        title: t('share-url.clipboard.status', {context: 'success'}),\n      })\n    } catch (error) {\n      setError(error)\n    }\n  }, [pushToast, t, url])\n\n  useEffect(() => {\n    let controller = new AbortController()\n    let usedTags: SyncTag[] = []\n    async function fetchShareSecret(lastLiveEventId: string | null, signal: AbortSignal) {\n      const {result, syncTags} = await client.fetch<string | null>(\n        fetchSharedAccessQuery,\n        {},\n        {filterResponse: false, lastLiveEventId, tag: 'presentation.fetch-shared-access-secret'},\n      )\n      if (Array.isArray(syncTags)) {\n        usedTags = syncTags\n      }\n      if (!signal.aborted) {\n        setSecret(result)\n      }\n    }\n    const subscription = client.live.events().subscribe({\n      next: (event) => {\n        if (event.type === 'message') {\n          controller.abort()\n          controller = new AbortController()\n          if (event.tags.some((tag) => usedTags.includes(tag))) {\n            fetchShareSecret(event.id, controller.signal)\n          }\n        }\n      },\n      error: setError,\n    })\n\n    fetchShareSecret(null, controller.signal).finally(() => setLoading(false))\n\n    return () => {\n      subscription.unsubscribe()\n      controller.abort()\n    }\n  }, [client])\n\n  return (\n    <MenuButton\n      button={\n        <Button\n          aria-label={t('preview-frame.share-button.aria-label')}\n          fontSize={1}\n          icon={ShareIcon}\n          mode=\"bleed\"\n          padding={2}\n        />\n      }\n      id=\"share-menu\"\n      menu={\n        <Menu style={{maxWidth: 248}} padding={canUseSharedPreviewAccess ? undefined : 0}>\n          {canUseSharedPreviewAccess ? (\n            <>\n              <label style={{cursor: 'pointer'}}>\n                <Grid\n                  columns={2}\n                  rows={2}\n                  gapX={3}\n                  gapY={1}\n                  style={{\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    gridTemplateColumns: 'min-content 1fr',\n                    gridTemplateRows: 'min-content',\n                  }}\n                  paddingTop={3}\n                  paddingX={3}\n                >\n                  <Tooltip\n                    animate\n                    content={\n                      <Text size={1}>\n                        {t('share-preview-menu.toggle-button.tooltip', {\n                          context: url ? 'disable' : 'enable',\n                        })}\n                      </Text>\n                    }\n                    fallbackPlacements={['bottom-start']}\n                    padding={1}\n                    placement=\"bottom\"\n                    portal\n                  >\n                    <Switch\n                      checked={enabling || (url !== null && !disabling)}\n                      readOnly={enabling || disabling}\n                      indeterminate={loading}\n                      onChange={\n                        !canToggleSharePreviewAccess\n                          ? handleUnableToToggle\n                          : url\n                            ? handleDisableSharing\n                            : handleEnableSharing\n                      }\n                    />\n                  </Tooltip>\n                  <Text size={1} weight=\"medium\">\n                    {t('share-preview-menu.toggle-button.label', {context: 'first-line'})}\n                  </Text>\n                  <span />\n                  <Text muted size={1}>\n                    {t('share-preview-menu.toggle-button.label', {context: 'second-line'})}\n                  </Text>\n                </Grid>\n              </label>\n              <Box padding={3} paddingTop={2}>\n                <Stack space={3}>\n                  <Card\n                    tone={busy || !url ? 'transparent' : undefined}\n                    style={{\n                      position: 'relative',\n                      aspectRatio: '1 / 1',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <AnimatePresence>\n                      {busy ? (\n                        <MotionSpinner\n                          muted\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        />\n                      ) : url ? (\n                        <>\n                          <Suspense fallback={<Spinner />}>\n                            <QRCodeSVG\n                              title={t('share-preview-menu.qr-code.title', {url: url.toString()})}\n                              value={url.toString()}\n                              size={QrSize}\n                              color=\"var(--card-fg-color)\"\n                              logoSize={QrCodeLogoSize + QrCodeLogoPadding}\n                            />\n                            <MotionMonogram\n                              initial={{opacity: -0.5}}\n                              animate={{opacity: 1.5}}\n                              exit={{opacity: 0}}\n                            />\n                          </Suspense>\n                        </>\n                      ) : (\n                        <MotionText\n                          muted\n                          size={1}\n                          style={{maxWidth: '100px', textWrap: 'pretty', textAlign: 'center'}}\n                          initial={{opacity: 0}}\n                          animate={{opacity: 1}}\n                          exit={{opacity: 0}}\n                        >\n                          {t('share-preview-menu.qr-code.placeholder')}\n                        </MotionText>\n                      )}\n                    </AnimatePresence>\n                  </Card>\n                  <Text muted size={1}>\n                    {t('share-preview-menu.qr-code.instructions')}\n                  </Text>\n                </Stack>\n              </Box>\n              <MenuDivider />\n              <MenuItem\n                disabled={!url || disabling}\n                icon={CopyIcon}\n                onClick={handleCopyUrl}\n                fontSize={1}\n                padding={3}\n                text={t('share-preview-menu.copy-url.text')}\n              />\n            </>\n          ) : (\n            <Card padding={2} tone=\"caution\" radius={3}>\n              <Text style={{textWrap: 'pretty'}}>\n                {t('share-preview-menu.error', {context: 'missing-grants'})}\n              </Text>\n            </Card>\n          )}\n        </Menu>\n      }\n      popover={{\n        animate: true,\n        constrainSize: true,\n        placement: 'bottom',\n        portal: true,\n      }}\n    />\n  )\n})\nSharePreviewMenu.displayName = 'Memo(SharePreviewMenu)'\n","import {\n  CheckmarkIcon,\n  ChevronDownIcon,\n  DesktopIcon,\n  EditIcon,\n  MobileDeviceIcon,\n  PanelLeftIcon,\n  PublishIcon,\n  RefreshIcon,\n} from '@sanity/icons'\nimport {withoutSecretSearchParams} from '@sanity/preview-url-secret/without-secret-search-params'\nimport {\n  Box,\n  Button,\n  Card,\n  Flex,\n  Hotkeys,\n  Menu,\n  MenuButton,\n  MenuItem,\n  Stack,\n  Switch,\n  Text,\n  Tooltip,\n  type ButtonTone,\n} from '@sanity/ui'\nimport {\n  createElement,\n  useCallback,\n  useMemo,\n  type ComponentType,\n  type FunctionComponent,\n  type ReactNode,\n  type RefObject,\n} from 'react'\nimport {useTranslation} from 'sanity'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {ACTION_IFRAME_RELOAD} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective} from '../types'\nimport {OpenPreviewButton} from './OpenPreviewButton'\nimport type {PreviewProps} from './Preview'\nimport {PreviewLocationInput} from './PreviewLocationInput'\nimport {SharePreviewMenu} from './SharePreviewMenu'\n\nconst PERSPECTIVE_TITLE_KEY: Record<PresentationPerspective, string> = {\n  previewDrafts: 'preview-frame.perspective.previewDrafts.title',\n  published: 'preview-frame.perspective.published.title',\n}\n\nconst PERSPECTIVE_TONES: Record<PresentationPerspective, ButtonTone> = {\n  previewDrafts: 'caution',\n  published: 'positive',\n}\n\nconst PERSPECTIVE_ICONS: Record<PresentationPerspective, ComponentType> = {\n  previewDrafts: EditIcon,\n  published: PublishIcon,\n}\n\nexport interface PreviewHeaderProps extends PreviewProps {\n  iframeRef: RefObject<HTMLIFrameElement>\n  renderDefault: (props: PreviewHeaderProps) => ReactNode\n}\n\nconst PreviewHeaderDefault: FunctionComponent<Omit<PreviewHeaderProps, 'renderDefault'>> = (\n  props,\n) => {\n  const {\n    canSharePreviewAccess,\n    canToggleSharePreviewAccess,\n    canUseSharedPreviewAccess,\n    dispatch,\n    iframe,\n    iframeRef,\n    initialUrl,\n    loadersConnection,\n    navigatorEnabled,\n    onPathChange,\n    onRefresh,\n    openPopup,\n    overlaysConnection,\n    perspective,\n    previewUrl,\n    setPerspective,\n    setViewport,\n    targetOrigin,\n    toggleNavigator,\n    toggleOverlay,\n    viewport,\n    visualEditing: {overlaysEnabled},\n  } = props\n\n  const {t} = useTranslation(presentationLocaleNamespace)\n\n  const toggleViewportSize = useCallback(\n    () => setViewport(viewport === 'desktop' ? 'mobile' : 'desktop'),\n    [setViewport, viewport],\n  )\n\n  const previewLocationOrigin = useMemo(() => {\n    return targetOrigin === location.origin ? '' : targetOrigin\n  }, [targetOrigin])\n\n  const handleRefresh = () => {\n    onRefresh(() => {\n      if (!iframeRef.current) {\n        return\n      }\n      dispatch({type: ACTION_IFRAME_RELOAD})\n      // Funky way to reload an iframe without CORS issues\n      // eslint-disable-next-line no-self-assign\n      // ref.current.src = ref.current.src\n      Object.assign(iframeRef.current, {src: `${targetOrigin}${previewUrl || '/'}`})\n    })\n  }\n\n  const previewLocationRoute = useMemo(() => {\n    const previewURL = new URL(previewUrl || '/', targetOrigin)\n    const {pathname, search} = withoutSecretSearchParams(previewURL)\n\n    return `${pathname}${search}`\n  }, [previewUrl, targetOrigin])\n\n  return (\n    <>\n      {toggleNavigator && (\n        <Box flex=\"none\" marginRight={1} padding={1}>\n          <Tooltip\n            animate\n            content={<Text size={1}>{t('preview-frame.navigator.toggle-button.tooltip')}</Text>}\n            fallbackPlacements={['bottom-start']}\n            padding={2}\n            placement=\"bottom\"\n            portal\n          >\n            <Button\n              aria-label={t('preview-frame.navigator.toggle-button.aria-label')}\n              fontSize={1}\n              icon={PanelLeftIcon}\n              mode=\"bleed\"\n              onClick={toggleNavigator}\n              padding={2}\n              selected={navigatorEnabled}\n            />\n          </Tooltip>\n        </Box>\n      )}\n\n      <Tooltip\n        animate\n        content={\n          <Flex align=\"center\" style={{whiteSpace: 'nowrap'}}>\n            <Box padding={1}>\n              <Text size={1}>\n                {t('preview-frame.overlay.toggle-button.tooltip', {\n                  context: overlaysEnabled ? 'disable' : 'enable',\n                })}\n              </Text>\n            </Box>\n            <Box paddingY={1}>\n              <Hotkeys keys={['Alt']} style={{marginTop: -4, marginBottom: -4}} />\n            </Box>\n          </Flex>\n        }\n        fallbackPlacements={['bottom-start']}\n        padding={1}\n        placement=\"bottom\"\n        portal\n      >\n        <Card\n          as=\"label\"\n          flex=\"none\"\n          marginRight={1}\n          padding={3}\n          style={{\n            lineHeight: 0,\n            borderRadius: 999,\n            userSelect: 'none',\n          }}\n          tone={overlaysEnabled ? 'transparent' : undefined}\n        >\n          <Flex align=\"center\" gap={3}>\n            <div style={{margin: -4}}>\n              <Switch\n                checked={overlaysEnabled}\n                onChange={toggleOverlay}\n                disabled={iframe.status === 'loading' || overlaysConnection !== 'connected'}\n              />\n            </div>\n            <Box>\n              <Text muted={!overlaysEnabled} size={1} weight=\"medium\">\n                {t('preview-frame.overlay.toggle-button.text')}\n              </Text>\n            </Box>\n          </Flex>\n        </Card>\n      </Tooltip>\n\n      <Box flex={1} marginX={1}>\n        <PreviewLocationInput\n          prefix={\n            <Box padding={1}>\n              <Tooltip\n                animate\n                content={\n                  <Text size={1}>\n                    {iframe.status === 'loaded'\n                      ? t('preview-frame.refresh-button.tooltip')\n                      : t('preview-frame.status', {context: iframe.status})}\n                  </Text>\n                }\n                fallbackPlacements={['bottom-end']}\n                padding={2}\n                placement=\"bottom\"\n                portal\n              >\n                <Button\n                  aria-label={t('preview-frame.refresh-button.aria-label')}\n                  fontSize={1}\n                  icon={RefreshIcon}\n                  mode=\"bleed\"\n                  loading={iframe.status === 'reloading' || iframe.status === 'refreshing'}\n                  onClick={handleRefresh}\n                  padding={2}\n                />\n              </Tooltip>\n            </Box>\n          }\n          onChange={onPathChange}\n          origin={previewLocationOrigin}\n          suffix={\n            <Box padding={1}>\n              <OpenPreviewButton\n                openPopup={openPopup}\n                previewLocationOrigin={previewLocationOrigin}\n                previewLocationRoute={previewLocationRoute}\n              />\n            </Box>\n          }\n          value={previewLocationRoute}\n        />\n      </Box>\n\n      <Flex align=\"center\" flex=\"none\" gap={1} padding={1}>\n        <MenuButton\n          button={\n            <Button\n              fontSize={1}\n              iconRight={ChevronDownIcon}\n              mode=\"bleed\"\n              padding={2}\n              space={2}\n              text={t(\n                PERSPECTIVE_TITLE_KEY[\n                  loadersConnection === 'connected' ? perspective : 'previewDrafts'\n                ],\n              )}\n              loading={loadersConnection === 'reconnecting' && iframe.status !== 'loaded'}\n              disabled={loadersConnection !== 'connected'}\n            />\n          }\n          id=\"perspective-menu\"\n          menu={\n            <Menu style={{maxWidth: 240}}>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('previewDrafts')}\n                padding={3}\n                pressed={perspective === 'previewDrafts'}\n                tone={PERSPECTIVE_TONES.previewDrafts}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.previewDrafts)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['previewDrafts'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.previewDrafts.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'previewDrafts' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                fontSize={1}\n                onClick={() => setPerspective('published')}\n                padding={3}\n                pressed={perspective === 'published'}\n                tone={PERSPECTIVE_TONES.published}\n              >\n                <Flex align=\"flex-start\" gap={3}>\n                  <Box flex=\"none\">\n                    <Text size={1}>{createElement(PERSPECTIVE_ICONS.published)}</Text>\n                  </Box>\n                  <Stack flex={1} space={2}>\n                    <Text size={1} weight=\"medium\">\n                      {t(PERSPECTIVE_TITLE_KEY['published'])}\n                    </Text>\n                    <Text muted size={1}>\n                      {t('preview-frame.perspective.published.text')}\n                    </Text>\n                  </Stack>\n                  <Box flex=\"none\">\n                    <Text\n                      muted\n                      size={1}\n                      style={{\n                        opacity: perspective === 'published' ? 1 : 0,\n                      }}\n                    >\n                      <CheckmarkIcon />\n                    </Text>\n                  </Box>\n                </Flex>\n              </MenuItem>\n            </Menu>\n          }\n          popover={{\n            animate: true,\n            constrainSize: true,\n            placement: 'bottom',\n            portal: true,\n          }}\n        />\n      </Flex>\n\n      <Flex align=\"center\" flex=\"none\" gap={1}>\n        <Tooltip\n          animate\n          content={\n            <Text size={1}>\n              {t('preview-frame.viewport-button.tooltip', {\n                context: viewport === 'desktop' ? 'narrow' : 'full',\n              })}\n            </Text>\n          }\n          fallbackPlacements={['bottom-start']}\n          padding={2}\n          placement=\"bottom\"\n          portal\n        >\n          <Button\n            aria-label={t('preview-frame.viewport-button.aria-label')}\n            fontSize={1}\n            icon={viewport === 'desktop' ? MobileDeviceIcon : DesktopIcon}\n            mode=\"bleed\"\n            onClick={toggleViewportSize}\n            padding={2}\n          />\n        </Tooltip>\n      </Flex>\n\n      {canSharePreviewAccess && (\n        <Flex align=\"center\" flex=\"none\" gap={1} paddingX={1}>\n          <SharePreviewMenu\n            canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n            canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n            previewLocationRoute={previewLocationRoute}\n            initialUrl={initialUrl}\n            perspective={perspective}\n          />\n        </Flex>\n      )}\n    </>\n  )\n}\n\nconst PreviewHeader: FunctionComponent<\n  Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions}\n> = (props) => {\n  const renderDefault = useCallback((props: Omit<PreviewHeaderProps, 'renderDefault'>) => {\n    return createElement(PreviewHeaderDefault, props)\n  }, [])\n\n  const header = props.options?.component\n    ? createElement(props.options.component, {...props, renderDefault})\n    : renderDefault(props)\n\n  return (\n    <Card flex=\"none\" padding={2} borderBottom style={{position: 'relative'}}>\n      <Flex align=\"center\" style={{minHeight: 0}}>\n        {header}\n      </Flex>\n    </Card>\n  )\n}\n\n/** @internal */\nexport function usePresentationPreviewHeader(\n  props: Omit<PreviewHeaderProps, 'renderDefault'> & {options?: HeaderOptions},\n): () => ReactNode {\n  const Component = useCallback(() => {\n    return <PreviewHeader {...props} />\n  }, [props])\n\n  return Component\n}\n","import type {Status} from '@sanity/comlink'\nimport {\n  Button,\n  Card,\n  Code,\n  Flex,\n  Label,\n  Spinner,\n  Stack,\n  Text,\n  TooltipDelayGroupProvider,\n  usePrefersReducedMotion,\n} from '@sanity/ui'\nimport {AnimatePresence, motion, MotionConfig} from 'framer-motion'\nimport {\n  forwardRef,\n  memo,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  useSyncExternalStore,\n} from 'react'\nimport {flushSync} from 'react-dom'\nimport {useTranslation} from 'sanity'\nimport {ErrorCard} from '../components/ErrorCard'\nimport {MAX_TIME_TO_OVERLAYS_CONNECTION} from '../constants'\nimport {presentationLocaleNamespace} from '../i18n'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_RELOAD,\n  type DispatchPresentationAction,\n  type PresentationState,\n} from '../reducers/presentationReducer'\nimport type {HeaderOptions, PresentationPerspective, PresentationViewport} from '../types'\nimport {usePresentationTool} from '../usePresentationTool'\nimport {IFrame} from './IFrame'\nimport {usePresentationPreviewHeader} from './PreviewHeader'\n\nconst MotionFlex = motion(Flex)\n\nexport interface PreviewProps extends Pick<PresentationState, 'iframe' | 'visualEditing'> {\n  canSharePreviewAccess: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n  dispatch: DispatchPresentationAction\n  header?: HeaderOptions\n  initialUrl: URL\n  loadersConnection: Status\n  navigatorEnabled: boolean\n  onPathChange: (nextPath: string) => void\n  onRefresh: (fallback: () => void) => void\n  openPopup: (url: string) => void\n  overlaysConnection: Status\n  perspective: PresentationPerspective\n  previewUrl?: string\n  setPerspective: (perspective: 'previewDrafts' | 'published') => void\n  setViewport: (mode: 'desktop' | 'mobile') => void\n  targetOrigin: string\n  toggleNavigator?: () => void\n  toggleOverlay: () => void\n  viewport: PresentationViewport\n}\n\nexport const Preview = memo(\n  forwardRef<HTMLIFrameElement, PreviewProps>(function PreviewComponent(props, forwardedRef) {\n    const {dispatch, iframe, header, initialUrl, loadersConnection, overlaysConnection, viewport} =\n      props\n\n    const {t} = useTranslation(presentationLocaleNamespace)\n    const {devMode} = usePresentationTool()\n    const prefersReducedMotion = usePrefersReducedMotion()\n    const ref = useRef<HTMLIFrameElement | null>(null)\n\n    const PreviewHeader = usePresentationPreviewHeader({\n      ...props,\n      iframeRef: ref,\n      options: header,\n    })\n\n    // Forward the iframe ref to the parent component\n    useImperativeHandle<HTMLIFrameElement | null, HTMLIFrameElement | null>(\n      forwardedRef,\n      () => ref.current,\n    )\n\n    const loading = iframe.status === 'loading' || iframe.status === 'reloading'\n    const [timedOut, setTimedOut] = useState(false)\n    const refreshing = iframe.status === 'refreshing'\n    const [somethingIsWrong, setSomethingIsWrong] = useState(false)\n    const iframeIsBusy = loading || refreshing || overlaysConnection === 'connecting'\n\n    const handleRetry = useCallback(() => {\n      if (!ref.current) {\n        return\n      }\n\n      ref.current.src = initialUrl.toString()\n\n      dispatch({type: ACTION_IFRAME_RELOAD})\n    }, [dispatch, initialUrl])\n    const handleContinueAnyway = useCallback(() => {\n      setContinueAnyway(true)\n    }, [])\n\n    const [continueAnyway, setContinueAnyway] = useState(false)\n    const [showOverlaysConnectionStatus, setShowOverlaysConnectionState] = useState(false)\n    useEffect(() => {\n      if (loading || refreshing) {\n        return\n      }\n\n      if (overlaysConnection === 'connecting' || overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setShowOverlaysConnectionState(true)\n        }, 5_000)\n        return () => clearTimeout(timeout)\n      }\n      return\n    }, [overlaysConnection, loading, refreshing])\n\n    useEffect(() => {\n      if (loading || refreshing || !showOverlaysConnectionStatus) {\n        return\n      }\n      if (overlaysConnection === 'connected') {\n        setSomethingIsWrong(false)\n        setShowOverlaysConnectionState(false)\n        setTimedOut(false)\n        setContinueAnyway(false)\n      }\n      if (overlaysConnection === 'connecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          // eslint-disable-next-line no-console\n          console.error(\n            `Unable to connect to visual editing. Make sure you've setup '@sanity/visual-editing' correctly`,\n          )\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'reconnecting') {\n        const timeout = setTimeout(() => {\n          setTimedOut(true)\n          setSomethingIsWrong(true)\n        }, MAX_TIME_TO_OVERLAYS_CONNECTION)\n        return () => clearTimeout(timeout)\n      }\n      if (overlaysConnection === 'disconnected') {\n        setSomethingIsWrong(true)\n      }\n      return\n    }, [loading, overlaysConnection, refreshing, showOverlaysConnectionStatus])\n\n    const onIFrameLoad = useCallback(() => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    }, [dispatch])\n\n    /**\n     * Ensure that clicking outside of menus and dialogs will close as focus shifts to the iframe\n     */\n    useEffect(() => {\n      if (!ref.current) {\n        return\n      }\n      const instance = ref.current\n      function handleBlur() {\n        if (instance !== document.activeElement) {\n          return\n        }\n\n        instance.dispatchEvent(new MouseEvent('mousedown', {bubbles: true, cancelable: true}))\n      }\n      window.addEventListener('blur', handleBlur)\n      return () => {\n        window.removeEventListener('blur', handleBlur)\n      }\n    }, [])\n\n    const preventIframeInteraction = useMemo(() => {\n      return (\n        (loading || (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n        !continueAnyway\n      )\n    }, [continueAnyway, iframe.status, loading, overlaysConnection])\n\n    const canUseViewTransition = useSyncExternalStore(\n      useCallback(() => () => {}, []),\n      () => CSS.supports(`(view-transition-name: test)`),\n    )\n    const iframeAnimations = useMemo(() => {\n      return [\n        preventIframeInteraction ? 'background' : 'active',\n        loading ? 'reloading' : 'idle',\n        // If CSS View Transitions are supported, then transition iframe viewport dimensions with that instead of Motion\n        canUseViewTransition ? '' : viewport,\n        showOverlaysConnectionStatus && !continueAnyway ? 'timedOut' : '',\n      ]\n    }, [\n      canUseViewTransition,\n      continueAnyway,\n      loading,\n      preventIframeInteraction,\n      showOverlaysConnectionStatus,\n      viewport,\n    ])\n\n    const [currentViewport, setCurrentViewport] = useState(viewport)\n    const [iframeStyle, setIframeStyle] = useState(iframeVariants[viewport])\n    useEffect(() => {\n      if (canUseViewTransition && viewport !== currentViewport) {\n        const update = () => {\n          setCurrentViewport(viewport)\n          setIframeStyle(iframeVariants[viewport])\n        }\n        if (\n          !prefersReducedMotion &&\n          'startViewTransition' in document &&\n          typeof document.startViewTransition === 'function'\n        ) {\n          document.startViewTransition(() => flushSync(() => update()))\n        } else {\n          update()\n        }\n      }\n    }, [canUseViewTransition, prefersReducedMotion, currentViewport, viewport])\n\n    return (\n      <MotionConfig transition={prefersReducedMotion ? {duration: 0} : undefined}>\n        <TooltipDelayGroupProvider delay={1000}>\n          <PreviewHeader />\n\n          {/* @TODO: Move this to <PreviewFrame /> */}\n          <Card flex={1} tone=\"transparent\">\n            <Flex\n              align=\"center\"\n              height=\"fill\"\n              justify=\"center\"\n              padding={(canUseViewTransition ? currentViewport : viewport) === 'desktop' ? 0 : 2}\n              sizing=\"border\"\n              style={{\n                position: 'relative',\n                cursor: iframeIsBusy ? 'wait' : undefined,\n              }}\n            >\n              <AnimatePresence>\n                {!somethingIsWrong &&\n                !loading &&\n                !refreshing &&\n                // viewport, // using CSS View Transitions instead of framer motion to drive this\n                showOverlaysConnectionStatus &&\n                !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      backdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      ['transition' as string]: 'backdrop-filter 0.2s ease-in-out',\n                      // @TODO Because of Safari we have to do this\n                      WebkitBackdropFilter: timedOut\n                        ? 'blur(16px) saturate(0.5) grayscale(0.5)'\n                        : 'blur(2px)',\n                      WebkitTransition: '-webkit-backdrop-filter 0.2s ease-in-out',\n                      zIndex: 1,\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      {timedOut && (\n                        <Button\n                          disabled\n                          fontSize={1}\n                          mode=\"ghost\"\n                          text={t('preview-frame.continue-button.text')}\n                          style={{opacity: 0}}\n                        />\n                      )}\n                      <Card\n                        radius={2}\n                        tone={timedOut ? 'caution' : 'inherit'}\n                        padding={4}\n                        shadow={1}\n                      >\n                        <Flex justify=\"center\" align=\"center\" direction=\"column\" gap={4}>\n                          <Spinner muted />\n                          <Text muted size={1}>\n                            {timedOut\n                              ? t('preview-frame.status', {context: 'timeout'})\n                              : t('preview-frame.status', {context: 'connecting'})}\n                          </Text>\n                        </Flex>\n                      </Card>\n                      {timedOut && (\n                        <Button\n                          fontSize={1}\n                          // mode=\"ghost\"\n                          tone=\"critical\"\n                          onClick={handleContinueAnyway}\n                          text={t('preview-frame.continue-button.text')}\n                        />\n                      )}\n                    </Flex>\n                  </MotionFlex>\n                ) : (loading ||\n                    (overlaysConnection === 'connecting' && iframe.status !== 'refreshing')) &&\n                  !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={spinnerVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      inset: '0',\n                      position: 'absolute',\n                      // boxShadow: '0 0 0 1px var(--card-shadow-outline-color)',\n                    }}\n                  >\n                    <Flex\n                      style={{...sizes[viewport]}}\n                      justify=\"center\"\n                      align=\"center\"\n                      direction=\"column\"\n                      gap={4}\n                    >\n                      <Spinner muted />\n                      <Text muted size={1}>\n                        {t('preview-frame.status', {context: 'loading'})}\n                      </Text>\n                    </Flex>\n                  </MotionFlex>\n                ) : somethingIsWrong && !continueAnyway ? (\n                  <MotionFlex\n                    initial=\"initial\"\n                    animate=\"animate\"\n                    exit=\"exit\"\n                    variants={errorVariants}\n                    justify=\"center\"\n                    align=\"center\"\n                    style={{\n                      background: 'var(--card-bg-color)',\n                      inset: '0',\n                      position: 'absolute',\n                    }}\n                  >\n                    <ErrorCard\n                      flex={1}\n                      message={t('preview-frame.connection.error.text')}\n                      onRetry={handleRetry}\n                      onContinueAnyway={handleContinueAnyway}\n                    >\n                      {devMode && (\n                        <>\n                          {overlaysConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.overlay.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: overlaysConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n\n                          {loadersConnection !== 'connected' && (\n                            <Card padding={3} radius={2} tone=\"critical\">\n                              <Stack space={3}>\n                                <Label muted size={0}>\n                                  {t('preview-frame.loader.connection-status.label')}\n                                </Label>\n                                <Code size={1}>\n                                  {t('channel.status', {context: loadersConnection})}\n                                </Code>\n                              </Stack>\n                            </Card>\n                          )}\n                        </>\n                      )}\n                    </ErrorCard>\n                  </MotionFlex>\n                ) : null}\n              </AnimatePresence>\n              <IFrame\n                animate={iframeAnimations}\n                initial={['background']}\n                onLoad={onIFrameLoad}\n                preventClick={preventIframeInteraction}\n                ref={ref}\n                src={initialUrl.toString()}\n                style={iframeStyle}\n                variants={iframeVariants}\n              />\n            </Flex>\n          </Card>\n        </TooltipDelayGroupProvider>\n      </MotionConfig>\n    )\n  }),\n)\nPreview.displayName = 'Memo(ForwardRef(Preview))'\n\nconst sizes = {\n  desktop: {\n    width: '100%',\n    height: '100%',\n  },\n  mobile: {\n    width: 375,\n    height: 650,\n  },\n}\n\nconst spinnerVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst errorVariants = {\n  initial: {opacity: 1},\n  animate: {opacity: [0, 0, 1]},\n  exit: {opacity: [1, 0, 0]},\n}\n\nconst iframeVariants = {\n  desktop: {\n    ...sizes.desktop,\n    boxShadow: '0 0 0 0px var(--card-border-color)',\n  },\n  mobile: {\n    ...sizes.mobile,\n    boxShadow: '0 0 0 1px var(--card-border-color)',\n  },\n  background: {\n    opacity: 0,\n    scale: 1,\n  },\n  idle: {\n    scale: 1,\n  },\n  reloading: {\n    scale: [1, 1, 1, 0.98],\n  },\n  active: {\n    opacity: [0, 0, 1],\n    scale: 1,\n  },\n  timedOut: {\n    opacity: [0, 0, 1],\n  },\n}\n","import {useEffect, useRef} from 'react'\nimport {useEffectEvent} from 'use-effect-event'\n\n/**\n * Similar to `useEffect`, but only execute the callback on value change.\n * @param value - The value to watch for changes.\n * @param callback - The callback to execute when the value changes.\n * @param initialValue - An optional initial value to compare against.\n * @param comparator - An optional comparator function for determining changes, useful if the value is non-primitive. Should return true if the callback should be executed.\n * @internal\n */\nexport function useEffectOnChange<T>(\n  value: T,\n  _callback: (value: T, prevValue: T | undefined) => void | (() => void),\n  initialValue?: T,\n  comparator?: (a: T, b?: T) => boolean | undefined,\n): void {\n  const previousValueRef = useRef<T | undefined>(initialValue)\n  const callback = useEffectEvent(_callback)\n\n  useEffect(() => {\n    const prev = previousValueRef.current\n    previousValueRef.current = value\n    if (comparator ? comparator(value, prev) : value !== prev) {\n      return callback(value, prev)\n    }\n  }, [callback, comparator, value])\n}\n","import {type FunctionComponent} from 'react'\nimport {useEditState} from './internals'\nimport type {PresentationNavigate} from './types'\nimport {useEffectOnChange} from './util/useEffectOnChange'\n\ninterface RevisionSwitcherProps {\n  documentId: string\n  documentRevision: string | undefined\n  documentType: string\n  navigate: PresentationNavigate\n  perspective: 'previewDrafts' | 'published'\n}\n\n/**\n * Renderless component to handle displaying the correct revision when the\n * perspective is switched. When the perspective changes to 'published', the\n * `rev` parameter correpsonding to the published document is resolved from the\n * published edit state. When the perspective changes to 'previewDrafts', the\n * `rev` parameter is removed, as the latest draft should be displayed.\n * @internal\n */\nexport const RevisionSwitcher: FunctionComponent<RevisionSwitcherProps> = function (props) {\n  const {documentId, documentType, navigate, perspective, documentRevision} = props\n\n  const editState = useEditState(documentId, documentType)\n\n  useEffectOnChange(perspective, (value) => {\n    let rev: string | undefined = undefined\n    if (value === 'published' && editState.published) {\n      const {_updatedAt, _rev} = editState.published\n      rev = `${_updatedAt}/${_rev}`\n    }\n    if (documentRevision !== rev) {\n      navigate({}, {rev}, true)\n    }\n  })\n\n  return null\n}\n","/** @internal */\nexport function defineWarnOnce() {\n  let warned = false\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return (...args: any[]): void => {\n    if (!warned) {\n      // eslint-disable-next-line no-console\n      console.warn(...args)\n      warned = true\n    }\n  }\n}\n","import type {ClientPerspective} from '@sanity/client'\nimport isEqual from 'fast-deep-equal'\nimport {useCallback, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {FrameState, PresentationPerspective} from './types'\nimport {defineWarnOnce} from './util/warnOnce'\n\nexport type DocumentOnPage = {\n  _id: string\n  _type: string\n}\n\ntype DocumentCache = Record<string, DocumentOnPage>\ntype KeyedDocumentCache = Record<string, DocumentCache>\n\nconst warnOnceAboutCrossDatasetReference = defineWarnOnce()\n\nexport function useDocumentsOnPage(\n  perspective: PresentationPerspective,\n  frameStateRef: MutableRefObject<FrameState>,\n): [\n  DocumentOnPage[],\n  (key: string, perspective: PresentationPerspective, state: DocumentOnPage[]) => void,\n] {\n  if (perspective !== 'published' && perspective !== 'previewDrafts') {\n    throw new Error(`Invalid perspective: ${perspective}`)\n  }\n\n  const [published, setPublished] = useState<KeyedDocumentCache>({})\n  const [previewDrafts, setPreviewDrafts] = useState<KeyedDocumentCache>({})\n\n  // Used to compare the frame url with its value when the cache was last updated\n  // If the url has changed, the entire cache is replaced\n  const urlRef = useRef<string | undefined>('')\n\n  const setDocumentsOnPage = useCallback(\n    (key: string, perspective: ClientPerspective, sourceDocuments: DocumentOnPage[] = []) => {\n      const documents = sourceDocuments.filter((sourceDocument) => {\n        if ('_projectId' in sourceDocument && sourceDocument._projectId) {\n          // eslint-disable-next-line no-warning-comments\n          // @TODO Handle cross dataset references\n\n          warnOnceAboutCrossDatasetReference(\n            'Cross dataset references are not supported yet, ignoring source document',\n            sourceDocument,\n          )\n          return false\n        }\n        return sourceDocument\n      })\n\n      const setCache = perspective === 'published' ? setPublished : setPreviewDrafts\n\n      setCache((cache) => {\n        // Create the `next` documents, dedupe by `_id`\n        const next: Record<string, DocumentOnPage> = {}\n        for (const document of documents) {\n          next[document._id] = document\n        }\n\n        // If the frame url has changed, replace the entire cache with the next documents\n        if (urlRef.current !== frameStateRef.current.url) {\n          urlRef.current = frameStateRef.current.url\n          return {[key]: next}\n        }\n\n        // If the keyed cache has changed, return the entire cache and replace the keyed part\n        const prev = cache[key]\n        if (!isEqual(prev, next)) {\n          return {...cache, [key]: next}\n        }\n\n        // Otherwise return the entire cache as is\n        return cache\n      })\n    },\n    [frameStateRef],\n  )\n\n  const documentsOnPage = useMemo(() => {\n    const keyedCache = perspective === 'published' ? published : previewDrafts\n    const uniqueDocuments = Object.values(keyedCache).reduce((acc, cache) => {\n      Object.values(cache).forEach((doc) => {\n        acc[doc._id] = doc\n      })\n      return acc\n    }, {})\n\n    return Object.values(uniqueDocuments)\n  }, [perspective, previewDrafts, published])\n\n  return [documentsOnPage, setDocumentsOnPage]\n}\n","import type {ResponseQueryOptions} from '@sanity/client'\nimport {match, type Path} from 'path-to-regexp'\nimport {useEffect, useRef, useState} from 'react'\nimport {useClient} from 'sanity'\nimport {useRouter, type RouterState} from 'sanity/router'\nimport {useEffectEvent} from 'use-effect-event'\nimport {API_VERSION} from './constants'\nimport type {\n  DocumentResolver,\n  DocumentResolverContext,\n  MainDocument,\n  MainDocumentState,\n  PresentationNavigate,\n  PreviewUrlOption,\n} from './types'\n\n// Helper function to \"unwrap\" a result when it is either explicitly provided or\n// returned as the result of a passed function\nfunction fnOrObj<T, U>(arg: T | ((ctx: U) => T), context: U): T {\n  return arg instanceof Function ? arg(context) : arg\n}\n\nfunction getQueryFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): string | undefined {\n  if (resolver.resolve) {\n    const filter = resolver.resolve(context)?.filter\n    return filter\n      ? `// groq\n*[${filter}][0]{_id, _type}`\n      : undefined\n  }\n\n  if ('type' in resolver) {\n    return `// groq\n*[_type == \"${resolver.type}\"][0]{_id, _type}`\n  }\n\n  return `// groq\n*[${fnOrObj(resolver.filter, context)}][0]{_id, _type}`\n}\n\nfunction getParamsFromResult(\n  resolver: DocumentResolver,\n  context: DocumentResolverContext,\n): Record<string, string> {\n  if (resolver.resolve) {\n    return resolver.resolve(context)?.params ?? context.params\n  }\n\n  if ('type' in resolver) {\n    return {}\n  }\n\n  return fnOrObj(resolver.params, context) ?? context.params\n}\n\nexport function getRouteContext(route: Path, url: URL): DocumentResolverContext | undefined {\n  const routes = Array.isArray(route) ? route : [route]\n\n  for (route of routes) {\n    let origin: DocumentResolverContext['origin'] = undefined\n    let path = route\n\n    // Handle absolute URLs\n    if (typeof route === 'string') {\n      try {\n        const absolute = new URL(route)\n        origin = absolute.origin\n        path = absolute.pathname\n      } catch {\n        // Ignore, as we assume a relative path\n      }\n    }\n\n    // If an origin has been explicitly provided, check that it matches\n    if (origin && url.origin !== origin) continue\n\n    try {\n      const matcher = match<Record<string, string>>(path, {decode: decodeURIComponent})\n      const result = matcher(url.pathname)\n      if (result) {\n        const {params, path} = result\n        return {origin, params, path}\n      }\n    } catch (e) {\n      throw new Error(`\"${route}\" is not a valid route pattern`)\n    }\n  }\n  return undefined\n}\n\nexport function useMainDocument(props: {\n  navigate?: PresentationNavigate\n  navigationHistory: RouterState[]\n  path?: string\n  previewUrl?: PreviewUrlOption\n  resolvers?: DocumentResolver[]\n}): MainDocumentState | undefined {\n  const {navigate, navigationHistory, path, previewUrl, resolvers = []} = props\n  const {state: routerState} = useRouter()\n  const client = useClient({apiVersion: API_VERSION})\n  const relativeUrl =\n    path || routerState._searchParams?.find(([key]) => key === 'preview')?.[1] || ''\n\n  const [mainDocumentState, setMainDocumentState] = useState<MainDocumentState | undefined>(\n    undefined,\n  )\n  const mainDocumentIdRef = useRef<string | undefined>(undefined)\n\n  const handleResponse = useEffectEvent((doc: MainDocument | undefined, url: URL) => {\n    if (!doc || mainDocumentIdRef.current !== doc._id) {\n      setMainDocumentState({\n        document: doc,\n        path: url.pathname,\n      })\n      mainDocumentIdRef.current = doc?._id\n\n      // We only want to force a navigation to the main document if\n      // the path changed but the document ID did not. An explicit\n      // document navigation should take precedence over displaying\n      // the main document. We determine if an explicit document\n      // navigation has occured by comparing the IDs of the last two\n      // resultant navigation states.\n      if (navigationHistory.at(-1)?.['id'] === navigationHistory.at(-2)?.['id']) {\n        navigate?.({\n          id: doc?._id,\n          type: doc?._type,\n        })\n      }\n    }\n  })\n\n  useEffect(() => {\n    const base =\n      typeof previewUrl === 'string'\n        ? previewUrl\n        : typeof previewUrl === 'object'\n          ? previewUrl?.origin || location.origin\n          : location.origin\n    const url = new URL(relativeUrl, base)\n\n    if (resolvers.length) {\n      let result:\n        | {\n            context: DocumentResolverContext\n            resolver: DocumentResolver\n          }\n        | undefined\n\n      for (const resolver of resolvers) {\n        const context = getRouteContext(resolver.route, url)\n        if (context) {\n          result = {context, resolver}\n          break\n        }\n      }\n\n      if (result) {\n        const query = getQueryFromResult(result.resolver, result.context)\n        const params = getParamsFromResult(result.resolver, result.context)\n\n        if (query) {\n          const controller = new AbortController()\n          const options: ResponseQueryOptions = {\n            perspective: 'previewDrafts',\n            signal: controller.signal,\n          }\n\n          client\n            .fetch<MainDocument | undefined>(query, params, options)\n            .then((doc) => handleResponse(doc, url))\n            .catch((e) => {\n              if (e instanceof Error && e.name === 'AbortError') return\n              setMainDocumentState({document: undefined, path: url.pathname})\n              mainDocumentIdRef.current = undefined\n            })\n          return () => {\n            controller.abort()\n          }\n        }\n      }\n    }\n    setMainDocumentState(undefined)\n    mainDocumentIdRef.current = undefined\n    return undefined\n  }, [client, handleResponse, previewUrl, relativeUrl, resolvers])\n\n  return mainDocumentState\n}\n","import {urlStringToPath} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport type {PresentationStateParams} from '../types'\n\nexport function parseId(rawId: string | undefined): string | undefined {\n  if (rawId === undefined) {\n    return undefined\n  }\n\n  const segments = decodeURIComponent(rawId)?.split('.')\n\n  if (segments[0] === 'drafts') {\n    segments.shift()\n  }\n\n  return segments.join('.')\n}\n\nexport function parsePath(rawPath: string | undefined): string | undefined {\n  if (rawPath === undefined) {\n    return undefined\n  }\n\n  return studioPath.toString(urlStringToPath(decodeURIComponent(rawPath)))\n}\n\nexport function parseRouterState(state: PresentationStateParams): PresentationStateParams {\n  return {\n    id: parseId(state.id),\n    path: parsePath(state.path),\n    type: state.type,\n  }\n}\n","import {useCallback, useEffect, useMemo, useRef, useState, type MutableRefObject} from 'react'\nimport type {RouterContextValue, RouterState, SearchParam} from 'sanity/router'\nimport {getPublishedId} from './internals'\nimport {parseRouterState} from './lib/parse'\nimport type {\n  CombinedSearchParams,\n  FrameState,\n  PresentationNavigate,\n  PresentationParams,\n  PresentationSearchParams,\n  PresentationStateParams,\n  StructureDocumentPaneParams,\n} from './types'\n\nfunction pruneObject<T extends RouterState | PresentationParams>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(\n      ([, value]) => value !== undefined && value !== '' && value !== null,\n    ),\n  ) as T\n}\n\nexport function useParams({\n  initialPreviewUrl,\n  routerNavigate,\n  routerState,\n  routerSearchParams,\n  frameStateRef,\n}: {\n  initialPreviewUrl: URL\n  routerNavigate: RouterContextValue['navigate']\n  routerState: RouterState & PresentationStateParams\n  routerSearchParams: {\n    [k: string]: string\n  }\n  frameStateRef: MutableRefObject<FrameState>\n}): {\n  navigate: PresentationNavigate\n  navigationHistory: RouterState[]\n  params: PresentationParams\n  searchParams: PresentationSearchParams\n  structureParams: StructureDocumentPaneParams\n} {\n  const params = useMemo<PresentationParams>(() => {\n    const {id, path, type} = parseRouterState(routerState)\n\n    return {\n      id,\n      type,\n      path,\n      preview:\n        routerSearchParams['preview'] || `${initialPreviewUrl.pathname}${initialPreviewUrl.search}`,\n      perspective: routerSearchParams['perspective'],\n      viewport: routerSearchParams['viewport'],\n      inspect: routerSearchParams['inspect'],\n      rev: routerSearchParams['rev'],\n      since: routerSearchParams['since'],\n      template: routerSearchParams['template'],\n      templateParams: routerSearchParams['templateParams'],\n      view: routerSearchParams['view'],\n      // assist\n      pathKey: routerSearchParams['pathKey'],\n      instruction: routerSearchParams['instruction'],\n      // comments\n      comment: routerSearchParams['comment'],\n      changesInspectorTab: routerSearchParams['changesInspectorTab'] as 'history' | 'review',\n    }\n  }, [routerState, routerSearchParams, initialPreviewUrl])\n\n  const structureParams = useMemo<StructureDocumentPaneParams>(() => {\n    const pruned = pruneObject({\n      inspect: params.inspect,\n      path: params.path,\n      rev: params.rev,\n      since: params.since,\n      template: params.template,\n      templateParams: params.templateParams,\n      view: params.view,\n      // assist\n      pathKey: params.pathKey,\n      instruction: params.instruction,\n      // comments\n      comment: params.comment,\n      changesInspectorTab: params.changesInspectorTab,\n    })\n    return pruned\n  }, [\n    params.changesInspectorTab,\n    params.comment,\n    params.inspect,\n    params.instruction,\n    params.path,\n    params.pathKey,\n    params.rev,\n    params.since,\n    params.template,\n    params.templateParams,\n    params.view,\n  ])\n\n  const searchParams = useMemo<PresentationSearchParams>(() => {\n    const pruned = pruneObject({\n      perspective: params.perspective,\n      preview: params.preview,\n      viewport: params.viewport,\n    })\n    return pruned\n  }, [params.perspective, params.preview, params.viewport])\n\n  const routerStateRef = useRef(routerState)\n\n  useEffect(() => {\n    routerStateRef.current = routerState\n  }, [routerState])\n\n  const [navigationHistory, setNavigationHistory] = useState<RouterState[]>([routerState])\n\n  const navigate = useCallback<PresentationNavigate>(\n    (nextState, nextSearchState = {}, forceReplace) => {\n      // Force navigation to use published IDs only\n      if (nextState.id) nextState.id = getPublishedId(nextState.id)\n\n      // Extract type, id and path as 'routerState'\n      const {_searchParams: routerSearchParams, ...routerState} = routerStateRef.current\n\n      // Convert array of search params to an object\n      const routerSearchState = (routerSearchParams || []).reduce((acc, [key, value]) => {\n        acc[key as keyof CombinedSearchParams] = value as undefined | 'history' | 'review'\n        return acc\n      }, {} as CombinedSearchParams)\n\n      // Merge routerState and incoming state\n      const state: RouterState = pruneObject({\n        ...routerState,\n        ...nextState,\n      })\n\n      // Merge routerSearchState and incoming searchState\n      const searchState = pruneObject({\n        ...routerSearchState,\n        ...nextSearchState,\n      })\n\n      // If the document has changed, clear the template and templateParams\n      if (routerState.id !== state['id']) {\n        delete searchState.template\n        delete searchState.templateParams\n      }\n\n      state._searchParams = Object.entries(searchState).reduce(\n        (acc, [key, value]) => [...acc, [key, value] as SearchParam],\n        [] as SearchParam[],\n      )\n\n      const replace = forceReplace ?? searchState.preview === frameStateRef.current.url\n\n      setNavigationHistory((prev) => [...prev, state])\n      routerNavigate(state, {replace})\n    },\n    [routerNavigate, frameStateRef],\n  )\n\n  return {\n    navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  }\n}\n","import type {Controller} from '@sanity/comlink'\nimport {useCallback, useEffect, useState} from 'react'\nimport {POPUP_CHECK_INTERVAL} from './constants'\n\n/**\n * A hook for managing popup Window contexts\n *\n * This hook handles:\n * - Opening new popup Windows, and adding them as targets to the controller\n * - Tracking existing popup windows, and cleaning up closed popups\n *\n * @param controller - Comlink controller instance that manages communication\n * between Window contexts\n *\n * @returns An object containing:\n * - popups: A Set of currently open popup Window objects\n * - open: Function to open a new popup Window with the specified URL\n *\n */\nexport const usePopups = (\n  controller?: Controller,\n): {\n  popups: Set<Window>\n  open: (url: string) => void\n} => {\n  // State to keep track of open popup windows\n  const [popups, setPopups] = useState<Set<Window>>(() => new Set())\n\n  // Function to open a new popup window\n  const open = useCallback((url: string) => {\n    const source = window.open(url, '_blank')\n    if (source) {\n      setPopups((prev) => new Set(prev).add(source))\n    }\n  }, [])\n\n  // Handles syncing the existing popups with the controller\n  useEffect(() => {\n    const unsubs: Array<() => void> = []\n    if (popups.size && controller) {\n      // loop popups and add targets\n      for (const source of popups) {\n        if (source && 'closed' in source && !source.closed) {\n          unsubs.push(controller.addTarget(source))\n        }\n      }\n    }\n    return () => {\n      unsubs.forEach((unsub) => unsub())\n    }\n  }, [controller, popups])\n\n  // Checks for closed popups and removes them from the tracked Set\n  useEffect(() => {\n    if (popups.size) {\n      const interval = setInterval(() => {\n        const closed = new Set<Window>()\n        for (const source of popups) {\n          if (source && 'closed' in source && source.closed) {\n            closed.add(source)\n          }\n        }\n        if (closed.size) {\n          setPopups((prev) => {\n            const next = new Set(prev)\n            for (const source of closed) {\n              next.delete(source)\n            }\n            return next\n          })\n        }\n      }, POPUP_CHECK_INTERVAL)\n\n      return () => {\n        clearInterval(interval)\n      }\n    }\n\n    return\n  }, [popups])\n\n  return {popups, open}\n}\n","import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {definePreviewUrl} from '@sanity/preview-url-secret/define-preview-url'\nimport {startTransition, useEffect, useMemo, useRef, useState} from 'react'\nimport {useClient, useCurrentUser, type SanityClient} from 'sanity'\nimport {suspend} from 'suspend-react'\nimport {API_VERSION} from './constants'\nimport {useActiveWorkspace} from './internals'\nimport type {PreviewUrlOption} from './types'\n\nexport function usePreviewUrl(\n  previewUrl: PreviewUrlOption,\n  toolName: string,\n  studioPreviewPerspective: 'published' | 'previewDrafts',\n  previewSearchParam: string | null,\n  canCreateUrlPreviewSecrets: boolean,\n): URL {\n  const client = useClient({apiVersion: API_VERSION})\n  const workspace = useActiveWorkspace()\n  const basePath = workspace?.activeWorkspace?.basePath || '/'\n  const workspaceName = workspace?.activeWorkspace?.name || 'default'\n  const deps = useSuspendCacheKeys(toolName, basePath, workspaceName, previewSearchParam)\n  const previewUrlSecret = usePreviewUrlSecret(\n    (canCreateUrlPreviewSecrets && typeof previewUrl === 'object') ||\n      typeof previewUrl === 'function',\n    deps,\n  )\n\n  return suspend(async () => {\n    if (typeof previewUrl === 'string') {\n      const resolvedUrl = new URL(previewUrl, location.origin)\n      let resultUrl = resolvedUrl\n      try {\n        if (previewSearchParam) {\n          const restoredUrl = new URL(previewSearchParam, resolvedUrl)\n          if (restoredUrl.origin === resolvedUrl.origin) {\n            resultUrl = restoredUrl\n          }\n        }\n      } catch {\n        // ignore\n      }\n      // Prevent infinite recursion\n      if (\n        location.origin === resultUrl.origin &&\n        (resultUrl.pathname.startsWith(`${basePath}/`) || resultUrl.pathname === basePath)\n      ) {\n        return resolvedUrl\n      }\n      return resultUrl\n    }\n    const resolvePreviewUrl =\n      typeof previewUrl === 'object' ? definePreviewUrl<SanityClient>(previewUrl) : previewUrl\n    const resolvedUrl = await resolvePreviewUrl({\n      client,\n      previewUrlSecret: previewUrlSecret!,\n      studioPreviewPerspective,\n      previewSearchParam,\n      studioBasePath: basePath,\n    })\n    return new URL(resolvedUrl, location.origin)\n  }, [...deps, previewUrlSecret]) satisfies URL\n}\n\n// https://github.com/pmndrs/suspend-react?tab=readme-ov-file#making-cache-keys-unique\nconst resolveUUID = Symbol()\n\nfunction useSuspendCacheKeys(\n  toolName: string,\n  basePath: string,\n  workspaceName: string,\n  previewSearchParam: string | null,\n) {\n  // Allow busting the cache when the Presentation Tool is reloaded, without causing it to suspend on every render that changes the `preview` parameter\n  const [cachedPreviewSearchParam, setCachedPreviewSearchParam] = useState(\n    () => previewSearchParam || '',\n  )\n  const timeoutRef = useRef(0)\n  useEffect(() => {\n    if (cachedPreviewSearchParam && previewSearchParam) {\n      // Handle resets, like when the Presentation Tool is clicked in the navbar\n      window.clearTimeout(timeoutRef.current)\n      return () => {\n        timeoutRef.current = window.setTimeout(() => {\n          setCachedPreviewSearchParam('')\n        }, 100)\n      }\n    }\n    return\n  }, [cachedPreviewSearchParam, previewSearchParam])\n\n  const currentUser = useCurrentUser()\n  return useMemo(\n    () => [\n      // Cache based on a few specific conditions\n      '@sanity/presentation',\n      basePath,\n      workspaceName,\n      toolName,\n      currentUser?.id,\n      resolveUUID,\n      cachedPreviewSearchParam,\n    ],\n    [basePath, currentUser?.id, toolName, workspaceName, cachedPreviewSearchParam],\n  )\n}\n\nfunction usePreviewUrlSecret(enabled: boolean, deps: (string | symbol | undefined)[]) {\n  const client = useClient({apiVersion: API_VERSION})\n  const currentUser = useCurrentUser()\n  const [secretLastExpiredAt, setSecretLastExpiredAt] = useState<string>('')\n\n  const previewUrlSecret = enabled\n    ? suspend(async () => {\n        return await createPreviewSecret(\n          client,\n          '@sanity/presentation',\n          typeof window === 'undefined' ? '' : location.href,\n          currentUser?.id,\n        )\n      }, [...deps, secretLastExpiredAt])\n    : null\n\n  useEffect(() => {\n    if (!previewUrlSecret) return\n    const timeout = setTimeout(() => {\n      startTransition(() => setSecretLastExpiredAt(previewUrlSecret.expiresAt.toString()))\n    }, previewUrlSecret.expiresAt.getTime() - Date.now())\n    return () => clearTimeout(timeout)\n  }, [previewUrlSecret])\n\n  return previewUrlSecret?.secret || null\n}\n","import type {Status, StatusEvent} from '@sanity/comlink'\nimport {useCallback, useMemo, useState} from 'react'\n\n/**\n * A hook that manages and returns the connection status of multiple channels\n *\n * @returns {[string, (event: StatusEvent) => void]} - An array containing the\n * current status and a function to update the status based on incoming events\n *\n * The status can be one of the following:\n * - 'connected': If any channel is connected\n * - 'connecting': If the first connection is being established\n * - 'reconnecting': If a reconnection is in progress\n * - 'idle': If no connections have been made yet\n *\n * The function to update the status takes a `StatusEvent` object which includes\n * the channel and the status\n */\nexport function useStatus(): [string, (event: StatusEvent) => void] {\n  // State to keep track of the status of each channel\n  const [statusMap, setStatusMap] = useState(\n    new Map<string, {status: Status; hasConnected: boolean}>(),\n  )\n\n  // Memoized computation of the overall status based on the status of individual channels\n  const status = useMemo(() => {\n    const values = Array.from(statusMap.values())\n    // If any channel is connected, return the `connected` status\n    if (values.find(({status}) => status === 'connected')) {\n      return 'connected'\n    }\n    // If the initial connection is being established, return `connecting` status\n    const handshaking = values.filter(({status}) => status === 'handshaking')\n    if (handshaking.length) {\n      return handshaking.some(({hasConnected}) => !hasConnected) ? 'connecting' : 'reconnecting'\n    }\n    // If nothing has happened yet, return `idle` status\n    return 'idle'\n  }, [statusMap])\n\n  // Callback to update the status map based on the received event\n  const setStatusFromEvent = useCallback((event: StatusEvent) => {\n    setStatusMap((prev) => {\n      const next = new Map(prev)\n      if (event.status === 'disconnected') {\n        // Remove the channel from the map if a disconnect event is received\n        next.delete(event.connection)\n      } else {\n        // Update the status and connection flag for the channel\n        const hasConnected =\n          next.get(event.connection)?.hasConnected || event.status === 'connected'\n        next.set(event.connection, {status: event.status, hasConnected})\n      }\n      return next\n    })\n  }, [])\n\n  // Return the overall status and the function to update the status\n  return [status, setStatusFromEvent]\n}\n","import {\n  createCompatibilityActors,\n  isAltKey,\n  isHotkey,\n  type PreviewKitNodeMsg,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {studioPath} from '@sanity/client/csm'\nimport {\n  createConnectionMachine,\n  createController,\n  type Controller,\n  type Message,\n} from '@sanity/comlink'\nimport {BoundaryElementProvider, Flex} from '@sanity/ui'\nimport {\n  lazy,\n  Suspense,\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type ReactElement,\n} from 'react'\nimport {useDataset, useProjectId, type Path, type SanityDocument, type Tool} from 'sanity'\nimport {useRouter, type RouterContextValue} from 'sanity/router'\nimport {styled} from 'styled-components'\nimport {useEffectEvent} from 'use-effect-event'\nimport {\n  COMMENTS_INSPECTOR_NAME,\n  DEFAULT_TOOL_NAME,\n  EDIT_INTENT_MODE,\n  LIVE_DRAFT_EVENTS_ENABLED,\n} from './constants'\nimport {useUnique, useWorkspace, type CommentIntentGetter} from './internals'\nimport {debounce} from './lib/debounce'\nimport {SharedStateProvider} from './overlays/SharedStateProvider'\nimport {Panel} from './panels/Panel'\nimport {Panels} from './panels/Panels'\nimport {PresentationContent} from './PresentationContent'\nimport {PresentationNavigateProvider} from './PresentationNavigateProvider'\nimport {usePresentationNavigator} from './PresentationNavigator'\nimport {PresentationParamsProvider} from './PresentationParamsProvider'\nimport {PresentationProvider} from './PresentationProvider'\nimport {Preview} from './preview/Preview'\nimport {\n  ACTION_IFRAME_LOADED,\n  ACTION_IFRAME_REFRESH,\n  ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n  presentationReducer,\n  presentationReducerInit,\n} from './reducers/presentationReducer'\nimport {RevisionSwitcher} from './RevisionSwitcher'\nimport type {\n  FrameState,\n  PresentationNavigate,\n  PresentationPerspective,\n  PresentationPluginOptions,\n  PresentationStateParams,\n  PresentationViewport,\n  StructureDocumentPaneParams,\n  VisualEditingConnection,\n} from './types'\nimport {useDocumentsOnPage} from './useDocumentsOnPage'\nimport {useMainDocument} from './useMainDocument'\nimport {useParams} from './useParams'\nimport {usePopups} from './usePopups'\nimport {usePreviewUrl} from './usePreviewUrl'\nimport {useStatus} from './useStatus'\n\nconst LoaderQueries = lazy(() => import('./loader/LoaderQueries'))\nconst LiveQueries = lazy(() => import('./loader/LiveQueries'))\nconst PostMessageDocuments = lazy(() => import('./overlays/PostMessageDocuments'))\nconst PostMessageFeatures = lazy(() => import('./features/PostMessageFeatures'))\nconst PostMessageRefreshMutations = lazy(() => import('./editor/PostMessageRefreshMutations'))\nconst PostMessagePerspective = lazy(() => import('./PostMessagePerspective'))\nconst PostMessagePreviewSnapshots = lazy(() => import('./editor/PostMessagePreviewSnapshots'))\nconst PostMessageSchema = lazy(() => import('./overlays/schema/PostMessageSchema'))\n\nconst Container = styled(Flex)`\n  overflow-x: auto;\n`\n\nexport default function PresentationTool(props: {\n  tool: Tool<PresentationPluginOptions>\n  canCreateUrlPreviewSecrets: boolean\n  canToggleSharePreviewAccess: boolean\n  canUseSharedPreviewAccess: boolean\n}): ReactElement {\n  const {canCreateUrlPreviewSecrets, canToggleSharePreviewAccess, canUseSharedPreviewAccess, tool} =\n    props\n  const components = tool.options?.components\n  const _previewUrl = tool.options?.previewUrl\n  const name = tool.name || DEFAULT_TOOL_NAME\n  const {unstable_navigator, unstable_header} = components || {}\n\n  const {navigate: routerNavigate, state: routerState} = useRouter() as RouterContextValue & {\n    state: PresentationStateParams\n  }\n  const routerSearchParams = useUnique(Object.fromEntries(routerState._searchParams || []))\n\n  const initialPreviewUrl = usePreviewUrl(\n    _previewUrl || '/',\n    name,\n    routerSearchParams['perspective'] === 'published' ? 'published' : 'previewDrafts',\n    routerSearchParams['preview'] || null,\n    canCreateUrlPreviewSecrets,\n  )\n  const canSharePreviewAccess = useMemo<boolean>(() => {\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'draftMode' in _previewUrl &&\n      _previewUrl.draftMode\n    ) {\n      // eslint-disable-next-line no-console\n      console.warn('previewUrl.draftMode is deprecated, use previewUrl.previewMode instead')\n      return _previewUrl.draftMode.shareAccess !== false\n    }\n    if (\n      _previewUrl &&\n      typeof _previewUrl === 'object' &&\n      'previewMode' in _previewUrl &&\n      _previewUrl.previewMode\n    ) {\n      return _previewUrl.previewMode.shareAccess !== false\n    }\n    return false\n  }, [_previewUrl])\n\n  const [devMode] = useState(() => {\n    const option = tool.options?.devMode\n\n    if (typeof option === 'function') return option()\n    if (typeof option === 'boolean') return option\n\n    return typeof window !== 'undefined' && window.location.hostname === 'localhost'\n  })\n\n  const targetOrigin = useMemo(() => {\n    return initialPreviewUrl.origin\n  }, [initialPreviewUrl.origin])\n\n  const iframeRef = useRef<HTMLIFrameElement>(null)\n\n  const [controller, setController] = useState<Controller>()\n  const [visualEditingComlink, setVisualEditingComlink] = useState<VisualEditingConnection | null>(\n    null,\n  )\n\n  const frameStateRef = useRef<FrameState>({\n    title: undefined,\n    url: undefined,\n  })\n\n  const {\n    navigate: _navigate,\n    navigationHistory,\n    params,\n    searchParams,\n    structureParams,\n  } = useParams({\n    initialPreviewUrl,\n    routerNavigate,\n    routerState,\n    routerSearchParams,\n    frameStateRef,\n  })\n\n  // Most navigation events should be debounced, so use this unless explicitly needed\n  const navigate = useMemo(() => debounce<PresentationNavigate>(_navigate, 50), [_navigate])\n\n  const [state, dispatch] = useReducer(presentationReducer, {}, presentationReducerInit)\n\n  const perspective = useMemo(\n    () => (params.perspective ? 'published' : 'previewDrafts'),\n    [params.perspective],\n  )\n\n  const viewport = useMemo(() => (params.viewport ? 'mobile' : 'desktop'), [params.viewport])\n\n  const [documentsOnPage, setDocumentsOnPage] = useDocumentsOnPage(perspective, frameStateRef)\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  const mainDocumentState = useMainDocument({\n    // Prevent flash of content by using immediate navigation\n    navigate: _navigate,\n    navigationHistory,\n    path: params.preview,\n    previewUrl: tool.options?.previewUrl,\n    resolvers: tool.options?.resolve?.mainDocuments,\n  })\n\n  const [overlaysConnection, setOverlaysConnection] = useStatus()\n  const [loadersConnection, setLoadersConnection] = useStatus()\n  const [previewKitConnection, setPreviewKitConnection] = useStatus()\n\n  const {open: handleOpenPopup} = usePopups(controller)\n\n  const isLoading = state.iframe.status === 'loading'\n\n  useEffect(() => {\n    const target = iframeRef.current?.contentWindow\n\n    if (!target || isLoading) return\n\n    const controller = createController({targetOrigin})\n    controller.addTarget(target)\n    setController(controller)\n\n    return () => {\n      controller.destroy()\n      setController(undefined)\n    }\n  }, [targetOrigin, isLoading])\n\n  const handleNavigate = useEffectEvent<typeof navigate>(\n    (nextState, nextSearchState, forceReplace) =>\n      navigate(nextState, nextSearchState, forceReplace),\n  )\n  useEffect(() => {\n    if (!controller) return\n\n    const comlink = controller.createChannel<VisualEditingControllerMsg, VisualEditingNodeMsg>(\n      {\n        name: 'presentation',\n        heartbeat: true,\n        connectTo: 'visual-editing',\n      },\n      createConnectionMachine<VisualEditingControllerMsg, VisualEditingNodeMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingControllerMsg>(),\n      }),\n    )\n\n    comlink.on('visual-editing/focus', (data) => {\n      if (!('id' in data)) return\n      handleNavigate({\n        type: data.type,\n        id: data.id,\n        path: data.path,\n      })\n    })\n\n    comlink.on('visual-editing/navigate', (data) => {\n      const {title, url} = data\n      if (frameStateRef.current.url !== url) {\n        handleNavigate({}, {preview: url})\n      }\n      frameStateRef.current = {title, url}\n    })\n\n    comlink.on('visual-editing/meta', (data) => {\n      frameStateRef.current.title = data.title\n    })\n\n    comlink.on('visual-editing/toggle', (data) => {\n      dispatch({\n        type: ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE,\n        enabled: data.enabled,\n      })\n    })\n\n    comlink.on('visual-editing/documents', (data) => {\n      setDocumentsOnPage(\n        'visual-editing',\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data.perspective as unknown as any,\n        data.documents,\n      )\n    })\n\n    comlink.on('visual-editing/refreshing', (data) => {\n      if (data.source === 'manual') {\n        clearTimeout(refreshRef.current)\n      } else if (data.source === 'mutation') {\n        dispatch({type: ACTION_IFRAME_REFRESH})\n      }\n    })\n\n    comlink.on('visual-editing/refreshed', () => {\n      dispatch({type: ACTION_IFRAME_LOADED})\n    })\n\n    comlink.onStatus(setOverlaysConnection)\n\n    const stop = comlink.start()\n    setVisualEditingComlink(comlink)\n\n    return () => {\n      stop()\n      setVisualEditingComlink(null)\n    }\n  }, [controller, handleNavigate, setDocumentsOnPage, setOverlaysConnection, targetOrigin])\n\n  useEffect(() => {\n    if (!controller) return\n    const comlink = controller.createChannel<Message, PreviewKitNodeMsg>(\n      {\n        name: 'presentation',\n        connectTo: 'preview-kit',\n        heartbeat: true,\n      },\n      createConnectionMachine<Message, PreviewKitNodeMsg>().provide({\n        actors: createCompatibilityActors(),\n      }),\n    )\n\n    comlink.onStatus(setPreviewKitConnection)\n\n    comlink.on('preview-kit/documents', (data) => {\n      if (data.projectId === projectId && data.dataset === dataset) {\n        setDocumentsOnPage(\n          'preview-kit',\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          data.perspective as unknown as any,\n          data.documents,\n        )\n      }\n    })\n\n    return comlink.start()\n  }, [controller, dataset, projectId, setDocumentsOnPage, setPreviewKitConnection, targetOrigin])\n\n  const handleFocusPath = useCallback(\n    (nextPath: Path) => {\n      // Don’t need to explicitly set the id here because it was either already set via postMessage or is the same if navigating in the document pane\n      navigate({path: studioPath.toString(nextPath)}, {}, true)\n    },\n    [navigate],\n  )\n\n  const handlePreviewPath = useCallback(\n    (nextPath: string) => {\n      const url = new URL(nextPath, initialPreviewUrl.origin)\n      const preview = url.pathname + url.search\n      if (url.origin === initialPreviewUrl.origin && preview !== params.preview) {\n        navigate({}, {preview})\n      }\n    },\n    [initialPreviewUrl, params, navigate],\n  )\n\n  const handleStructureParams = useCallback(\n    (structureParams: StructureDocumentPaneParams) => {\n      navigate({}, structureParams)\n    },\n    [navigate],\n  )\n\n  // Dispatch a focus or blur message when the id or path change\n  useEffect(() => {\n    if (params.id && params.path) {\n      visualEditingComlink?.post('presentation/focus', {id: params.id, path: params.path})\n    } else {\n      visualEditingComlink?.post('presentation/blur')\n    }\n  }, [params.id, params.path, visualEditingComlink])\n\n  // Dispatch a navigation message when the preview param changes\n  useEffect(() => {\n    if (\n      frameStateRef.current.url &&\n      params.preview &&\n      frameStateRef.current.url !== params.preview\n    ) {\n      frameStateRef.current.url = params.preview\n      if (overlaysConnection !== 'connected' && iframeRef.current) {\n        iframeRef.current.src = `${targetOrigin}${params.preview}`\n      } else {\n        visualEditingComlink?.post('presentation/navigate', {\n          url: params.preview,\n          type: 'replace',\n        })\n      }\n    }\n  }, [overlaysConnection, targetOrigin, params.preview, visualEditingComlink])\n\n  const toggleOverlay = useCallback(\n    () => visualEditingComlink?.post('presentation/toggle-overlay'),\n    [visualEditingComlink],\n  )\n\n  const [displayedDocument, setDisplayedDocument] = useState<\n    Partial<SanityDocument> | null | undefined\n  >(null)\n\n  useEffect(() => {\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n    }\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        toggleOverlay()\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        toggleOverlay()\n      }\n    }\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n    return () => {\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [toggleOverlay])\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const [{navigatorEnabled, toggleNavigator}, PresentationNavigator] = usePresentationNavigator({\n    unstable_navigator,\n  })\n\n  // Handle edge case where the `&rev=` parameter gets \"stuck\"\n  const idRef = useRef<string | undefined>(params.id)\n  useEffect(() => {\n    if (params.rev && idRef.current && params.id !== idRef.current) {\n      navigate({}, {rev: undefined})\n    }\n    idRef.current = params.id\n  })\n\n  const refreshRef = useRef<number>()\n  const handleRefresh = useCallback(\n    (fallback: () => void) => {\n      dispatch({type: ACTION_IFRAME_REFRESH})\n      if (visualEditingComlink) {\n        // We only wait 300ms for the iframe to ack the refresh request before running the fallback logic\n        refreshRef.current = window.setTimeout(fallback, 300)\n        visualEditingComlink.post('presentation/refresh', {\n          source: 'manual',\n          livePreviewEnabled:\n            previewKitConnection === 'connected' || loadersConnection === 'connected',\n        })\n        return\n      }\n      fallback()\n    },\n    [loadersConnection, previewKitConnection, visualEditingComlink],\n  )\n\n  const workspace = useWorkspace()\n\n  const getCommentIntent = useCallback<CommentIntentGetter>(\n    ({id, type, path}) => {\n      if (frameStateRef.current.url) {\n        return {\n          title: frameStateRef.current.title || frameStateRef.current.url,\n          name: 'edit',\n          params: {\n            id,\n            path,\n            type,\n            inspect: COMMENTS_INSPECTOR_NAME,\n            workspace: workspace.name,\n            mode: EDIT_INTENT_MODE,\n            preview: params.preview,\n          },\n        }\n      }\n      return undefined\n    },\n    [params.preview, workspace.name],\n  )\n\n  const setViewport = useCallback(\n    (next: PresentationViewport) => {\n      // Omit the viewport URL search param if the next viewport state is the\n      // default: 'desktop'\n      const viewport = next === 'desktop' ? undefined : 'mobile'\n      navigate({}, {viewport}, true)\n    },\n    [navigate],\n  )\n\n  const setPerspective = useCallback(\n    (next: PresentationPerspective) => {\n      // Omit the perspective URL search param if the next perspective state is\n      // the default: 'previewDrafts'\n      const perspective = next === 'previewDrafts' ? undefined : next\n      navigate({}, {perspective})\n    },\n    [navigate],\n  )\n\n  return (\n    <>\n      <PresentationProvider\n        devMode={devMode}\n        name={name}\n        navigate={navigate}\n        params={params}\n        searchParams={searchParams}\n        structureParams={structureParams}\n      >\n        <PresentationNavigateProvider navigate={navigate}>\n          <PresentationParamsProvider params={params}>\n            <SharedStateProvider comlink={visualEditingComlink}>\n              <Container height=\"fill\">\n                <Panels>\n                  <PresentationNavigator />\n                  <Panel\n                    id=\"preview\"\n                    minWidth={325}\n                    defaultSize={navigatorEnabled ? 50 : 75}\n                    order={3}\n                  >\n                    <Flex direction=\"column\" flex={1} height=\"fill\" ref={setBoundaryElement}>\n                      <BoundaryElementProvider element={boundaryElement}>\n                        <Preview\n                          canSharePreviewAccess={canSharePreviewAccess}\n                          canToggleSharePreviewAccess={canToggleSharePreviewAccess}\n                          canUseSharedPreviewAccess={canUseSharedPreviewAccess}\n                          dispatch={dispatch}\n                          header={unstable_header}\n                          iframe={state.iframe}\n                          initialUrl={initialPreviewUrl}\n                          loadersConnection={loadersConnection}\n                          navigatorEnabled={navigatorEnabled}\n                          onPathChange={handlePreviewPath}\n                          onRefresh={handleRefresh}\n                          openPopup={handleOpenPopup}\n                          overlaysConnection={overlaysConnection}\n                          previewUrl={params.preview}\n                          perspective={perspective}\n                          ref={iframeRef}\n                          setPerspective={setPerspective}\n                          setViewport={setViewport}\n                          targetOrigin={targetOrigin}\n                          toggleNavigator={toggleNavigator}\n                          toggleOverlay={toggleOverlay}\n                          viewport={viewport}\n                          visualEditing={state.visualEditing}\n                        />\n                      </BoundaryElementProvider>\n                    </Flex>\n                  </Panel>\n                  <PresentationContent\n                    documentId={params.id}\n                    documentsOnPage={documentsOnPage}\n                    documentType={params.type}\n                    getCommentIntent={getCommentIntent}\n                    mainDocumentState={mainDocumentState}\n                    onFocusPath={handleFocusPath}\n                    onStructureParams={handleStructureParams}\n                    searchParams={searchParams}\n                    setDisplayedDocument={setDisplayedDocument}\n                    structureParams={structureParams}\n                  />\n                </Panels>\n              </Container>\n            </SharedStateProvider>\n          </PresentationParamsProvider>\n        </PresentationNavigateProvider>\n      </PresentationProvider>\n      <Suspense>\n        {controller &&\n          (LIVE_DRAFT_EVENTS_ENABLED ? (\n            <LiveQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n            />\n          ) : (\n            <LoaderQueries\n              controller={controller}\n              perspective={perspective}\n              liveDocument={displayedDocument}\n              onDocumentsOnPage={setDocumentsOnPage}\n              onLoadersConnection={setLoadersConnection}\n              documentsOnPage={documentsOnPage}\n            />\n          ))}\n        {visualEditingComlink && params.id && params.type && (\n          <PostMessageRefreshMutations\n            comlink={visualEditingComlink}\n            id={params.id}\n            type={params.type}\n            loadersConnection={loadersConnection}\n            previewKitConnection={previewKitConnection}\n          />\n        )}\n        {visualEditingComlink && (\n          <PostMessageSchema comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {visualEditingComlink && documentsOnPage.length > 0 && (\n          <PostMessagePreviewSnapshots\n            comlink={visualEditingComlink}\n            perspective={perspective}\n            refs={documentsOnPage}\n          />\n        )}\n        {visualEditingComlink && <PostMessageDocuments comlink={visualEditingComlink} />}\n        {visualEditingComlink && <PostMessageFeatures comlink={visualEditingComlink} />}\n        {visualEditingComlink && (\n          <PostMessagePerspective comlink={visualEditingComlink} perspective={perspective} />\n        )}\n        {params.id && params.type && (\n          <RevisionSwitcher\n            documentId={params.id}\n            documentRevision={params.rev}\n            documentType={params.type}\n            navigate={navigate}\n            perspective={perspective}\n          />\n        )}\n      </Suspense>\n    </>\n  )\n}\n","import {\n  schemaIdSingleton,\n  schemaType,\n  schemaTypeSingleton,\n} from '@sanity/preview-url-secret/constants'\nimport {useToast} from '@sanity/ui'\nimport {uuid} from '@sanity/uuid'\nimport {useEffect, useState, type ReactElement} from 'react'\nimport {useGrantsStore, useTranslation, type PermissionCheckResult, type Tool} from 'sanity'\nimport {presentationLocaleNamespace} from './i18n'\nimport {PresentationSpinner} from './PresentationSpinner'\nimport PresentationTool from './PresentationTool'\nimport type {PresentationPluginOptions} from './types'\n\nexport default function PresentationToolGrantsCheck(props: {\n  tool: Tool<PresentationPluginOptions>\n}): ReactElement {\n  const {t} = useTranslation(presentationLocaleNamespace)\n  const {previewUrl} = props.tool.options ?? {}\n  const {push: pushToast} = useToast()\n  const willGeneratePreviewUrlSecret =\n    typeof previewUrl === 'object' || typeof previewUrl === 'function'\n  const grantsStore = useGrantsStore()\n  const [previewAccessSharingCreatePermission, setCreateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingUpdatePermission, setUpdateAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewAccessSharingReadPermission, setReadAccessSharingPermission] =\n    useState<PermissionCheckResult | null>(null)\n  const [previewUrlSecretPermission, setPreviewUrlSecretPermission] =\n    useState<PermissionCheckResult | null>(null)\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret) return undefined\n\n    const previewCreateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setCreateAccessSharingPermission)\n    const previewUpdateAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('update', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setUpdateAccessSharingPermission)\n    const previewReadAccessSharingPermissionSubscription = grantsStore\n      .checkDocumentPermission('read', {_id: schemaIdSingleton, _type: schemaTypeSingleton})\n      .subscribe(setReadAccessSharingPermission)\n    const previewUrlSecretPermissionSubscription = grantsStore\n      .checkDocumentPermission('create', {_id: `drafts.${uuid()}`, _type: schemaType})\n      .subscribe(setPreviewUrlSecretPermission)\n\n    return () => {\n      previewCreateAccessSharingPermissionSubscription.unsubscribe()\n      previewUpdateAccessSharingPermissionSubscription.unsubscribe()\n      previewReadAccessSharingPermissionSubscription.unsubscribe()\n      previewUrlSecretPermissionSubscription.unsubscribe()\n    }\n  }, [grantsStore, willGeneratePreviewUrlSecret])\n\n  const canCreateUrlPreviewSecrets = previewUrlSecretPermission?.granted\n\n  useEffect(() => {\n    if (!willGeneratePreviewUrlSecret || canCreateUrlPreviewSecrets !== false) return undefined\n    const raf = requestAnimationFrame(() =>\n      pushToast({\n        closable: true,\n        status: 'error',\n        duration: 30_000,\n        title: t('preview-url-secret.missing-grants'),\n      }),\n    )\n    return () => cancelAnimationFrame(raf)\n  }, [canCreateUrlPreviewSecrets, pushToast, t, willGeneratePreviewUrlSecret])\n\n  if (\n    willGeneratePreviewUrlSecret &&\n    (!previewAccessSharingCreatePermission ||\n      typeof previewAccessSharingCreatePermission.granted === 'undefined' ||\n      !previewAccessSharingUpdatePermission ||\n      typeof previewAccessSharingUpdatePermission.granted === 'undefined' ||\n      !previewUrlSecretPermission ||\n      !previewAccessSharingReadPermission ||\n      typeof previewAccessSharingReadPermission.granted === 'undefined' ||\n      typeof previewUrlSecretPermission.granted === 'undefined')\n  ) {\n    return <PresentationSpinner />\n  }\n\n  return (\n    <PresentationTool\n      {...props}\n      canCreateUrlPreviewSecrets={canCreateUrlPreviewSecrets === true}\n      canToggleSharePreviewAccess={\n        previewAccessSharingCreatePermission?.granted === true &&\n        previewAccessSharingUpdatePermission?.granted === true\n      }\n      canUseSharedPreviewAccess={previewAccessSharingReadPermission?.granted === true}\n    />\n  )\n}\n"],"names":["channelsToComlinkMap","MSG_HANDSHAKE_SYN","MSG_HANDSHAKE_SYN_ACK","MSG_HANDSHAKE_ACK","MSG_RESPONSE","MSG_HEARTBEAT","MSG_DISCONNECT","comlinkToChannelsMap","convertToComlinkEvent","event","data","domain","DOMAIN","to","from","channelId","connectionId","type","convertToChannelsMessage","comlinkMessage","rest","message","responseTo","id","sendAsChannelsMessage","context","params","sources","targetOrigin","forEach","source","postMessage","createCompatibilityActors","listen","createListenLogic","requestMachine","createRequestMachine","provide","actions","debounce","fn","timeout","timer","args","clearTimeout","setTimeout","apply","SharedStateProvider","props","$","_c","comlink","children","t0","Symbol","for","sharedState","useRef","t1","t2","on","state","current","useEffect","t3","key","value","post","setValue","t4","key_0","removeValue","t5","t6","t7","PanelsContext","createContext","displayName","Root","styled","div","Panel","defaultSize","minWidth","maxWidth","order","undefined","useContext","Error","getPanelStyle","registerElement","unregisterElement","style","useLayoutEffect","itemKey","getStoredItem","JSON","parse","localStorage","getItem","setStoredItem","setItem","stringify","getKeyForPanels","panels","map","panel","join","usePanelsStorage","get","_temp2","set","_temp3","setDebounced","panels_0","widths","stored_0","stored","Array","isArray","some","_temp","val","getNextWidth","nextWidth","containerWidth","maxWidthPx","minWidthPx","Math","min","max","getNextWidths","delta","panelBefore","panelAfter","panelsState","initialDragState","prevWidths","initialWidths","nextWidths","pivotPanel","index","findIndex","width","abs","deltaApplied","deltaRemaining","toPrecision","localeCompare","numeric","length","getPanelWidth","getOffset","handleElement","initialOffset","initialHandleElementRect","pointerOffset","clientX","elementOffset","getBoundingClientRect","left","isPanel","element","isResizer","getSortedElements","elements","values","sort","a","b","validateWidths","widthsToValidate","total","reduce","remainingWidth","toFixed","getDefaultWidths","panelsWithoutWidth","remainingWidthTotal","widthsWithNulls","defaultWidth","PanelsWrapper","Panels","panelsEl","Map","setElements","useState","filter","setWidths","activeResizer","setActiveResizer","panelsRef","flexGrow","pointerEvents","id_0","prev","has","next","t8","id_1","prev_0","next_0","delete","t9","window","innerWidth","dragOffset","resizerIndex","resizerRect","startX","dragRef","t10","id_2","elementsArr","el","resizer","resizeElement","acc","el_0","i","acc_0","el_1","i_0","pageX","startDragging","t11","stopDragging","t12","id_3","event_0","preventDefault","stopPropagation","resizer_0","resizeElement_0","offset","rect","prevWidth","i_1","drag","t13","t14","storage","t15","t16","widths_0","storedWidths","validatedStoredWidths","defaultWidths","t17","t18","t19","t20","resizeObserver","ResizeObserver","prevWidths_0","nextWidths_0","prevWidth_0","i_2","observe","disconnect","t21","t22","t23","t24","ErrorCard","onContinueAnyway","onRetry","restProps","t","useTranslation","presentationLocaleNamespace","retryButton","continueAnywayButton","Container","encodeQueryString","parts","Object","entries","resolveQueryStringFromParams","nextParams","allowed","safeNextParams","includes","obj","BackLink","forwardRef","ref","searchParams","_searchParams","ReferenceChildLink","documentId","documentType","parentRefPath","template","PresentationPaneRouterProvider","onStructureParams","structureParams","refs","routerState","resolvePathFromState","useRouter","fromEntries","routerSearchParams","useUnique","path","qs","createPathWithParams","childLinkProps","childId","find","r","_id","getPublishedId","_type","backLinkProps","childLinkProps_0","nextParams_0","inspect","groupIndex","siblingIndex","payload","hasGroupSiblings","groupLength","routerPanesState","ChildLink","ParameterizedLink","closeCurrentAndAfter","handleEditReference","replaceCurrent","_temp4","closeCurrent","_temp5","duplicateCurrent","_temp6","setView","_temp7","setParams","setPayload","_temp8","navigateIntent","_temp9","intentName","intentParams","options_0","console","warn","options","viewId","pane_0","pane","RootLayout","PaneLayout","Flex","WrappedCode","Code","DocumentListPane","mainDocumentState","devMode","usePresentationTool","document","ids","schemaTypeName","title","errorParams","setErrorParams","handleRetry","error","StructureDocumentListPane","r_0","DocumentPane","onFocusPath","templateParams","decodeJsonParams","templateParameters","paneDocumentNode","height","StructureDocumentPane","DocumentPanel","usePreviewState","schemaType","documentPreviewStore","useDocumentPreviewStore","preview","setPreview","subscription","getPreviewStateObservable","subscribe","unsubscribe","ContentEditor","schema","useSchema","props_0","MainDocumentLink","previewState","bb0","draft","published","getPreviewValueWithFallback","byteToHex","push","toString","slice","unsafeStringify","arr","toLowerCase","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","randomUUID","v4","buf","native","rnds","random","usePanelId","uuid","panelId","Resizer","ResizerInner","$disabled","PanelResizer","propId","disabled","isDragging","nativeEvent","onMouseDown","e","onDrag","blur","onDragStop","resetDocumentStyles","bodyStyle","body","documentStyle","documentElement","cursor","userSelect","removeProperty","addEventListener","removeEventListener","PresentationContentWrapper","setDisplayedDocument","getCommentIntent","PresentationContent","documentsOnPage","PresentationNavigateProvider","navigate","_navigate","useLocalState","defaultValue","usePresentationNavigator","unstable_navigator","navigatorProvided","component","_navigatorEnabled","setNavigatorEnabled","navigatorEnabled","toggleNavigator","Component","enabled","NavigatorComponent","navigatorDisabled","Navigator","memo","PresentationParamsProvider","PresentationProvider","name","IFrameElement","motion","iframe","IFrameOverlay","Box","IFrame","animate","initial","onLoad","preventClick","src","variants","useId","replace","viewTransitionName","OpenPreviewButton","openPopup","previewLocationOrigin","previewLocationRoute","currentTarget","href","handleOpenPopup","LaunchIcon","PreviewLocationInput","fontSize","onChange","origin","padding","prefix","suffix","basePath","useActiveWorkspace","activeWorkspace","inputRef","sessionValue","setSessionValue","customValidity","setCustomValidity","handleChange","absoluteValue","startsWith","nextValue","handleKeyDown","handleBlur","icon","ResetIcon","zIndex","QRCodeSVG","lazy","QrCodeLogoSize","QrCodeLogoPadding","QrSize","StyledSanityMonogram","SanityMonogram","MotionSpinner","Spinner","MotionText","Text","MotionMonogram","SharePreviewMenu","canToggleSharePreviewAccess","canUseSharedPreviewAccess","initialUrl","perspective","pushToast","useToast","client","useClient","apiVersion","API_VERSION","currentUser","useCurrentUser","loading","setLoading","enabling","setEnabling","disabling","setDisabling","secret","setSecret","busy","url","useMemo","setSecretSearchParams","setError","handleUnableToToggle","useCallback","closable","status","handleDisableSharing","disablePreviewAccessSharing","location","handleEnableSharing","previewUrlSecret","enablePreviewAccessSharing","handleCopyUrl","navigator","clipboard","writeText","controller","AbortController","usedTags","fetchShareSecret","lastLiveEventId","signal","result","syncTags","fetch","fetchSharedAccessQuery","filterResponse","tag","aborted","live","events","abort","tags","finally","ShareIcon","justifyContent","alignItems","gridTemplateColumns","gridTemplateRows","position","aspectRatio","display","opacity","textWrap","textAlign","CopyIcon","constrainSize","placement","portal","PERSPECTIVE_TITLE_KEY","previewDrafts","PERSPECTIVE_TONES","PERSPECTIVE_ICONS","EditIcon","PublishIcon","PreviewHeaderDefault","canSharePreviewAccess","dispatch","iframeRef","loadersConnection","onPathChange","onRefresh","overlaysConnection","previewUrl","setPerspective","setViewport","toggleOverlay","viewport","visualEditing","overlaysEnabled","toggleViewportSize","ACTION_IFRAME_RELOAD","assign","handleRefresh","previewURL","URL","pathname","search","withoutSecretSearchParams","PanelLeftIcon","whiteSpace","marginTop","marginBottom","lineHeight","borderRadius","margin","t25","t26","t27","t28","t29","RefreshIcon","t30","t31","t32","t33","t34","t35","t36","t37","ChevronDownIcon","t38","t39","t40","t41","createElement","t42","t43","t44","t45","t46","t47","t48","t49","t50","t51","t52","t53","t54","t55","t56","t57","t58","t59","t60","t61","t62","t63","t64","t65","t66","t67","t68","t69","t70","t71","t72","t73","t74","t75","MobileDeviceIcon","DesktopIcon","t76","t77","t78","t79","PreviewHeader","renderDefault","header","minHeight","usePresentationPreviewHeader","MotionFlex","Preview","forwardedRef","prefersReducedMotion","usePrefersReducedMotion","timedOut","setTimedOut","refreshing","somethingIsWrong","setSomethingIsWrong","iframeIsBusy","handleContinueAnyway","setContinueAnyway","continueAnyway","showOverlaysConnectionStatus","setShowOverlaysConnectionState","MAX_TIME_TO_OVERLAYS_CONNECTION","onIFrameLoad","ACTION_IFRAME_LOADED","instance","activeElement","dispatchEvent","MouseEvent","bubbles","cancelable","preventIframeInteraction","canUseViewTransition","useSyncExternalStore","CSS","supports","iframeAnimations","currentViewport","setCurrentViewport","iframeStyle","setIframeStyle","iframeVariants","update","startViewTransition","flushSync","duration","spinnerVariants","inset","backdropFilter","WebkitBackdropFilter","WebkitTransition","sizes","errorVariants","background","desktop","mobile","exit","boxShadow","scale","idle","reloading","active","useEffectOnChange","_callback","initialValue","comparator","previousValueRef","callback","useEffectEvent","RevisionSwitcher","documentRevision","editState","useEditState","rev","_updatedAt","_rev","defineWarnOnce","warned","warnOnceAboutCrossDatasetReference","useDocumentsOnPage","frameStateRef","setPublished","setPreviewDrafts","urlRef","setDocumentsOnPage","sourceDocuments","documents","sourceDocument","_projectId","setCache","cache","isEqual","uniqueDocuments","doc","fnOrObj","arg","Function","getQueryFromResult","resolver","resolve","getParamsFromResult","getRouteContext","route","routes","absolute","match","decode","decodeURIComponent","useMainDocument","navigationHistory","resolvers","relativeUrl","setMainDocumentState","mainDocumentIdRef","at","handleResponse","base","url_0","query","then","doc_0","catch","parseId","rawId","segments","split","shift","parsePath","rawPath","studioPath","urlStringToPath","parseRouterState","pruneObject","useParams","initialPreviewUrl","routerNavigate","since","view","pathKey","instruction","comment","changesInspectorTab","routerStateRef","setNavigationHistory","nextState","nextSearchState","forceReplace","routerSearchState","searchState","usePopups","popups","setPopups","open","Set","add","unsubs","size","source_0","closed","addTarget","interval","setInterval","source_1","source_2","POPUP_CHECK_INTERVAL","clearInterval","unsub","usePreviewUrl","toolName","studioPreviewPerspective","previewSearchParam","canCreateUrlPreviewSecrets","workspace","workspaceName","deps","useSuspendCacheKeys","usePreviewUrlSecret","suspend","resolvedUrl","resultUrl","restoredUrl","definePreviewUrl","studioBasePath","resolveUUID","cachedPreviewSearchParam","setCachedPreviewSearchParam","timeoutRef","secretLastExpiredAt","setSecretLastExpiredAt","createPreviewSecret","startTransition","expiresAt","getTime","Date","now","useStatus","statusMap","setStatusMap","handshaking","status_1","connection","hasConnected_0","hasConnected","setStatusFromEvent","status_0","LoaderQueries","PostMessageDocuments","PostMessageFeatures","PostMessageRefreshMutations","PostMessagePerspective","PostMessagePreviewSnapshots","PostMessageSchema","PresentationTool","tool","components","_previewUrl","DEFAULT_TOOL_NAME","unstable_header","draftMode","shareAccess","previewMode","option","hostname","setController","visualEditingComlink","setVisualEditingComlink","useReducer","presentationReducer","presentationReducerInit","projectId","useProjectId","dataset","useDataset","mainDocuments","setOverlaysConnection","setLoadersConnection","previewKitConnection","setPreviewKitConnection","isLoading","target","contentWindow","createController","destroy","handleNavigate","createChannel","heartbeat","connectTo","createConnectionMachine","actors","ACTION_VISUAL_EDITING_OVERLAYS_TOGGLE","refreshRef","ACTION_IFRAME_REFRESH","onStatus","stop","start","handleFocusPath","nextPath","handlePreviewPath","handleStructureParams","displayedDocument","handleKeyUp","isAltKey","handleKeydown","isHotkey","boundaryElement","setBoundaryElement","PresentationNavigator","idRef","fallback","livePreviewEnabled","useWorkspace","COMMENTS_INSPECTOR_NAME","mode","EDIT_INTENT_MODE","LIVE_DRAFT_EVENTS_ENABLED","PresentationToolGrantsCheck","willGeneratePreviewUrlSecret","grantsStore","useGrantsStore","previewAccessSharingCreatePermission","setCreateAccessSharingPermission","previewAccessSharingUpdatePermission","setUpdateAccessSharingPermission","previewAccessSharingReadPermission","setReadAccessSharingPermission","previewUrlSecretPermission","setPreviewUrlSecretPermission","previewCreateAccessSharingPermissionSubscription","checkDocumentPermission","schemaIdSingleton","schemaTypeSingleton","previewUpdateAccessSharingPermissionSubscription","previewReadAccessSharingPermissionSubscription","previewUrlSecretPermissionSubscription","granted","raf","requestAnimationFrame","cancelAnimationFrame"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44]}},
    {"offset": {"line": 6394, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}