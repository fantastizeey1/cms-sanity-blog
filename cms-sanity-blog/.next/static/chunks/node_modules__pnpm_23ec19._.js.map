{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"hooks.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/visual-editing-helpers/dist/hooks.js"],"sourcesContent":["import { useMemo, useState, useCallback, useEffect, useSyncExternalStore } from \"react\";\nfunction useQueryParams(params) {\n  const stringifiedParams = useMemo(() => JSON.stringify(params || {}), [params]);\n  return useMemo(() => JSON.parse(stringifiedParams), [stringifiedParams]);\n}\nfunction useRevalidate(props) {\n  const { refreshInterval } = props, shouldPause = useShouldPause(), [state, setState] = useState(\"hit\"), startRefresh = useCallback(() => (setState(\"inflight\"), () => setState(\"hit\")), []);\n  return useEffect(() => {\n    if (!refreshInterval || state !== \"hit\")\n      return;\n    const timeout = setTimeout(() => setState(\"stale\"), refreshInterval);\n    return () => clearTimeout(timeout);\n  }, [refreshInterval, state]), useEffect(() => {\n    if (state !== \"hit\")\n      return;\n    const onFocus = () => setState(\"stale\");\n    return window.addEventListener(\"focus\", onFocus), () => window.removeEventListener(\"focus\", onFocus);\n  }, [refreshInterval, state]), useEffect(() => {\n    shouldPause && state === \"hit\" && setState(\"stale\"), !shouldPause && state === \"stale\" && setState(\"refresh\");\n  }, [shouldPause, state]), [state, startRefresh];\n}\nfunction useShouldPause() {\n  const [online, setOnline] = useState(!1);\n  useEffect(() => {\n    setOnline(navigator.onLine);\n    const online2 = () => setOnline(!0), offline = () => setOnline(!1);\n    return window.addEventListener(\"online\", online2), window.addEventListener(\"offline\", offline), () => {\n      window.removeEventListener(\"online\", online2), window.removeEventListener(\"offline\", offline);\n    };\n  }, []);\n  const visibilityState = useSyncExternalStore(\n    onVisibilityChange,\n    () => document.visibilityState,\n    () => \"hidden\"\n  );\n  return !online || visibilityState === \"hidden\";\n}\nfunction onVisibilityChange(onStoreChange) {\n  return document.addEventListener(\"visibilitychange\", onStoreChange), () => document.removeEventListener(\"visibilitychange\", onStoreChange);\n}\nexport {\n  useQueryParams,\n  useRevalidate\n};\n//# sourceMappingURL=hooks.js.map\n"],"names":["useQueryParams","params","stringifiedParams","useMemo","JSON","stringify","parse"],"mappings":";;;;;;;;AAOO,SAASA,eAAeC,MAAAA,EAAsD;IAC7EC,MAAAA,uVAAoBC,UAAAA;qDAAQ,IAAMC,KAAKC,SAAAA,CAAUJ,UAAU,CAAK,CAAA;oDAAA;QAACA,MAAM;KAAC;IACvEE,yUAAAA,WAAAA;kCAAQ,IAAMC,KAAKE,KAAAA,CAAMJ,iBAAiB;iCAAkB;QAACA,iBAAiB;KAAC;AACxF","ignoreList":[0]}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"file":"csm.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/applySourceDocuments.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/resolvedKeyedSourcePath.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bclient%406.24.1_debug%404.4.0/node_modules/%40sanity/client/src/csm/resolveEditUrl.ts"],"sourcesContent":["import {DRAFTS_PREFIX, getPublishedId} from './getPublishedId'\nimport {parseJsonPath} from './jsonPath'\nimport {resolveMapping} from './resolveMapping'\nimport * as paths from './studioPath'\nimport type {\n  Any,\n  ApplySourceDocumentsUpdateFunction,\n  ClientPerspective,\n  ContentSourceMap,\n  ContentSourceMapDocuments,\n  Path,\n  SanityDocument,\n} from './types'\nimport {walkMap} from './walkMap'\n\nconst defaultUpdateFunction = <T = unknown>(changed: T): T => changed\n\n/**\n * Optimistically applies source documents to a result, using the content source map to trace fields.\n * Can be used to apply mutations to documents being edited in a Studio, or any mutation on Content Lake, to a result with extremely low latency.\n * @alpha\n */\nexport function applySourceDocuments<Result = unknown>(\n  result: Result,\n  resultSourceMap: ContentSourceMap | undefined,\n  getCachedDocument: (\n    sourceDocument: ContentSourceMapDocuments[number],\n  ) => Partial<SanityDocument> | null | undefined,\n  updateFn: ApplySourceDocumentsUpdateFunction = defaultUpdateFunction,\n  perspective: ClientPerspective = 'raw',\n): Result {\n  if (!resultSourceMap) return result\n\n  if (perspective !== 'published' && perspective !== 'raw' && perspective !== 'previewDrafts') {\n    throw new Error(`Unknown perspective \"${perspective}\"`)\n  }\n\n  return walkMap(JSON.parse(JSON.stringify(result)), (value, path) => {\n    const resolveMappingResult = resolveMapping(path, resultSourceMap)\n    if (!resolveMappingResult) {\n      // console.warn('no mapping for path', path)\n      return value\n    }\n\n    const {mapping, pathSuffix} = resolveMappingResult\n    if (mapping.type !== 'value') {\n      return value\n    }\n\n    if (mapping.source.type !== 'documentValue') {\n      return value\n    }\n\n    const sourceDocument = resultSourceMap.documents[mapping.source.document]\n    const sourcePath = resultSourceMap.paths[mapping.source.path]\n\n    if (sourceDocument) {\n      const parsedPath = parseJsonPath(sourcePath + pathSuffix)\n      const stringifiedPath = paths.toString(parsedPath as Path)\n\n      // The _id is sometimes used used as `key` in lists, and should not be changed optimistically\n      if (stringifiedPath === '_id') {\n        return value\n      }\n\n      let cachedDocument: Partial<SanityDocument> | null | undefined\n      if (perspective === 'previewDrafts') {\n        cachedDocument = getCachedDocument(\n          sourceDocument._id.startsWith(DRAFTS_PREFIX)\n            ? sourceDocument\n            : {...sourceDocument, _id: `${DRAFTS_PREFIX}${sourceDocument._id}}`},\n        )\n        if (!cachedDocument) {\n          cachedDocument = getCachedDocument(\n            sourceDocument._id.startsWith(DRAFTS_PREFIX)\n              ? {...sourceDocument, _id: getPublishedId(sourceDocument._id)}\n              : sourceDocument,\n          )\n        }\n        if (cachedDocument) {\n          cachedDocument = {\n            ...cachedDocument,\n            _id: getPublishedId(sourceDocument._id),\n            _originalId: sourceDocument._id,\n          }\n        }\n      } else {\n        cachedDocument = getCachedDocument(sourceDocument)\n      }\n\n      if (!cachedDocument) {\n        return value\n      }\n\n      const changedValue = cachedDocument\n        ? paths.get<Result[keyof Result]>(cachedDocument, stringifiedPath, value)\n        : value\n      return value === changedValue\n        ? value\n        : updateFn<Result[keyof Result]>(changedValue as Any, {\n            cachedDocument,\n            previousValue: value as Result[keyof Result],\n            sourceDocument,\n            sourcePath: parsedPath,\n          })\n    }\n\n    return value\n  }) as Result\n}\n","import {jsonPath, parseJsonPath} from './jsonPath'\nimport type {ContentSourceMapParsedPath} from './types'\n\n/**\n * @internal\n */\nexport function resolvedKeyedSourcePath(options: {\n  keyedResultPath: ContentSourceMapParsedPath\n  pathSuffix?: string\n  sourceBasePath: string\n}): ContentSourceMapParsedPath {\n  const {keyedResultPath, pathSuffix, sourceBasePath} = options\n\n  const inferredResultPath = pathSuffix === undefined ? [] : parseJsonPath(pathSuffix)\n\n  const inferredPath = keyedResultPath.slice(keyedResultPath.length - inferredResultPath.length)\n\n  const inferredPathSuffix = inferredPath.length ? jsonPath(inferredPath).slice(1) : ''\n\n  return parseJsonPath(sourceBasePath + inferredPathSuffix)\n}\n","import {createEditUrl} from './createEditUrl'\nimport {studioPathToJsonPath} from './jsonPath'\nimport {resolveEditInfo} from './resolveEditInfo'\nimport type {ResolveEditUrlOptions} from './types'\n\n/** @alpha */\nexport function resolveEditUrl(\n  options: ResolveEditUrlOptions,\n): ReturnType<typeof createEditUrl> | undefined {\n  const {resultSourceMap, studioUrl} = options\n  const resultPath = studioPathToJsonPath(options.resultPath)\n\n  const editInfo = resolveEditInfo({\n    resultPath,\n    resultSourceMap,\n    studioUrl,\n  })\n  if (!editInfo) {\n    return undefined\n  }\n\n  return createEditUrl(editInfo)\n}\n"],"names":["paths.toString","paths.get"],"mappings":";;;;;;;;AAeA,MAAM,wBAAwB,CAAc,UAAkB;AAOvD,SAAS,qBACd,MAAA,EACA,eAAA,EACA,iBAAA,EAGA,WAA+C,qBAAA,EAC/C,cAAiC,KAAA,EACzB;IACR,IAAI,CAAC,iBAAwB,OAAA;IAE7B,IAAI,gBAAgB,eAAe,gBAAgB,SAAS,gBAAgB,iBAC1E,MAAM,IAAI,MAAM,CAAA,qBAAA,EAAwB,WAAW,CAAA,CAAA,CAAG;IAGjD,kRAAA,UAAA,EAAQ,KAAK,KAAA,CAAM,KAAK,SAAA,CAAU,MAAM,CAAC,GAAG,CAAC,OAAO,SAAS;QAC5D,MAAA,2BAAuB,wRAAA,EAAe,MAAM,eAAe;QACjE,IAAI,CAAC,sBAEI,OAAA;QAGH,MAAA,EAAC,OAAA,EAAS,UAAA,CAAA,CAAA,GAAc;QAK9B,IAJI,QAAQ,IAAA,KAAS,WAIjB,QAAQ,MAAA,CAAO,IAAA,KAAS,iBACnB,OAAA;QAGT,MAAM,iBAAiB,gBAAgB,SAAA,CAAU,QAAQ,MAAA,CAAO,QAAQ,CAAA,EAClE,aAAa,gBAAgB,KAAA,CAAM,QAAQ,MAAA,CAAO,IAAI,CAAA;QAE5D,IAAI,gBAAgB;YACZ,MAAA,aAAa,2RAAA,EAAc,aAAa,UAAU,GAClD,6RAAkBA,WAAAA,EAAe,UAAkB;YAGzD,IAAI,oBAAoB,OACf,OAAA;YAGL,IAAA;YACA,IAAA,gBAAgB,kBAAA,CAClB,iBAAiB,kBACf,eAAe,GAAA,CAAI,UAAA,wQAAW,gBAAa,IACvC,iBACA;gBAAC,GAAG,cAAA;gBAAgB,KAAK,0QAAG,gBAAa,GAAG,eAAe,GAAG,CAAA,CAAA,CAAA;YAAG,IAElE,kBAAA,CACH,iBAAiB,kBACf,eAAe,GAAA,CAAI,UAAA,wQAAW,gBAAa,IACvC;gBAAC,GAAG,cAAA;gBAAgB,gRAAK,iBAAA,EAAe,eAAe,GAAG;YAAA,IAC1D,eAAA,GAGJ,kBAAA,CACF,iBAAiB;gBACf,GAAG,cAAA;gBACH,MAAK,2RAAA,EAAe,eAAe,GAAG;gBACtC,aAAa,eAAe,GAAA;YAIhC,CAAA,CAAA,IAAA,iBAAiB,kBAAkB,cAAc,GAG/C,CAAC,gBACI,OAAA;YAGT,MAAM,eAAe,qBACjBC,6QAAAA,EAAgC,gBAAgB,iBAAiB,KAAK,IACtE;YACJ,OAAO,UAAU,eACb,QACA,SAA+B,cAAqB;gBAClD;gBACA,eAAe;gBACf;gBACA,YAAY;YAAA,CACb;QAAA;QAGA,OAAA;IAAA,CACR;AACH;ACvGO,SAAS,wBAAwB,OAAA,EAIT;IAC7B,MAAM,EAAC,eAAA,EAAiB,UAAA,EAAY,cAAA,CAAkB,CAAA,GAAA,SAEhD,qBAAqB,eAAe,KAAA,IAAY,CAAK,CAAA,8QAAA,gBAAA,EAAc,UAAU,GAE7E,eAAe,gBAAgB,KAAA,CAAM,gBAAgB,MAAA,GAAS,mBAAmB,MAAM,GAEvF,qBAAqB,aAAa,MAAA,8QAAS,WAAA,EAAS,YAAY,EAAE,KAAA,CAAM,CAAC,IAAI;IAE5E,QAAA,0RAAA,EAAc,iBAAiB,kBAAkB;AAC1D;ACdO,SAAS,eACd,OAAA,EAC8C;IACxC,MAAA,EAAC,eAAA,EAAiB,SAAA,CAAa,CAAA,GAAA,SAC/B,aAAa,kSAAA,EAAqB,QAAQ,UAAU,GAEpD,sRAAW,kBAAA,EAAgB;QAC/B;QACA;QACA;IAAA,CACD;IACI,IAAA,UAIL,kRAAO,gBAAA,EAAc,QAAQ;AAC/B","ignoreList":[0,1,2]}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 165, "column": 0}, "map": {"version":3,"file":"LiveQueries.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/loader/LiveQueries.tsx"],"sourcesContent":["import {\n  createCompatibilityActors,\n  getQueryCacheKey,\n  type LoaderControllerMsg,\n  type LoaderNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {useQueryParams, useRevalidate} from '@repo/visual-editing-helpers/hooks'\nimport {\n  createClient,\n  type ClientPerspective,\n  type ContentSourceMap,\n  type LiveEventMessage,\n  type QueryParams,\n  type SyncTag,\n} from '@sanity/client'\nimport {applySourceDocuments, getPublishedId} from '@sanity/client/csm'\nimport {\n  createConnectionMachine,\n  type ChannelInstance,\n  type Controller,\n  type StatusEvent,\n} from '@sanity/comlink'\nimport isEqual from 'fast-deep-equal'\n// import {createPreviewSecret} from '@sanity/preview-url-secret/create-secret'\nimport {memo, useDeferredValue, useEffect, useMemo, useState} from 'react'\nimport {\n  useClient,\n  // useCurrentUser,\n  useDataset,\n  useProjectId,\n  type SanityClient,\n  type SanityDocument,\n} from 'sanity'\nimport {useEffectEvent} from 'use-effect-event'\n// import {useEffectEvent} from 'use-effect-event'\nimport {MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL} from '../constants'\nimport type {\n  LiveQueriesState,\n  LiveQueriesStateValue,\n  LoaderConnection,\n  PresentationPerspective,\n} from '../types'\nimport type {DocumentOnPage} from '../useDocumentsOnPage'\n\nexport interface LoaderQueriesProps {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  controller: Controller | undefined\n  perspective: ClientPerspective\n  onLoadersConnection: (event: StatusEvent) => void\n  onDocumentsOnPage: (\n    key: string,\n    perspective: PresentationPerspective,\n    state: DocumentOnPage[],\n  ) => void\n}\n\nexport default function LoaderQueries(props: LoaderQueriesProps): JSX.Element {\n  const {\n    liveDocument: _liveDocument,\n    controller,\n    perspective: activePerspective,\n    onLoadersConnection,\n    onDocumentsOnPage,\n  } = props\n\n  const [comlink, setComlink] = useState<ChannelInstance<LoaderControllerMsg, LoaderNodeMsg>>()\n  const [liveQueries, setLiveQueries] = useState<LiveQueriesState>({})\n\n  const projectId = useProjectId()\n  const dataset = useDataset()\n\n  useEffect(() => {\n    const interval = setInterval(\n      () =>\n        setLiveQueries((liveQueries) => {\n          if (Object.keys(liveQueries).length < 1) {\n            return liveQueries\n          }\n\n          const now = Date.now()\n          const hasAnyExpired = Object.values(liveQueries).some(\n            (liveQuery) =>\n              liveQuery.heartbeat !== false && now > liveQuery.receivedAt + liveQuery.heartbeat,\n          )\n          if (!hasAnyExpired) {\n            return liveQueries\n          }\n          const next = {} as LiveQueriesState\n          for (const [key, value] of Object.entries(liveQueries)) {\n            if (value.heartbeat !== false && now > value.receivedAt + value.heartbeat) {\n              continue\n            }\n            next[key] = value\n          }\n          return next\n        }),\n      MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL,\n    )\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    if (controller) {\n      const comlink = controller.createChannel<LoaderControllerMsg, LoaderNodeMsg>(\n        {\n          name: 'presentation',\n          connectTo: 'loaders',\n          heartbeat: true,\n        },\n        createConnectionMachine<LoaderControllerMsg, LoaderNodeMsg>().provide({\n          actors: createCompatibilityActors<LoaderControllerMsg>(),\n        }),\n      )\n      setComlink(comlink)\n\n      comlink.onStatus(onLoadersConnection)\n\n      comlink.on('loader/documents', (data) => {\n        if (data.projectId === projectId && data.dataset === dataset) {\n          onDocumentsOnPage(\n            'loaders',\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            data.perspective as unknown as any,\n            data.documents,\n          )\n        }\n      })\n\n      comlink.on('loader/query-listen', (data) => {\n        if (data.projectId === projectId && data.dataset === dataset) {\n          if (\n            typeof data.heartbeat === 'number' &&\n            data.heartbeat < MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL\n          ) {\n            throw new Error(\n              `Loader query listen heartbeat interval must be at least ${MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL}ms`,\n            )\n          }\n          setLiveQueries((prev) => ({\n            ...prev,\n            [getQueryCacheKey(data.query, data.params)]: {\n              perspective: data.perspective,\n              query: data.query,\n              params: data.params,\n              receivedAt: Date.now(),\n              heartbeat: data.heartbeat ?? false,\n            } satisfies LiveQueriesStateValue,\n          }))\n        }\n      })\n\n      return comlink.start()\n    }\n    return\n  }, [controller, dataset, onDocumentsOnPage, onLoadersConnection, projectId])\n\n  // const currentUser = useCurrentUser()\n  // const handleCreatePreviewUrlSecret = useEffectEvent(\n  //   async ({projectId, dataset}: {projectId: string; dataset: string}) => {\n  //     try {\n  //       // eslint-disable-next-line no-console\n  //       console.log('Creating preview URL secret for ', {projectId, dataset})\n  //       const {secret} = await createPreviewSecret(\n  //         client,\n  //         '@sanity/presentation',\n  //         typeof window === 'undefined' ? '' : location.href,\n  //         currentUser?.id,\n  //       )\n  //       return {secret}\n  //     } catch (err) {\n  //       // eslint-disable-next-line no-console\n  //       console.error('Failed to generate preview URL secret', err)\n  //       return {secret: null}\n  //     }\n  //   },\n  // )\n  // useEffect(() => {\n  //   return comlink?.on('loader/fetch-preview-url-secret', (data) =>\n  //     handleCreatePreviewUrlSecret(data),\n  //   )\n  // }, [comlink, handleCreatePreviewUrlSecret])\n\n  const [syncTagsInUse] = useState(() => new Set<SyncTag[]>())\n  const [lastLiveEventId, setLastLiveEventId] = useState<string | null>(null)\n  const studioClient = useClient({apiVersion: '2023-10-16'})\n  const clientConfig = useMemo(() => studioClient.config(), [studioClient])\n  const client = useMemo(\n    () =>\n      studioClient.withConfig({\n        resultSourceMap: 'withKeyArraySelector',\n      }),\n    [studioClient],\n  )\n  useEffect(() => {\n    if (comlink) {\n      const {projectId, dataset} = clientConfig\n      // @todo - Can this be migrated/deprecated in favour of emitting\n      // `presentation/perspective` at a higher level?\n      comlink.post('loader/perspective', {\n        projectId: projectId!,\n        dataset: dataset!,\n        perspective: activePerspective,\n      })\n    }\n  }, [comlink, clientConfig, activePerspective])\n\n  const handleSyncTags = useEffectEvent((event: LiveEventMessage) => {\n    const flattenedSyncTags = Array.from(syncTagsInUse).flat()\n    const hasMatchingTags = event.tags.some((tag) => flattenedSyncTags.includes(tag))\n    if (hasMatchingTags) {\n      setLastLiveEventId(event.id)\n    } else {\n      // eslint-disable-next-line no-console\n      console.log('No matching tags found', event.tags, {flattenedSyncTags})\n    }\n  })\n  useEffect(() => {\n    const liveClient = createClient(client.config()).withConfig({\n      // Necessary for the live drafts to work\n      apiVersion: 'vX',\n    })\n    const subscription = liveClient.live\n      .events({includeDrafts: true, tag: 'presentation-loader'})\n      .subscribe({\n        next: (event) => {\n          if (event.type === 'message') {\n            handleSyncTags(event)\n          } else if (event.type === 'restart') {\n            setLastLiveEventId(event.id)\n          } else if (event.type === 'reconnect') {\n            setLastLiveEventId(null)\n          }\n        },\n        // eslint-disable-next-line no-console\n        error: (err) => console.error('Error validating EventSource URL:', err),\n      })\n    return () => subscription.unsubscribe()\n  }, [client, handleSyncTags])\n\n  /**\n   * Defer the liveDocument to avoid unnecessary rerenders on rapid edits\n   */\n  const liveDocument = useDeferredValue(_liveDocument)\n\n  return (\n    <>\n      {Object.entries(liveQueries).map(([key, {query, params, perspective}]) => (\n        <QuerySubscription\n          key={`${key}${perspective}`}\n          projectId={clientConfig.projectId!}\n          dataset={clientConfig.dataset!}\n          perspective={perspective}\n          query={query}\n          params={params}\n          comlink={comlink}\n          client={client}\n          liveDocument={liveDocument}\n          lastLiveEventId={lastLiveEventId}\n          syncTagsInUse={syncTagsInUse}\n        />\n      ))}\n    </>\n  )\n}\n\ninterface SharedProps {\n  /**\n   * The Sanity client to use for fetching data and listening to mutations.\n   */\n  client: SanityClient\n}\n\ninterface QuerySubscriptionProps\n  extends Pick<UseQuerySubscriptionProps, 'client' | 'liveDocument' | 'lastLiveEventId'> {\n  projectId: string\n  dataset: string\n  perspective: ClientPerspective\n  query: string\n  params: QueryParams\n  comlink: LoaderConnection | undefined\n  syncTagsInUse: Set<SyncTag[]>\n}\nfunction QuerySubscriptionComponent(props: QuerySubscriptionProps) {\n  const {\n    projectId,\n    dataset,\n    perspective,\n    query,\n    client,\n    liveDocument,\n    comlink,\n    lastLiveEventId,\n    syncTagsInUse,\n  } = props\n\n  const params = useQueryParams(props.params)\n  const {\n    result,\n    resultSourceMap,\n    syncTags: tags,\n  } = useQuerySubscription({\n    client,\n    liveDocument,\n    params,\n    perspective,\n    query,\n    lastLiveEventId,\n  }) || {}\n\n  const handleQueryChange = useEffectEvent(\n    (\n      comlink: LoaderConnection | undefined,\n      perspective: ClientPerspective,\n      query: string,\n      params: QueryParams,\n      result: unknown,\n      resultSourceMap: ContentSourceMap | undefined,\n      tags: `s1:${string}`[] | undefined,\n    ) => {\n      comlink?.post('loader/query-change', {\n        projectId,\n        dataset,\n        perspective,\n        query,\n        params,\n        result,\n        resultSourceMap,\n        tags,\n      })\n    },\n  )\n  useEffect(() => {\n    if (resultSourceMap) {\n      handleQueryChange(comlink, perspective, query, params, result, resultSourceMap, tags)\n    }\n    if (Array.isArray(tags)) {\n      syncTagsInUse.add(tags)\n      return () => {\n        syncTagsInUse.delete(tags)\n      }\n    }\n\n    return\n  }, [\n    comlink,\n    handleQueryChange,\n    params,\n    perspective,\n    query,\n    result,\n    resultSourceMap,\n    syncTagsInUse,\n    tags,\n  ])\n\n  return null\n}\nconst QuerySubscription = memo(QuerySubscriptionComponent)\nQuerySubscription.displayName = 'Memo(QuerySubscription)'\n\ninterface UseQuerySubscriptionProps extends Required<Pick<SharedProps, 'client'>> {\n  liveDocument: Partial<SanityDocument> | null | undefined\n  query: string\n  params: QueryParams\n  perspective: ClientPerspective\n  lastLiveEventId: string | null\n}\nfunction useQuerySubscription(props: UseQuerySubscriptionProps) {\n  const {liveDocument, client, query, params, perspective, lastLiveEventId} = props\n  const [snapshot, setSnapshot] = useState<{\n    result: unknown\n    resultSourceMap?: ContentSourceMap\n    syncTags?: SyncTag[]\n    lastLiveEventId: string | null\n  } | null>(null)\n  // Make sure any async errors bubble up to the nearest error boundary\n  const [error, setError] = useState<unknown>(null)\n  if (error) throw error\n\n  const [revalidate, startRefresh] = useRevalidate({\n    // Refresh interval is set to zero as we're using the Live Draft Content API to revalidate queries\n    refreshInterval: 0,\n  })\n  const shouldRefetch =\n    revalidate === 'refresh' ||\n    revalidate === 'inflight' ||\n    lastLiveEventId !== snapshot?.lastLiveEventId\n  useEffect(() => {\n    if (!shouldRefetch) {\n      return\n    }\n\n    let fulfilled = false\n    let fetching = false\n    const controller = new AbortController()\n    // eslint-disable-next-line no-inner-declarations\n    async function effect() {\n      const {signal} = controller\n      fetching = true\n      const {result, resultSourceMap, syncTags} = await client.fetch(query, params, {\n        lastLiveEventId,\n        tag: 'presentation-loader',\n        signal,\n        perspective,\n        filterResponse: false,\n        returnQuery: false,\n      })\n      fetching = false\n\n      if (!signal.aborted) {\n        setSnapshot((prev) => ({\n          result: isEqual(prev?.result, result) ? prev?.result : result,\n          resultSourceMap: isEqual(prev?.resultSourceMap, resultSourceMap)\n            ? prev?.resultSourceMap\n            : resultSourceMap,\n          syncTags: isEqual(prev?.syncTags, syncTags) ? prev?.syncTags : syncTags,\n          lastLiveEventId,\n        }))\n        fulfilled = true\n      }\n    }\n    const onFinally = startRefresh()\n    effect()\n      .catch((error) => {\n        fetching = false\n        if (error.name !== 'AbortError') {\n          setError(error)\n        }\n      })\n      .finally(onFinally)\n    return () => {\n      if (!fulfilled && !fetching) {\n        controller.abort()\n      }\n    }\n  }, [client, lastLiveEventId, params, perspective, query, shouldRefetch, startRefresh])\n\n  const {result, resultSourceMap, syncTags} = snapshot ?? {}\n  return useMemo(() => {\n    if (liveDocument && resultSourceMap) {\n      return {\n        result: turboChargeResultIfSourceMap(liveDocument, result, perspective, resultSourceMap),\n        resultSourceMap,\n        syncTags,\n      }\n    }\n    return {result, resultSourceMap, syncTags}\n  }, [liveDocument, perspective, result, resultSourceMap, syncTags])\n}\n\nexport function turboChargeResultIfSourceMap<T = unknown>(\n  liveDocument: Partial<SanityDocument> | null | undefined,\n  result: T,\n  perspective: ClientPerspective,\n  resultSourceMap?: ContentSourceMap,\n): T {\n  if (perspective === 'raw') {\n    throw new Error('turboChargeResultIfSourceMap does not support raw perspective')\n  }\n  return applySourceDocuments(\n    result,\n    resultSourceMap,\n    (sourceDocument) => {\n      // If there's a displayed document, always prefer it\n      if (\n        // If _projectId is set, it's a cross dataset reference and we should skip it\n        !sourceDocument._projectId &&\n        liveDocument?._id &&\n        getPublishedId(liveDocument._id) === getPublishedId(sourceDocument._id)\n      ) {\n        return liveDocument\n      }\n      return undefined\n    },\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (changedValue: any, {previousValue}) => {\n      if (typeof changedValue === 'number' && typeof previousValue === 'string') {\n        // If the string() function was used in the query, we need to convert the source value to a string as well\n        return `${changedValue}`\n      }\n      return changedValue\n    },\n    perspective,\n  )\n}\n"],"names":["LoaderQueries","props","liveDocument","_liveDocument","controller","perspective","activePerspective","onLoadersConnection","onDocumentsOnPage","comlink","setComlink","useState","liveQueries","setLiveQueries","projectId","useProjectId","dataset","useDataset","useEffect","interval","setInterval","Object","keys","length","now","Date","values","some","liveQuery","heartbeat","receivedAt","next","key","value","entries","MIN_LOADER_QUERY_LISTEN_HEARTBEAT_INTERVAL","clearInterval","createChannel","name","connectTo","createConnectionMachine","provide","actors","createCompatibilityActors","onStatus","on","data","documents","Error","prev","getQueryCacheKey","query","params","start","syncTagsInUse","Set","lastLiveEventId","setLastLiveEventId","studioClient","useClient","apiVersion","clientConfig","useMemo","config","client","withConfig","resultSourceMap","post","handleSyncTags","useEffectEvent","event","flattenedSyncTags","Array","from","flat","tags","tag","includes","id","console","log","subscription","createClient","live","events","includeDrafts","subscribe","type","error","err","unsubscribe","useDeferredValue","map","QuerySubscriptionComponent","$","_c","useQueryParams","result","syncTags","useQuerySubscription","t0","comlink_0","perspective_0","query_0","params_0","result_0","resultSourceMap_0","tags_0","handleQueryChange","t1","t2","isArray","add","delete","QuerySubscription","memo","displayName","snapshot","setSnapshot","setError","Symbol","for","refreshInterval","revalidate","startRefresh","useRevalidate","shouldRefetch","fulfilled","fetching","AbortController","effect","signal","fetch","filterResponse","returnQuery","aborted","isEqual","onFinally","catch","error_0","finally","abort","t3","syncTags_0","t4","t5","turboChargeResultIfSourceMap","t6","bb0","applySourceDocuments","sourceDocument","_projectId","_id","getPublishedId","changedValue","previousValue"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}