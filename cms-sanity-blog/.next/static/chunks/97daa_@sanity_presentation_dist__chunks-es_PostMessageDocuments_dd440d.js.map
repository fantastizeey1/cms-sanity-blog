{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"PostMessageDocuments.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bpresentation%401.19.8_%40emotion%2Bis-prop-valid%401.2.2_%40sanity%2Bcolor%403.0.6_debug%404.4.0_reac_epti5vobal4q5xpl7pmbcf6wnm/node_modules/%40sanity/presentation/src/overlays/PostMessageDocuments.tsx"],"sourcesContent":["import type {MutationEvent, ReconnectEvent, WelcomeEvent} from '@sanity/client'\nimport {memo, useEffect, type FunctionComponent} from 'react'\nimport {filter, first, merge, shareReplay} from 'rxjs'\nimport {useClient} from 'sanity'\nimport {API_VERSION} from '../constants'\nimport type {VisualEditingConnection} from '../types'\n\ninterface PostMessageDocumentsProps {\n  comlink: VisualEditingConnection\n}\n\nconst PostMessageDocuments: FunctionComponent<PostMessageDocumentsProps> = (props) => {\n  const {comlink} = props\n  const client = useClient({apiVersion: API_VERSION})\n\n  useEffect(() => {\n    const listener = client\n      .listen(\n        '*[!(_id in path(\"_.**\"))]',\n        {},\n        {\n          effectFormat: 'mendoza',\n          events: ['welcome', 'mutation', 'reconnect'],\n          includePreviousRevision: false,\n          includeResult: false,\n          tag: 'presentation-documents',\n          visibility: 'transaction',\n        },\n      )\n      .pipe(\n        filter(\n          (event): event is WelcomeEvent | ReconnectEvent | MutationEvent =>\n            event.type === 'welcome' || event.type === 'reconnect' || event.type === 'mutation',\n        ),\n      )\n\n    const welcome = listener.pipe(\n      filter((event): event is WelcomeEvent => event.type === 'welcome'),\n      shareReplay({bufferSize: 1, refCount: false}),\n    )\n\n    // When new contexts initialize, they need to explicitly request the welcome\n    // event, as we can't rely on emitting it into the void\n    const unsubscribe = comlink.on('visual-editing/snapshot-welcome', async () => {\n      const event = await new Promise<WelcomeEvent>((resolve) => {\n        welcome.pipe(first()).subscribe((event) => {\n          resolve(event)\n        })\n      })\n      return {event}\n    })\n\n    const reconnect = listener.pipe(\n      filter((event): event is ReconnectEvent => event.type === 'reconnect'),\n    )\n\n    const mutations = listener.pipe(\n      filter((event): event is MutationEvent => event.type === 'mutation'),\n    )\n\n    const events = merge(\n      /**\n       * @deprecated remove 'welcome' here and switch to explict welcome message fetching at next major\n       */\n      welcome,\n      mutations,\n      reconnect,\n    ).subscribe((event) => {\n      comlink.post('presentation/snapshot-event', {event})\n    })\n\n    return () => {\n      unsubscribe()\n      events.unsubscribe()\n    }\n  }, [client, comlink])\n\n  useEffect(() => {\n    return comlink.on('visual-editing/fetch-snapshot', async (data) => {\n      const snapshot = await client.getDocument(data.documentId, {\n        tag: 'document.snapshots',\n      })\n      return {snapshot}\n    })\n  }, [client, comlink])\n\n  useEffect(() => {\n    return comlink.on('visual-editing/mutate', async (data) => {\n      return client.dataRequest('mutate', data, {\n        visibility: 'async',\n        returnDocuments: true,\n      })\n    })\n  }, [client, comlink])\n\n  return null\n}\n\nexport default memo(PostMessageDocuments)\n"],"names":["PostMessageDocuments","props","$","_c","comlink","t0","Symbol","for","apiVersion","API_VERSION","client","useClient","t1","t2","listener","listen","effectFormat","events","includePreviousRevision","includeResult","tag","visibility","pipe","filter","_temp","welcome","_temp2","shareReplay","bufferSize","refCount","unsubscribe","on","event","Promise","resolve","first","subscribe","event_1","reconnect","_temp3","mutations","_temp4","merge","event_5","post","useEffect","t3","t4","data","snapshot","getDocument","documentId","t5","t6","data_0","dataRequest","returnDocuments","memo","type","event_0","event_3","event_4"],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}