{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"index.js","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/optimistic-state/machines/datasetMutatorMachine.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/comlink/index.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/History.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/Meta.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/util/useDragEvents.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/schema/useSchema.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/context-menu/contextMenuItems.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/context-menu/ContextMenu.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/util/getLinkHref.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/ElementOverlay.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/preview/usePreviewSnapshots.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/OverlayDragGroupRect.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/OverlayDragInsertMarker.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/OverlayDragPreview.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/OverlayMinimapPrompt.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/elementsReducer.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/overlayStateReducer.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/preview/PreviewSnapshotsProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/schema/SchemaProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/shared-state/SharedStateProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/usePerspectiveSync.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/useReportDocuments.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/Overlays.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/useController.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/Refresh.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/VisualEditing.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/%40sanity%2Bvisual-editing%402.10.6_%40sanity%2Bclient%406.24.1_next%4015.1.0_%40babel%2Bcore%407.26.0_react-dom%40_ko5w3ask4qoynibeti2zkovaxm/node_modules/%40sanity/visual-editing/src/ui/optimistic-state/machines/createSharedListener.ts"],"sourcesContent":["/**\n * The logic here is intended to live inside a preview iframe, and listen to events from the parent frame.\n * It also supports running in a \"detached\" mode, where it has to setup authenticated EventSource conenctions and perform data fetching itself.\n */\n\nimport {type SanityClient} from '@sanity/client'\nimport {\n  createSharedListener,\n  documentMutatorMachine,\n  type DocumentMutatorMachineInput,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {assertEvent, assign, emit, setup, stopChild, type ActorRefFrom} from 'xstate'\nimport type {createDocumentMutator} from '../../comlink'\n\nexport interface DatasetMutatorMachineInput extends Omit<DocumentMutatorMachineInput, 'id'> {\n  client: SanityClient\n  /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n  sharedListener?: ReturnType<typeof createSharedListener>\n}\n\nexport const datasetMutatorMachine = setup({\n  types: {} as {\n    context: {\n      client: SanityClient\n      /** A shared listener can be provided, if not it'll be created using `client.listen()` */\n      sharedListener?: ReturnType<typeof createSharedListener>\n      documents: Record<string, ActorRefFrom<ReturnType<typeof createDocumentMutator>>>\n    }\n    events:\n      | {type: 'observe'; documentId: string}\n      | {type: 'unobserve'; documentId: string}\n      | {type: 'add document actor'; documentId: string}\n      | {type: 'stop document actor'; documentId: string}\n      | DocumentMutatorMachineParentEvent\n    input: DatasetMutatorMachineInput\n    emitted: DocumentMutatorMachineParentEvent\n  },\n  actions: {\n    'emit sync event': emit(({event}) => {\n      assertEvent(event, 'sync')\n      return event\n    }),\n    'emit mutation event': emit(({event}) => {\n      assertEvent(event, 'mutation')\n      return event\n    }),\n    'emit rebased event': emit(({event}) => {\n      assertEvent(event, ['rebased.local', 'rebased.remote'])\n      return event\n    }),\n    'emit pristine event': emit(({event}) => {\n      assertEvent(event, ['pristine'])\n      return event\n    }),\n    'add document actor': assign({\n      documents: ({context, event, spawn}) => {\n        assertEvent(event, 'observe')\n        const id = event.documentId\n        // Adding the same documentId multiple times is a no-op\n        if (context.documents[id]) return context.documents\n        return {\n          ...context.documents,\n          [id]: spawn('documentMutatorMachine', {\n            input: {\n              id,\n              client: context.client,\n              sharedListener: context.sharedListener || createSharedListener(context.client),\n            },\n            id,\n          }),\n        }\n      },\n    }),\n    'stop remote snapshot': stopChild(({context, event}) => {\n      assertEvent(event, 'unobserve')\n      return context.documents[event.documentId]!\n    }),\n    'remove remote snapshot from context': assign({\n      documents: ({context, event}) => {\n        assertEvent(event, 'unobserve')\n        // Removing a non-existing documentId is a no-op\n        if (!context.documents[event.documentId]) return context.documents\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const {[event.documentId]: _, ...documents} = context.documents\n        return documents\n      },\n    }),\n  },\n  actors: {\n    documentMutatorMachine,\n  },\n}).createMachine({\n  /** @xstate-layout N4IgpgJg5mDOIC5QBsD2BjAhsgIhgrgLZgB2ALgMTICWsZpA2gAwC6ioADqrNWdaiXYgAHogC0ADgBMAOgkA2ACyKArBICcTdfKXSANCACeiFQHYZpgMxWV800yYqp6gIyn5AXw8G0WXAWJyCnwSGjpGViEuHj4BIVEEKUt5OSlFU1smFwkFW0sDY0T1GRUXRXkXKVN7HSYJJkUvHwxsPHQiUjIZDgAnWj4SMApCfDJMemY2JBBo3n5BaYSXeVlbKRUsiXdFSxcXfKNERSqZTbr1zVMJNyaQX1aAzpkIah6yQwp0VEJCXkmo7hzOKLRDLFwyFxaSzXKTOKQudSKCQFRDOczqCSWJjwjbHCQqRFebwgEioCBwIT3fztQJkAExebxcQuFEIZaWGRIrF7dSXKTyFSNYlUtodcjdPp0aiDelAhagBLpVmWAmc46mNwSZTyLQuFS3EWPcUvN6FTiA2LykSoq6c6wbCqVUzparKioyRFVfkq1zqNSWIkeIA */\n  id: 'dataset-mutator',\n  context: ({input}) => ({\n    documents: {},\n    client: input.client,\n    sharedListener: input.sharedListener,\n  }),\n\n  on: {\n    'sync': {actions: ['emit sync event']},\n    'mutation': {actions: ['emit mutation event']},\n    'rebased.*': {actions: ['emit rebased event']},\n    'pristine': {actions: ['emit pristine event']},\n    'observe': {\n      actions: ['add document actor'],\n    },\n    'unobserve': {\n      actions: ['stop remote snapshot', 'remove remote snapshot from context'],\n    },\n  },\n\n  initial: 'pristine',\n\n  states: {\n    pristine: {},\n  },\n})\n","import type {SanityClient} from '@sanity/client'\nimport {SanityEncoder, type Transaction} from '@sanity/mutate'\nimport {\n  documentMutatorMachine,\n  type DocumentMutatorMachineParentEvent,\n} from '@sanity/mutate/_unstable_machine'\nimport {enqueueActions, fromPromise} from 'xstate'\nimport type {VisualEditingNode} from '../../types'\nimport {datasetMutatorMachine} from '../optimistic-state/machines/datasetMutatorMachine'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDocumentMutator = (comlink: VisualEditingNode) => {\n  const fetchSnapshot = fromPromise(\n    async ({input, signal}: {input: {id: string; client: SanityClient}; signal: AbortSignal}) => {\n      const {id} = input\n      const {snapshot} = await comlink.fetch(\n        'visual-editing/fetch-snapshot',\n        {documentId: id},\n        {\n          signal,\n        },\n      )\n      return snapshot\n    },\n  )\n\n  const submitMutations = fromPromise(\n    async ({input}: {input: {client: SanityClient; transactions: Transaction[]}}) => {\n      const {transactions} = input\n      for (const transaction of transactions) {\n        const data = SanityEncoder.encodeTransaction(transaction)\n        return comlink.post('visual-editing/mutate', data)\n      }\n    },\n  )\n\n  return documentMutatorMachine.provide({\n    actions: {\n      'send sync event to parent': enqueueActions(({enqueue}) => {\n        // Original action provided by the `documentMutatorMachine`\n        enqueue.sendParent(\n          ({context}) =>\n            ({\n              type: 'sync',\n              id: context.id,\n              document: context.remote!,\n            }) satisfies DocumentMutatorMachineParentEvent,\n        )\n        // Additional action so that we can determine when the snapshot is ready\n        enqueue.emit(({context}) => ({type: 'ready', snapshot: context.local}))\n      }),\n    },\n    actors: {\n      'fetch remote snapshot': fetchSnapshot,\n      'submit mutations as transactions': submitMutations,\n    },\n  })\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const createDatasetMutator = (comlink: VisualEditingNode) => {\n  return datasetMutatorMachine.provide({\n    actors: {\n      documentMutatorMachine: createDocumentMutator(comlink),\n    },\n  })\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {HistoryAdapter, VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const History: FunctionComponent<{\n  comlink: VisualEditingNode\n  history?: HistoryAdapter\n}> = (props) => {\n  const {comlink, history} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/navigate', (data) => {\n      history?.update(data)\n    })\n  }, [comlink, history])\n\n  useEffect(() => {\n    if (history) {\n      return history.subscribe((update) => {\n        update.title = update.title || document.title\n        comlink?.post('visual-editing/navigate', update)\n      })\n    }\n    return\n  }, [comlink, history])\n\n  return null\n}\n","import {useEffect, type FunctionComponent} from 'react'\nimport type {VisualEditingNode} from '../types'\n\n/**\n * @internal\n */\nexport const Meta: FunctionComponent<{\n  comlink: VisualEditingNode\n}> = (props) => {\n  const {comlink} = props\n\n  useEffect(() => {\n    const sendMeta = () => {\n      comlink.post('visual-editing/meta', {title: document.title})\n    }\n\n    const observer = new MutationObserver(([mutation]) => {\n      if (mutation.target.nodeName === 'TITLE') {\n        sendMeta()\n      }\n    })\n\n    observer.observe(document.head, {\n      subtree: true,\n      characterData: true,\n      childList: true,\n    })\n\n    sendMeta()\n\n    return () => observer.disconnect()\n  }, [comlink])\n\n  return null\n}\n","import {at, insert, remove} from '@sanity/mutate'\nimport {get as getFromPath} from '@sanity/util/paths'\nimport {useCallback, useEffect} from 'react'\nimport type {DragEndEvent, DragInsertPosition} from '../types'\nimport {useDocuments} from '../ui/optimistic-state/useDocuments'\nimport {getArrayItemKeyAndParentPath} from './mutations'\n\n// Finds the node that the drag end event was relative to, and the relative\n// position the new element should be inserted in. If the reference node was\n// \"top\" or \"left\", we insert \"after\". If it was \"bottom\" or \"right\", we insert\n// \"before\".\nfunction getReferenceNodeAndInsertPosition(position: DragInsertPosition) {\n  if (position) {\n    const {top, right, bottom, left} = position\n    if (left || top) {\n      return {node: (left ?? top)!.sanity, position: 'after' as const}\n    } else if (right || bottom) {\n      return {node: (right ?? bottom)!.sanity, position: 'before' as const}\n    }\n  }\n  return undefined\n}\n\nexport function useDragEndEvents(): {\n  dispatchDragEndEvent: (event: DragEndEvent) => void\n} {\n  const {getDocument} = useDocuments()\n\n  useEffect(() => {\n    const handler = (e: CustomEvent<DragEndEvent>) => {\n      const {insertPosition, target, preventInsertDefault} = e.detail\n\n      if (preventInsertDefault) return\n\n      const reference = getReferenceNodeAndInsertPosition(insertPosition)\n      if (reference) {\n        const doc = getDocument(target.id)\n        // We must have access to the document actor in order to perform the\n        // necessary mutations. If this is undefined, something went wrong when\n        // resolving the currently in use documents\n        const {node, position} = reference\n        // Get the key of the element that was dragged\n        const {key: targetKey, hasExplicitKey} = getArrayItemKeyAndParentPath(target)\n        // Get the key of the reference element, and path to the parent array\n        const {path: arrayPath, key: referenceItemKey} = getArrayItemKeyAndParentPath(node)\n        // Don't patch if the keys match, as this means the item was only\n        // dragged to its existing position, i.e. not moved\n        if (arrayPath && referenceItemKey && referenceItemKey !== targetKey) {\n          doc.patch(async ({getSnapshot}) => {\n            const snapshot = await getSnapshot()\n            // Get the current value of the element we dragged, as we will need\n            // to clone this into the new position\n            const elementValue = getFromPath(snapshot, target.path)\n\n            if (hasExplicitKey) {\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove({_key: targetKey})),\n                // Insert the cloned dragged item into its new position\n                at(arrayPath, insert(elementValue, position, {_key: referenceItemKey})),\n              ]\n            } else {\n              // handle reordering for primitives\n              return [\n                // Remove the original dragged item\n                at(arrayPath, remove(~~targetKey)),\n                // Insert the cloned dragged item into its new position\n                at(\n                  arrayPath,\n                  insert(\n                    elementValue,\n                    position,\n                    // if target key is < reference, each item in the array's index will be one less due to the previous removal\n                    referenceItemKey > targetKey ? ~~referenceItemKey - 1 : ~~referenceItemKey,\n                  ),\n                ),\n              ]\n            }\n          })\n        }\n      }\n    }\n    window.addEventListener('sanity/dragEnd', handler as EventListener)\n    return () => {\n      window.removeEventListener('sanity/dragEnd', handler as EventListener)\n    }\n  }, [getDocument])\n\n  const dispatchDragEndEvent = useCallback((event: DragEndEvent) => {\n    const customEvent = new CustomEvent<DragEndEvent>('sanity/dragEnd', {\n      detail: event,\n      cancelable: true,\n    })\n    window.dispatchEvent(customEvent)\n  }, [])\n\n  return {dispatchDragEndEvent}\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\nimport type {OverlayElementField, OverlayElementParent} from '../../types'\n\nexport interface SchemaContextValue {\n  getField: (node: SanityNode | SanityStegaNode) => {\n    field: OverlayElementField\n    parent: OverlayElementParent\n  }\n  getType: <T extends 'document' | 'type' = 'document'>(\n    node: SanityNode | SanityStegaNode | string,\n    type?: T,\n  ) => T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined\n  resolvedTypes: ResolvedSchemaTypeMap\n  schema: SchemaType[]\n}\n\nexport const SchemaContext = createContext<SchemaContextValue | null>(null)\n","import {useContext} from 'react'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nexport function useSchema(): SchemaContextValue {\n  const context = useContext(SchemaContext)\n\n  if (!context) {\n    throw new Error('Schema context is missing')\n  }\n\n  return context\n}\n","import type {\n  SanityNode,\n  SchemaArrayItem,\n  SchemaNode,\n  SchemaUnionNode,\n  SchemaUnionOption,\n} from '@repo/visual-editing-helpers'\nimport {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CopyIcon,\n  InsertAboveIcon,\n  InsertBelowIcon,\n  PublishIcon,\n  RemoveIcon,\n  SortIcon,\n  UnpublishIcon,\n} from '@sanity/icons'\nimport type {SchemaType} from '@sanity/types'\nimport {MenuGroup} from '@sanity/ui'\nimport {type FunctionComponent} from 'react'\nimport {InsertMenu} from '../../overlay-components/components/InsertMenu'\nimport type {ContextMenuNode, OverlayElementField, OverlayElementParent} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {\n  getArrayDuplicatePatches,\n  getArrayInsertPatches,\n  getArrayMovePatches,\n  getArrayRemovePatches,\n} from '../../util/mutations'\nimport type {OptimisticDocument} from '../optimistic-state/useDocuments'\n\nexport function getArrayRemoveAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayRemovePatches(node, (await getSnapshot())!))\n}\n\nfunction getArrayInsertAction(\n  node: SanityNode,\n  doc: OptimisticDocument,\n  insertType: string,\n  position: 'before' | 'after',\n): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () => doc.patch(() => getArrayInsertPatches(node, insertType, position))\n}\n\nfunction getDuplicateAction(node: SanityNode, doc: OptimisticDocument): () => void {\n  if (!node.type) throw new Error('Node type is missing')\n  return () =>\n    doc.patch(async ({getSnapshot}) => getArrayDuplicatePatches(node, (await getSnapshot())!))\n}\n\nexport function getContextMenuItems(context: {\n  doc: OptimisticDocument\n  field: OverlayElementField\n  node: SanityNode\n  parent: OverlayElementParent\n}): Promise<ContextMenuNode[]> {\n  const {node, field, parent, doc} = context\n  if (field?.type === 'arrayItem') {\n    return getContextMenuArrayItems({node, field, doc})\n  }\n  if (parent?.type === 'union') {\n    return getContextMenuUnionItems({node, parent, doc})\n  }\n\n  return Promise.resolve([])\n}\n\nfunction getDuplicateItem(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Duplicate',\n      icon: CopyIcon,\n      action: getDuplicateAction(node, doc),\n    },\n  ]\n}\n\nfunction getRemoveItems(context: {doc: OptimisticDocument; node: SanityNode}) {\n  const {node, doc} = context\n  if (!doc) return []\n  return [\n    {\n      type: 'action' as const,\n      label: 'Remove',\n      icon: RemoveIcon,\n      action: getArrayRemoveAction(node, doc),\n    },\n  ]\n}\n\nasync function getMoveItems(\n  context: {\n    doc: OptimisticDocument\n    node: SanityNode\n  },\n  withDivider = true,\n) {\n  const {node, doc} = context\n  if (!doc) return []\n\n  const items: ContextMenuNode[] = []\n  const groupItems: ContextMenuNode[] = []\n\n  const [moveUpPatches, moveDownPatches, moveFirstPatches, moveLastPatches] = await Promise.all([\n    getArrayMovePatches(node, doc, 'previous'),\n    getArrayMovePatches(node, doc, 'next'),\n    getArrayMovePatches(node, doc, 'first'),\n    getArrayMovePatches(node, doc, 'last'),\n  ])\n\n  if (moveFirstPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To top',\n      icon: PublishIcon,\n      action: () => doc.patch(moveFirstPatches),\n    })\n  }\n  if (moveUpPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Up',\n      icon: ArrowUpIcon,\n      action: () => doc.patch(moveUpPatches),\n    })\n  }\n  if (moveDownPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'Down',\n      icon: ArrowDownIcon,\n      action: () => doc.patch(moveDownPatches),\n    })\n  }\n  if (moveLastPatches.length) {\n    groupItems.push({\n      type: 'action',\n      label: 'To bottom',\n      icon: UnpublishIcon,\n      action: () => doc.patch(moveLastPatches),\n    })\n  }\n\n  if (groupItems.length) {\n    items.push({\n      type: 'group',\n      label: 'Move',\n      icon: SortIcon,\n      items: groupItems,\n    })\n    if (withDivider) {\n      items.push({type: 'divider'})\n    }\n  }\n\n  return items\n}\n\nasync function getContextMenuArrayItems(context: {\n  doc: OptimisticDocument\n  field: SchemaArrayItem\n  node: SanityNode\n}): Promise<ContextMenuNode[]> {\n  const {node, field, doc} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  items.push({\n    type: 'action',\n    label: 'Insert before',\n    icon: InsertAboveIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'before'),\n  })\n  items.push({\n    type: 'action',\n    label: 'Insert after',\n    icon: InsertBelowIcon,\n    action: getArrayInsertAction(node, doc, field.name, 'after'),\n  })\n\n  return items\n}\n\nconst InsertMenuWrapper: FunctionComponent<{\n  label: string\n  onSelect: (schemaType: SchemaType) => void\n  parent: SchemaUnionNode<SchemaNode>\n  width: number | undefined\n  boundaryElement: HTMLDivElement | null\n}> = (props) => {\n  const {label, parent, width, onSelect, boundaryElement} = props\n\n  return (\n    <MenuGroup\n      fontSize={1}\n      icon={InsertBelowIcon}\n      padding={2}\n      popover={{\n        arrow: false,\n        constrainSize: true,\n        floatingBoundary: boundaryElement,\n        padding: 0,\n        placement: 'right-start',\n        fallbackPlacements: [\n          'left-start',\n          'right',\n          'left',\n          'right-end',\n          'left-end',\n          'bottom',\n          'top',\n        ],\n        preventOverflow: true,\n        width,\n        __unstable_margins: [4, 4, 4, 4],\n      }}\n      space={2}\n      text={label}\n    >\n      <InsertMenu node={parent} onSelect={onSelect} />\n    </MenuGroup>\n  )\n}\n\nasync function getContextMenuUnionItems(context: {\n  doc: OptimisticDocument\n  node: SanityNode\n  parent: SchemaUnionNode<SchemaNode>\n}): Promise<ContextMenuNode[]> {\n  const {doc, node, parent} = context\n  const items: ContextMenuNode[] = []\n  items.push(...getDuplicateItem(context))\n  items.push(...getRemoveItems(context))\n  items.push(...(await getMoveItems(context)))\n\n  if (parent.options?.insertMenu) {\n    const insertMenuOptions = parent.options.insertMenu || {}\n    const width = insertMenuOptions.views?.some((view) => view.name === 'grid') ? 0 : undefined\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'before')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert before\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n\n    items.push({\n      type: 'custom',\n      component: ({boundaryElement}) => {\n        const onSelect = (schemaType: SchemaType) => {\n          const action = getArrayInsertAction(node, doc, schemaType.name, 'after')\n          action()\n        }\n        return (\n          <InsertMenuWrapper\n            label=\"Insert after\"\n            onSelect={onSelect}\n            parent={parent}\n            width={width}\n            boundaryElement={boundaryElement}\n          />\n        )\n      },\n    })\n  } else {\n    items.push({\n      type: 'group',\n      label: 'Insert before',\n      icon: InsertAboveIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          icon: getNodeIcon(t),\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          action: getArrayInsertAction(node, doc, t.name, 'before'),\n        }\n      }),\n    })\n    items.push({\n      type: 'group',\n      label: 'Insert after',\n      icon: InsertBelowIcon,\n      items: (\n        parent.of.filter((item) => item.type === 'unionOption') as SchemaUnionOption<SchemaNode>[]\n      ).map((t) => {\n        return {\n          type: 'action' as const,\n          label: t.name === 'block' ? 'Paragraph' : t.title || t.name,\n          icon: getNodeIcon(t),\n          action: getArrayInsertAction(node, doc, t.name, 'after'),\n        }\n      }),\n    })\n  }\n\n  return items\n}\n","import {\n  Box,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  Popover,\n  Spinner,\n  Stack,\n  Text,\n  type PopoverMargins,\n} from '@sanity/ui'\nimport {useCallback, useEffect, useMemo, useState, type FunctionComponent} from 'react'\nimport type {ContextMenuNode, ContextMenuProps} from '../../types'\nimport {getNodeIcon} from '../../util/getNodeIcon'\nimport {useDocuments} from '../optimistic-state/useDocuments'\nimport {PopoverPortal} from '../PopoverPortal'\nimport {useSchema} from '../schema/useSchema'\nimport {getContextMenuItems} from './contextMenuItems'\n\nconst POPOVER_MARGINS: PopoverMargins = [-4, 4, -4, 4]\n\nfunction ContextMenuItem(props: {\n  node: ContextMenuNode\n  onDismiss?: () => void\n  boundaryElement: HTMLDivElement | null\n}) {\n  const {node, onDismiss, boundaryElement} = props\n\n  const onClick = useCallback(() => {\n    if (node.type === 'action') {\n      node.action?.()\n      onDismiss?.()\n    }\n  }, [node, onDismiss])\n\n  if (node.type === 'divider') {\n    return <MenuDivider />\n  }\n\n  if (node.type === 'action') {\n    return (\n      <MenuItem\n        fontSize={1}\n        hotkeys={node.hotkeys}\n        icon={node.icon}\n        padding={2}\n        space={2}\n        text={node.label}\n        disabled={!node.action}\n        onClick={onClick}\n      />\n    )\n  }\n\n  if (node.type === 'group') {\n    return (\n      <MenuGroup\n        fontSize={1}\n        icon={node.icon}\n        padding={2}\n        // @todo when this PR lands https://github.com/sanity-io/ui/pull/1454\n        // menu={{\n        //   padding: 0,\n        // }}\n        popover={{\n          arrow: false,\n          constrainSize: true,\n          placement: 'right-start',\n          fallbackPlacements: [\n            'left-start',\n            'right',\n            'left',\n            'right-end',\n            'left-end',\n            'bottom',\n            'top',\n          ],\n          preventOverflow: true,\n          __unstable_margins: POPOVER_MARGINS,\n        }}\n        space={2}\n        text={node.label}\n      >\n        {node.items.map((item, itemIndex) => (\n          <ContextMenuItem\n            key={itemIndex}\n            node={item}\n            onDismiss={onDismiss}\n            boundaryElement={boundaryElement}\n          />\n        ))}\n      </MenuGroup>\n    )\n  }\n\n  if (node.type === 'custom') {\n    const {component: Component} = node\n    return <Component boundaryElement={boundaryElement} />\n  }\n\n  return null\n}\n\nexport const ContextMenu: FunctionComponent<ContextMenuProps> = (props) => {\n  const {\n    node,\n    onDismiss,\n    position: {x, y},\n  } = props\n\n  const [boundaryElement, setBoundaryElement] = useState<HTMLDivElement | null>(null)\n\n  const {getField} = useSchema()\n  const {getDocument} = useDocuments()\n\n  const {field, parent} = getField(node)\n\n  const title = useMemo(() => {\n    return field?.title || field?.name || 'Unknown type'\n  }, [field])\n\n  const [items, setItems] = useState<ContextMenuNode[] | undefined>(undefined)\n\n  useEffect(() => {\n    const fetchContextMenuItems = async () => {\n      const doc = getDocument(node.id)\n      if (!doc) return\n      const items = await getContextMenuItems({node, field, parent, doc})\n      setItems(items)\n    }\n    fetchContextMenuItems()\n  }, [field, node, parent, getDocument])\n\n  const contextMenuReferenceElement = useMemo(() => {\n    return {\n      getBoundingClientRect: () => ({\n        bottom: y,\n        left: x,\n        right: x,\n        top: y,\n        width: 0,\n        height: 0,\n      }),\n    } as HTMLElement\n  }, [x, y])\n\n  const icon = useMemo(() => {\n    return getNodeIcon(field)\n  }, [field])\n\n  return (\n    <PopoverPortal setBoundaryElement={setBoundaryElement} onDismiss={onDismiss}>\n      <Popover\n        __unstable_margins={POPOVER_MARGINS}\n        arrow={false}\n        open\n        placement=\"right-start\"\n        referenceElement={contextMenuReferenceElement}\n        content={\n          <Menu style={{minWidth: 120, maxWidth: 160}}>\n            <Flex gap={2} padding={2}>\n              <Box flex=\"none\">{items ? <Text size={1}>{icon}</Text> : <Spinner size={1} />}</Box>\n\n              <Stack flex={1} space={2}>\n                <Text size={1} weight=\"semibold\">\n                  {items ? title : 'Loading...'}\n                </Text>\n              </Stack>\n            </Flex>\n\n            {items && (\n              <>\n                <MenuDivider />\n                {items.map((item, i) => (\n                  <ContextMenuItem\n                    key={i}\n                    node={item}\n                    onDismiss={onDismiss}\n                    boundaryElement={boundaryElement}\n                  />\n                ))}\n              </>\n            )}\n          </Menu>\n        }\n      >\n        <div\n          key={`${x}-${y}`}\n          style={{\n            position: 'absolute',\n            left: x,\n            top: y,\n          }}\n        />\n      </Popover>\n    </PopoverPortal>\n  )\n}\n","export function getLinkHref(href: string, referer: string): string {\n  try {\n    const parsed = new URL(href, typeof location === 'undefined' ? undefined : location.origin)\n    if (parsed.hash) {\n      const hash = new URL(getLinkHref(parsed.hash.slice(1), referer))\n      return `${parsed.origin}${parsed.pathname}${parsed.search}#${hash.pathname}${hash.search}`\n    }\n    parsed.searchParams.set('preview', referer)\n    return parsed.toString()\n  } catch {\n    return href\n  }\n}\n","import type {PreviewSnapshot} from '@repo/visual-editing-helpers'\nimport {createContext} from 'react'\n\nexport type PreviewSnapshotsContextValue = PreviewSnapshot[]\n\nexport const PreviewSnapshotsContext = createContext<PreviewSnapshotsContextValue | null>(null)\n","import {pathToUrlString} from '@repo/visual-editing-helpers'\nimport {createEditUrl, studioPath} from '@sanity/client/csm'\nimport {DocumentIcon, DragHandleIcon} from '@sanity/icons'\nimport {Box, Card, Flex, Text} from '@sanity/ui'\nimport {\n  isValidElement,\n  memo,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useSyncExternalStore,\n  type CSSProperties,\n  type FunctionComponent,\n  type ReactElement,\n} from 'react'\nimport scrollIntoView from 'scroll-into-view-if-needed'\nimport {styled} from 'styled-components'\nimport {PointerEvents} from '../overlay-components/components/PointerEvents'\nimport type {\n  ElementFocusedState,\n  ElementNode,\n  OverlayComponent,\n  OverlayComponentResolver,\n  OverlayComponentResolverContext,\n  OverlayRect,\n  SanityNode,\n  SanityStegaNode,\n} from '../types'\nimport {getLinkHref} from '../util/getLinkHref'\nimport {usePreviewSnapshots} from './preview/usePreviewSnapshots'\nimport {useSchema} from './schema/useSchema'\n\nconst isReactElementOverlayComponent = (\n  component:\n    | OverlayComponent\n    | {component: OverlayComponent; props?: Record<string, unknown>}\n    | Array<OverlayComponent | {component: OverlayComponent; props?: Record<string, unknown>}>\n    | ReactElement,\n): component is ReactElement => {\n  return isValidElement(component)\n}\n\nexport interface ElementOverlayProps {\n  componentResolver?: OverlayComponentResolver\n  draggable: boolean\n  element: ElementNode\n  focused: ElementFocusedState\n  hovered: boolean\n  isDragging: boolean\n  node: SanityNode | SanityStegaNode\n  rect: OverlayRect\n  showActions: boolean\n  wasMaybeCollapsed: boolean\n  enableScrollIntoView: boolean\n}\n\nconst Root = styled(Card)`\n  background-color: var(--overlay-bg);\n  border-radius: 3px;\n  pointer-events: none;\n  position: absolute;\n  will-change: transform;\n  box-shadow: var(--overlay-box-shadow);\n  transition: none;\n\n  --overlay-bg: transparent;\n  --overlay-box-shadow: inset 0 0 0 1px transparent;\n\n  [data-overlays] & {\n    --overlay-bg: color-mix(in srgb, transparent 95%, var(--card-focus-ring-color));\n    --overlay-box-shadow: inset 0 0 0 2px\n      color-mix(in srgb, transparent 50%, var(--card-focus-ring-color));\n  }\n\n  [data-fading-out] & {\n    transition:\n      box-shadow 1550ms,\n      background-color 1550ms;\n\n    --overlay-bg: rgba(0, 0, 255, 0);\n    --overlay-box-shadow: inset 0 0 0 1px transparent;\n  }\n\n  &[data-focused] {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  }\n\n  &[data-hovered]:not([data-focused]) {\n    transition: none;\n    --overlay-box-shadow: inset 0 0 0 2px var(--card-focus-ring-color);\n  }\n\n  /* [data-unmounted] & {\n    --overlay-box-shadow: inset 0 0 0 1px var(--card-focus-ring-color);\n  } */\n\n  :link {\n    text-decoration: none;\n  }\n`\n\nconst Actions = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  right: 0;\n\n  [data-hovered] & {\n    pointer-events: all;\n  }\n`\n\nconst ActionOpen = styled(Card)`\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n\n  & [data-ui='Text'] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nconst Tab = styled(Flex)`\n  bottom: 100%;\n  cursor: pointer;\n  pointer-events: none;\n  position: absolute;\n  left: 0;\n`\n\nconst Labels = styled(Flex)`\n  display: flex;\n  align-items: center;\n  background-color: var(--card-focus-ring-color);\n  right: 0;\n  border-radius: 3px;\n  & [data-ui='Text'],\n  & [data-sanity-icon] {\n    color: #fff;\n    white-space: nowrap;\n  }\n`\n\nfunction createIntentLink(node: SanityNode) {\n  const {id, type, path, baseUrl, tool, workspace} = node\n\n  return createEditUrl({\n    baseUrl,\n    workspace,\n    tool,\n    type: type!,\n    id,\n    path: pathToUrlString(studioPath.fromString(path)),\n  })\n}\n\nconst ElementOverlayInner: FunctionComponent<ElementOverlayProps> = (props) => {\n  const {element, focused, componentResolver, node, showActions, draggable} = props\n\n  const {getField, getType} = useSchema()\n  const schemaType = getType(node)\n  const {field, parent} = getField(node)\n\n  const href = 'path' in node ? createIntentLink(node) : node.href\n\n  const previewSnapshots = usePreviewSnapshots()\n\n  const title = useMemo(() => {\n    if (!('path' in node)) return undefined\n    return previewSnapshots.find((snapshot) => snapshot._id === node.id)?.title\n  }, [node, previewSnapshots])\n\n  const componentContext = useMemo<OverlayComponentResolverContext | undefined>(() => {\n    if (!('path' in node)) return undefined\n    if (!field || !schemaType) return undefined\n    const type = field.value.type\n\n    return {\n      document: schemaType,\n      element,\n      field,\n      focused: !!focused,\n      node,\n      parent,\n      type,\n    }\n  }, [schemaType, element, field, focused, node, parent])\n\n  const customComponents = useCustomComponents(componentContext, componentResolver)\n\n  const icon = schemaType?.icon ? (\n    <div dangerouslySetInnerHTML={{__html: schemaType.icon}} />\n  ) : (\n    <DocumentIcon />\n  )\n\n  return (\n    <>\n      {showActions ? (\n        <Actions gap={1} paddingBottom={1} data-sanity-overlay-element>\n          <Link href={href} />\n        </Actions>\n      ) : null}\n\n      {title && (\n        <Tab gap={1} paddingBottom={1}>\n          <Labels gap={2} padding={2}>\n            {draggable && (\n              <Box marginRight={1}>\n                <Text className=\"drag-handle\" size={0}>\n                  <DragHandleIcon />\n                </Text>\n              </Box>\n            )}\n            <Text size={0}>{icon}</Text>\n            <Text size={1} weight=\"medium\">\n              {title}\n            </Text>\n          </Labels>\n        </Tab>\n      )}\n\n      {Array.isArray(customComponents)\n        ? customComponents.map(({component: Component, props}, i) => {\n            return (\n              <Component key={i} PointerEvents={PointerEvents} {...componentContext!} {...props} />\n            )\n          })\n        : customComponents}\n    </>\n  )\n}\n\nexport const ElementOverlay = memo(function ElementOverlay(props: ElementOverlayProps) {\n  const {focused, hovered, rect, wasMaybeCollapsed, enableScrollIntoView} = props\n\n  const ref = useRef<HTMLDivElement>(null)\n\n  const scrolledIntoViewRef = useRef(false)\n\n  const style = useMemo<CSSProperties>(\n    () => ({\n      width: `${rect.w}px`,\n      height: `${rect.h}px`,\n      transform: `translate(${rect.x}px, ${rect.y}px)`,\n    }),\n    [rect],\n  )\n\n  useEffect(() => {\n    if (\n      !scrolledIntoViewRef.current &&\n      !wasMaybeCollapsed &&\n      focused === true &&\n      ref.current &&\n      enableScrollIntoView\n    ) {\n      const target = ref.current\n      scrollIntoView(ref.current, {\n        // Workaround issue with scroll-into-view-if-needed struggling with iframes\n        behavior: (actions) => {\n          if (actions.length === 0) {\n            // An empty actions list equals scrolling isn't needed\n            return\n          }\n          // Uses native scrollIntoView to ensure iframes behave correctly\n          target.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'nearest',\n          })\n        },\n        scrollMode: 'if-needed',\n        block: 'center',\n        inline: 'nearest',\n      })\n    }\n\n    scrolledIntoViewRef.current = focused === true\n  }, [focused, wasMaybeCollapsed, enableScrollIntoView])\n\n  return (\n    <Root\n      data-focused={focused ? '' : undefined}\n      data-hovered={hovered ? '' : undefined}\n      ref={ref}\n      style={style}\n    >\n      {hovered && <ElementOverlayInner {...props} />}\n    </Root>\n  )\n})\n\nfunction useCustomComponents(\n  componentContext: OverlayComponentResolverContext | undefined,\n  componentResolver: OverlayComponentResolver | undefined,\n) {\n  return useMemo(() => {\n    if (!componentContext) return undefined\n    const resolved = componentResolver?.(componentContext)\n    if (!resolved) return undefined\n\n    if (isReactElementOverlayComponent(resolved)) {\n      return resolved\n    }\n\n    return (Array.isArray(resolved) ? resolved : [resolved]).map((component) => {\n      if (typeof component === 'object' && 'component' in component) {\n        return component\n      }\n      return {component, props: {}}\n    })\n  }, [componentResolver, componentContext])\n}\n\nconst Link = memo(function Link(props: {href: string}) {\n  const referer = useSyncExternalStore(\n    useCallback((onStoreChange) => {\n      const handlePopState = () => onStoreChange()\n      window.addEventListener('popstate', handlePopState)\n      return () => window.removeEventListener('popstate', handlePopState)\n    }, []),\n    () => window.location.href,\n  )\n  const href = useMemo(() => getLinkHref(props.href, referer), [props.href, referer])\n\n  return (\n    <Box as=\"a\" href={href} target=\"_blank\" rel=\"noopener noreferrer\">\n      <ActionOpen padding={2}>\n        <Text size={1} weight=\"medium\">\n          Open in Studio\n        </Text>\n      </ActionOpen>\n    </Box>\n  )\n})\n","import {useContext} from 'react'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport function usePreviewSnapshots(): PreviewSnapshotsContextValue {\n  const context = useContext(PreviewSnapshotsContext)\n\n  if (!context) {\n    throw new Error('Preview Snapshots context is missing')\n  }\n\n  return context\n}\n","import type {FunctionComponent} from 'react'\nimport type {OverlayRect} from '../types'\n\nexport const OverlayDragGroupRect: FunctionComponent<{\n  dragGroupRect: OverlayRect\n}> = ({dragGroupRect}) => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        top: `${dragGroupRect.y}px`,\n        left: `${dragGroupRect.x}px`,\n        width: `${dragGroupRect.w - 1}px`,\n        height: `${dragGroupRect.h - 1}px`,\n        border: '1px dashed #f0709b',\n        pointerEvents: 'none',\n      }}\n    ></div>\n  )\n}\n","import type {FunctionComponent} from 'react'\nimport type {DragInsertPosition} from '../types'\n\nconst markerThickness = 6\n\nfunction lerp(v0: number, v1: number, t: number) {\n  return v0 * (1 - t) + v1 * t\n}\n\nexport const OverlayDragInsertMarker: FunctionComponent<{\n  dragInsertPosition: DragInsertPosition\n}> = ({dragInsertPosition}) => {\n  if (dragInsertPosition === null) return\n\n  const flow = dragInsertPosition?.left || dragInsertPosition?.right ? 'horizontal' : 'vertical'\n\n  let x = 0\n  let y = 0\n  let width = 0\n  let height = 0\n  const offsetMultiplier = 0.0125\n\n  if (flow === 'horizontal') {\n    const {left, right} = dragInsertPosition\n\n    width = markerThickness\n\n    if (right && left) {\n      const startX = left.rect.x + left.rect.w\n      const endX = right.rect.x\n      const targetHeight = Math.min(right.rect.h, left.rect.h)\n      const offset = targetHeight * offsetMultiplier\n\n      x = lerp(startX, endX, 0.5) - markerThickness / 2\n      y = left.rect.y + offset\n\n      height = Math.min(right.rect.h, left.rect.h) - offset * 2\n    } else if (right && !left) {\n      const targetHeight = right.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = right.rect.x - markerThickness / 2\n      y = right.rect.y + offset\n      height = right.rect.h - offset * 2\n    } else if (left && !right) {\n      const targetHeight = left.rect.h\n      const offset = targetHeight * offsetMultiplier\n\n      x = left.rect.x + left.rect.w - markerThickness / 2\n      y = left.rect.y + offset\n      height = left.rect.h - offset * 2\n    }\n  } else {\n    const {bottom, top} = dragInsertPosition\n\n    if (bottom && top) {\n      const startX = Math.min(top.rect.x, bottom.rect.x)\n      const startY = top.rect.y + top.rect.h\n      const endY = bottom.rect.y\n      const targetWidth = Math.min(bottom.rect.w, top.rect.w)\n      const offset = targetWidth * offsetMultiplier\n\n      height = markerThickness\n\n      x = startX + offset\n      y = lerp(startY, endY, 0.5) - markerThickness / 2\n      width = Math.max(bottom.rect.w, top.rect.w) - offset * 2\n    } else if (bottom && !top) {\n      const targetWidth = bottom.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = bottom.rect.x + offset\n      y = bottom.rect.y - markerThickness / 2\n      width = bottom.rect.w - offset * 2\n      height = markerThickness\n    } else if (top && !bottom) {\n      const targetWidth = top.rect.w\n      const offset = targetWidth * offsetMultiplier\n\n      x = top.rect.x + offset\n      y = top.rect.y + top.rect.h - markerThickness / 2\n      width = top.rect.w - offset * 2\n      height = markerThickness\n    }\n  }\n\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        width: `${width}px`,\n        height: `${height}px`,\n        transform: `translate(${x}px, ${y}px)`,\n        background: '#556bfc',\n        border: '2px solid white',\n        borderRadius: '999px',\n        zIndex: '999999',\n      }}\n    ></div>\n  )\n}\n","import {Card, usePrefersDark, useTheme_v2} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\nimport type {DragSkeleton} from '../types'\n\nconst Root = styled.div<{\n  $width: number\n  $height: number\n  $offsetX: number\n  $offsetY: number\n  $scaleFactor: number\n}>`\n  --drag-preview-opacity: 0.98;\n  --drag-preview-skeleton-stroke: #ffffff;\n\n  @media (prefers-color-scheme: dark) {\n    --drag-preview-skeleton-stroke: #383d51;\n  }\n\n  position: fixed;\n  display: grid;\n  transform: ${({$scaleFactor, $width, $height}) =>\n    `translate(calc(var(--drag-preview-x) - ${$width / 2}px), calc(var(--drag-preview-y) - ${$height / 2}px)) scale(${$scaleFactor})`};\n  width: ${({$width}) => `${$width}px`};\n  height: ${({$height}) => `${$height}px`};\n  z-index: 9999999;\n  opacity: var(--drag-preview-opacity);\n  cursor: move;\n\n  .drag-preview-content-wrapper {\n    position: relative;\n    width: 100%;\n    height: 100%;\n    container-type: inline-size;\n  }\n\n  [data-ui='card'] {\n    position: relative;\n    width: 100%;\n    height: 100%;\n  }\n\n  .drag-preview-skeleton {\n    position: absolute;\n    inset: 0;\n\n    rect {\n      stroke: var(--drag-preview-skeleton-stroke);\n    }\n  }\n\n  .drag-preview-handle {\n    position: absolute;\n    top: 4cqmin;\n    left: 4cqmin;\n    width: 6cqmin;\n    fill: var(--drag-preview-handle-fill);\n  }\n`\n\nfunction clamp(number: number, min: number, max: number): number {\n  return number < min ? min : number > max ? max : number\n}\n\nfunction map(number: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n  const mapped: number = ((number - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin\n  return clamp(mapped, outMin, outMax)\n}\n\nexport const OverlayDragPreview: FunctionComponent<{skeleton: DragSkeleton}> = ({skeleton}) => {\n  const maxSkeletonWidth = Math.min(skeleton.maxWidth, window.innerWidth / 2)\n  const scaleFactor = skeleton.w > maxSkeletonWidth ? maxSkeletonWidth / skeleton.w : 1\n\n  const offsetX = skeleton.offsetX * scaleFactor\n  const offsetY = skeleton.offsetY * scaleFactor\n\n  const prefersDark = usePrefersDark()\n  const theme = useTheme_v2()\n\n  const radius = theme.radius[~~map(skeleton.w, 0, 1920, 1, theme.radius.length - 2)]\n\n  const imageRects = skeleton.childRects.filter((r) => r.tagName === 'IMG')\n  const textRects = skeleton.childRects.filter((r) => r.tagName !== 'IMG')\n\n  return (\n    <Root\n      $width={skeleton.w}\n      $height={skeleton.h}\n      $offsetX={offsetX}\n      $offsetY={offsetY}\n      $scaleFactor={scaleFactor}\n    >\n      <Card\n        radius={radius}\n        shadow={4}\n        overflow=\"hidden\"\n        tone=\"transparent\"\n        scheme={prefersDark ? 'dark' : 'light'}\n      >\n        <div className=\"drag-preview-content-wrapper\">\n          <svg className=\"drag-preview-skeleton\" viewBox={`0 0 ${skeleton.w} ${skeleton.h}`}>\n            {/* render image rects first to account for background images overlapping text */}\n            {[...imageRects, ...textRects].map((r, i) => (\n              <rect\n                key={i}\n                x={r.x}\n                y={r.y}\n                width={r.w}\n                height={r.h}\n                fill={theme.color.skeleton.from}\n              ></rect>\n            ))}\n          </svg>\n        </div>\n      </Card>\n    </Root>\n  )\n}\n","import {ExpandIcon} from '@sanity/icons'\nimport {Card, Flex, Hotkeys, Text} from '@sanity/ui'\nimport type {FunctionComponent} from 'react'\nimport {styled} from 'styled-components'\n\nconst Root = styled(Card)`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n`\n\nexport const OverlayMinimapPrompt: FunctionComponent = () => {\n  return (\n    <Root padding={2} shadow={2} radius={2} style={{zIndex: '999999'}}>\n      <Flex align=\"center\" gap={2}>\n        <Hotkeys keys={['Shift']} />\n        <Text size={1}>Zoom Out</Text>\n        <ExpandIcon />\n      </Flex>\n    </Root>\n  )\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ElementState, OverlayMsg} from '../types'\n\n/**\n * Reducer for managing element state from received channel messages\n * @internal\n */\nexport const elementsReducer = (\n  elements: ElementState[],\n  message: OverlayMsg | VisualEditingControllerMsg,\n): ElementState[] => {\n  const {type} = message\n  switch (type) {\n    case 'element/register': {\n      const elementExists = !!elements.find((e) => e.id === message.id)\n      if (elementExists) return elements\n\n      return [\n        ...elements,\n        {\n          id: message.id,\n          activated: false,\n          element: message.element,\n          focused: false,\n          hovered: false,\n          rect: message.rect,\n          sanity: message.sanity,\n          dragDisabled: message.dragDisabled,\n        },\n      ]\n    }\n    case 'element/activate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: true}\n        }\n        return e\n      })\n    case 'element/update': {\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, sanity: message.sanity, rect: message.rect}\n        }\n        return e\n      })\n    }\n    case 'element/unregister':\n      return elements.filter((e) => e.id !== message.id)\n    case 'element/deactivate':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, activated: false, hovered: false}\n        }\n        return e\n      })\n    case 'element/mouseenter':\n      return elements.map((e) => {\n        if (e.id === message.id) {\n          return {...e, rect: message.rect, hovered: true}\n        }\n        return {...e, hovered: false}\n      })\n    case 'element/mouseleave':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, hovered: false}\n        }\n        return element\n      })\n    case 'element/updateRect':\n      return elements.map((element) => {\n        if (element.id === message.id) {\n          return {...element, rect: message.rect}\n        }\n        return element\n      })\n    case 'element/click':\n      return elements.map((e) => {\n        return {...e, focused: e.id === message.id && 'clicked'}\n      })\n    case 'overlay/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/blur':\n      return elements.map((e) => {\n        return {...e, focused: false}\n      })\n    case 'presentation/focus': {\n      // Before setting the focus state of each element, check to see if any\n      // element has gained focus from an `element/click` message. Presentation\n      // tool \"reflects\" these back as a `presentation/focus` message.\n      const clickedElement = elements.find((e) => e.focused === 'clicked')\n      return elements.map((e) => {\n        // We want to focus any element which matches the received id and path\n        const focused =\n          'path' in e.sanity &&\n          e.sanity.id === message.data.id &&\n          e.sanity.path === message.data.path\n\n        // If we have a 'clicked' element, and that element matches, it is a\n        // reflection, so we maintain the focus state\n        if (clickedElement && e === clickedElement && focused) {\n          return e\n        }\n\n        return {\n          ...e,\n          // Mark as a dupe if another matching item has been clicked to prevent\n          // scrolling, otherwise just set focus as a boolean\n          focused: focused && clickedElement ? 'duplicate' : focused,\n        }\n      })\n    }\n    default:\n      return elements\n  }\n}\n","import type {SanityNode, VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {\n  DragInsertPosition,\n  DragSkeleton,\n  ElementState,\n  OverlayMsg,\n  OverlayRect,\n} from '../types'\nimport {elementsReducer} from './elementsReducer'\n\nexport interface OverlayState {\n  contextMenu: {\n    node: SanityNode\n    position: {\n      x: number\n      y: number\n    }\n  } | null\n  focusPath: string\n  elements: ElementState[]\n  wasMaybeCollapsed: boolean\n  perspective: ClientPerspective\n  isDragging: boolean\n  dragInsertPosition: DragInsertPosition\n  dragSkeleton: DragSkeleton | null\n  dragShowMinimap: boolean\n  dragShowMinimapPrompt: boolean\n  dragMinimapTransition: boolean\n  dragGroupRect: OverlayRect | null\n}\n\nexport function overlayStateReducer(\n  state: OverlayState,\n  message: OverlayMsg | VisualEditingControllerMsg,\n): OverlayState {\n  const {type} = message\n  let {\n    contextMenu,\n    focusPath,\n    perspective,\n    isDragging,\n    dragInsertPosition,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragSkeleton,\n    dragMinimapTransition,\n    dragGroupRect,\n  } = state\n  let wasMaybeCollapsed = false\n\n  if (type === 'presentation/focus') {\n    const prevFocusPath = state.focusPath\n\n    focusPath = message.data.path\n\n    if (prevFocusPath !== focusPath) {\n      wasMaybeCollapsed = prevFocusPath.slice(focusPath.length).startsWith('[')\n    }\n  }\n\n  if (type === 'presentation/perspective') {\n    perspective = message.data.perspective\n  }\n\n  if (type === 'element/contextmenu') {\n    if ('sanity' in message) {\n      contextMenu = {node: message.sanity, position: message.position}\n    } else {\n      contextMenu = null\n    }\n  }\n\n  if (\n    type === 'element/click' ||\n    type === 'element/mouseleave' ||\n    type === 'overlay/blur' ||\n    type === 'presentation/blur' ||\n    type === 'presentation/focus'\n  ) {\n    contextMenu = null\n  }\n\n  if (type === 'overlay/dragUpdateInsertPosition') {\n    dragInsertPosition = message.insertPosition\n  }\n\n  if (type === 'overlay/dragStart') {\n    isDragging = true\n  }\n\n  if (message.type === 'overlay/dragUpdateSkeleton') {\n    dragSkeleton = message.skeleton\n  }\n\n  if (type === 'overlay/dragEnd') {\n    isDragging = false\n  }\n\n  if (message.type === 'overlay/dragToggleMinimapPrompt') {\n    dragShowMinimapPrompt = message.display\n  }\n\n  if (type === 'overlay/dragStartMinimapTransition') {\n    dragMinimapTransition = true\n  }\n\n  if (type === 'overlay/dragEndMinimapTransition') {\n    dragMinimapTransition = false\n  }\n\n  if (type === 'overlay/dragUpdateGroupRect') {\n    dragGroupRect = message.groupRect\n  }\n\n  if (type === 'overlay/dragToggleMinimap') {\n    dragShowMinimap = message.display\n  }\n\n  return {\n    ...state,\n    contextMenu,\n    elements: elementsReducer(state.elements, message),\n    dragInsertPosition,\n    dragSkeleton,\n    dragGroupRect,\n    isDragging,\n    focusPath,\n    perspective,\n    wasMaybeCollapsed,\n    dragShowMinimap,\n    dragShowMinimapPrompt,\n    dragMinimapTransition,\n  }\n}\n","import {useEffect, useMemo, useState, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {PreviewSnapshotsContext, type PreviewSnapshotsContextValue} from './PreviewSnapshotsContext'\n\nexport const PreviewSnapshotsProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = function (props) {\n  const {comlink, children} = props\n\n  const [previewSnapshots, setPreviewSnapshots] = useState<PreviewSnapshotsContextValue>([])\n\n  useEffect(() => {\n    return comlink?.on('presentation/preview-snapshots', (data) => {\n      setPreviewSnapshots(data.snapshots)\n    })\n  }, [comlink])\n\n  const context = useMemo<PreviewSnapshotsContextValue>(() => previewSnapshots, [previewSnapshots])\n  return (\n    <PreviewSnapshotsContext.Provider value={context}>{children}</PreviewSnapshotsContext.Provider>\n  )\n}\n","import type {\n  DocumentSchema,\n  ResolvedSchemaTypeMap,\n  SanityNode,\n  SanityStegaNode,\n  SchemaType,\n  TypeSchema,\n  UnresolvedPath,\n} from '@repo/visual-editing-helpers'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  type FunctionComponent,\n  type PropsWithChildren,\n} from 'react'\nimport type {\n  ElementState,\n  OverlayElementField,\n  OverlayElementParent,\n  VisualEditingNode,\n} from '../../types'\nimport {SchemaContext, type SchemaContextValue} from './SchemaContext'\n\nfunction isSanityNode(node: SanityNode | SanityStegaNode): node is SanityNode {\n  return 'path' in node\n}\n\nfunction isDocumentSchemaType(type: SchemaType): type is DocumentSchema {\n  return type.type === 'document'\n}\n\nfunction isTypeSchemaType(type: SchemaType): type is TypeSchema {\n  return type.type === 'type'\n}\n\nfunction popUnkeyedPathSegments(path: string): string {\n  return path\n    .split('.')\n    .toReversed()\n    .reduce((acc, part) => {\n      if (acc.length) return [part, ...acc]\n      if (part.includes('[_key==')) return [part]\n      return []\n    }, [] as string[])\n    .join('.')\n}\n\nfunction getPathsWithUnresolvedTypes(elements: ElementState[]): {id: string; path: string}[] {\n  return elements.reduce((acc, element) => {\n    const {sanity} = element\n    if (!('id' in sanity)) return acc\n    if (!sanity.path.includes('[_key==')) return acc\n    const path = popUnkeyedPathSegments(sanity.path)\n    if (!acc.find((item) => item.id === sanity.id && item.path === path)) {\n      acc.push({id: sanity.id, path})\n    }\n    return acc\n  }, [] as UnresolvedPath[])\n}\n\nexport const SchemaProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n    elements: ElementState[]\n  }>\n> = function (props) {\n  const {comlink, children, elements} = props\n\n  const [resolvedTypes, setResolvedTypes] = useState<ResolvedSchemaTypeMap>(new Map())\n\n  const [schema, setSchema] = useState<SchemaType[] | null>(null)\n\n  const fetchSchema = useCallback(\n    async (signal: AbortSignal) => {\n      if (!comlink) return\n      try {\n        const response = await comlink.fetch('visual-editing/schema', undefined, {\n          signal,\n          suppressWarnings: true,\n        })\n        setSchema(response.schema)\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    },\n    [comlink],\n  )\n  useEffect(() => {\n    const controller = new AbortController()\n    fetchSchema(controller.signal)\n    return () => controller.abort()\n  }, [fetchSchema])\n\n  const reportedPathsRef = useRef<UnresolvedPath[]>([])\n\n  useEffect(() => {\n    // We report a list of paths that reference array items using a _key. We need\n    // to resolve the types of each of these items so we can map them to the\n    // correct schema types. One day CSM might include this data for us.\n    const reportPaths = async (paths: UnresolvedPath[], signal: AbortSignal) => {\n      if (!paths.length || !comlink) return\n      try {\n        const response = await comlink.fetch(\n          'visual-editing/schema-union-types',\n          {paths},\n          {signal, suppressWarnings: true},\n        )\n        setResolvedTypes(response.types)\n        reportedPathsRef.current = paths\n      } catch (e) {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      }\n    }\n\n    const controller = new AbortController()\n    const paths = getPathsWithUnresolvedTypes(elements)\n    if (\n      paths.some(\n        (p) => !reportedPathsRef.current.find(({id, path}) => id === p.id && path === p.path),\n      )\n    ) {\n      reportPaths(paths, controller.signal)\n    }\n    return () => controller.abort()\n  }, [comlink, elements])\n\n  const getType = useCallback(\n    <T extends 'document' | 'type' = 'document'>(\n      node: SanityNode | SanityStegaNode | string,\n      _type?: T,\n    ): T extends 'document' ? DocumentSchema | undefined : TypeSchema | undefined => {\n      const type = _type || 'document'\n      if (\n        !schema ||\n        (typeof node !== 'string' && (!isSanityNode(node) || !Array.isArray(schema)))\n      ) {\n        return undefined\n      }\n      const name = typeof node === 'string' ? node : node.type\n      const filter = type === 'document' ? isDocumentSchemaType : isTypeSchemaType\n      return schema\n        .filter(filter)\n        .find((schemaType) => schemaType.name === name) as T extends 'document'\n        ? DocumentSchema | undefined\n        : TypeSchema | undefined\n    },\n    [schema],\n  )\n\n  const getField = useCallback(\n    (\n      node: SanityNode | SanityStegaNode,\n    ): {\n      field: OverlayElementField\n      parent: OverlayElementParent\n    } => {\n      if (!isSanityNode(node)) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n\n      const schemaType = getType(node)\n\n      if (!schemaType) {\n        return {\n          field: undefined,\n          parent: undefined,\n        }\n      }\n      function fieldFromPath(\n        schemaType: OverlayElementParent,\n        path: string[],\n        parent: OverlayElementParent,\n        prevPath: string[] = [],\n      ): {\n        field: OverlayElementField\n        parent: OverlayElementParent\n      } {\n        if (!schemaType) {\n          return {field: undefined, parent: undefined}\n        }\n\n        const [next, ...rest] = path\n\n        if ('fields' in schemaType) {\n          const objectField = schemaType.fields[next]\n          if (!objectField && 'rest' in schemaType) {\n            return fieldFromPath(schemaType.rest, path, schemaType, prevPath)\n          }\n          if (!rest.length) {\n            return {field: objectField, parent}\n          }\n          if (!objectField) {\n            throw new Error(\n              `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n            )\n          }\n          return fieldFromPath(objectField.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'array') {\n          return fieldFromPath(schemaType.of, path, schemaType, prevPath)\n        } else if (schemaType.type === 'arrayItem') {\n          if (!rest.length) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, rest, schemaType, [...prevPath, next])\n        } else if (schemaType.type === 'union') {\n          const name = next.startsWith('[_key==')\n            ? resolvedTypes\n                ?.get((node as SanityNode).id)\n                ?.get([prevPath.join('.'), next].filter(Boolean).join(''))\n            : next\n          return fieldFromPath(\n            schemaType.of.find((item) => (item.type === 'unionOption' ? item.name === name : item)),\n            rest,\n            schemaType,\n            [...prevPath, next],\n          )\n        } else if (schemaType.type === 'unionOption') {\n          if (!next) return {field: schemaType, parent}\n          return fieldFromPath(schemaType.value, path, schemaType, prevPath)\n        } else if (schemaType.type === 'inline') {\n          const type = getType(schemaType.name, 'type')\n          return fieldFromPath((type as TypeSchema).value, path, schemaType, prevPath)\n        }\n        throw new Error(\n          `[@sanity/visual-editing] No field could be resolved at path: \"${[...prevPath, ...path].join('.')}\"`,\n        )\n      }\n\n      const nodePath = node.path.split('.').flatMap((part) => {\n        if (part.includes('[')) {\n          return part.split(/(\\[.+\\])/, 2)\n        }\n        return [part]\n      })\n\n      try {\n        return fieldFromPath(schemaType, nodePath, undefined)\n      } catch (e) {\n        // eslint-disable-next-line no-console\n        if (e instanceof Error) console.warn(e.message)\n        return {field: undefined, parent: undefined}\n      }\n    },\n    [getType, resolvedTypes],\n  )\n\n  const context = useMemo<SchemaContextValue>(\n    () => ({\n      getField,\n      getType,\n      resolvedTypes,\n      schema: schema || [],\n    }),\n    [getField, getType, resolvedTypes, schema],\n  )\n  return <SchemaContext.Provider value={context}>{children}</SchemaContext.Provider>\n}\n","import type {SerializableObject} from '@repo/visual-editing-helpers'\nimport {useEffect, useMemo, type FunctionComponent, type PropsWithChildren} from 'react'\nimport type {VisualEditingNode} from '../../types'\nimport {SharedStateContext} from './SharedStateContext'\n\nconst createStore = (initialState: SerializableObject) => {\n  let state = initialState\n  const getState = () => state\n  const listeners = new Set<() => void>()\n  const setState = (fn: (state: SerializableObject) => SerializableObject) => {\n    state = fn(state)\n    listeners.forEach((l) => l())\n  }\n  const subscribe = (listener: () => void) => {\n    listeners.add(listener)\n    return () => listeners.delete(listener)\n  }\n  return {getState, setState, subscribe}\n}\n\nconst store = createStore({})\n\nexport const SharedStateProvider: FunctionComponent<\n  PropsWithChildren<{\n    comlink?: VisualEditingNode\n  }>\n> = (props) => {\n  const {comlink, children} = props\n\n  useEffect(() => {\n    return comlink?.on('presentation/shared-state', (data) => {\n      if ('value' in data) {\n        store.setState((prev) => ({...prev, [data.key]: data.value}))\n      } else {\n        store.setState((prev) => {\n          return Object.fromEntries(Object.entries(prev).filter(([key]) => key !== data.key))\n        })\n      }\n    })\n  }, [comlink])\n\n  useEffect(() => {\n    async function fetch() {\n      const value = await comlink?.fetch('visual-editing/shared-state', undefined, {\n        suppressWarnings: true,\n      })\n      if (value) {\n        store.setState(() => value.state)\n      }\n    }\n    fetch().catch((reason) => {\n      // eslint-disable-next-line no-console\n      console.debug(reason)\n      // eslint-disable-next-line no-console\n      console.warn(\n        '[@sanity/visual-editing]: Failed to fetch shared state. Check your version of `@sanity/presentation` is up-to-date',\n      )\n    })\n  }, [comlink])\n\n  const value = useMemo(() => ({comlink, store}), [comlink])\n\n  return <SharedStateContext.Provider value={value}>{children}</SharedStateContext.Provider>\n}\n","import type {VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport {useEffect} from 'react'\nimport type {OverlayMsg, VisualEditingNode} from '../types'\n\nexport function usePerspectiveSync(\n  comlink: VisualEditingNode | undefined,\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void,\n): void {\n  useEffect(() => {\n    const controller = new AbortController()\n    comlink\n      ?.fetch('visual-editing/fetch-perspective', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        dispatch({type: 'presentation/perspective', data})\n      })\n      .catch(() => {\n        // Fail silently as the app may be communicating with a version of\n        // Presentation that does not support this feature\n      })\n\n    const unsub = comlink?.on('presentation/perspective', (data) => {\n      dispatch({type: 'presentation/perspective', data})\n    })\n\n    return () => {\n      unsub?.()\n      controller.abort()\n    }\n  }, [comlink, dispatch])\n}\n","import {DRAFTS_PREFIX} from '@repo/visual-editing-helpers/csm'\nimport type {ClientPerspective, ContentSourceMapDocuments} from '@sanity/client'\nimport {useCallback, useEffect, useRef} from 'react'\nimport type {ElementState, SanityNode, VisualEditingNode} from '../types'\n\nfunction isEqualSets(a: Set<string>, b: Set<string>) {\n  if (a === b) return true\n  if (a.size !== b.size) return false\n  for (const value of a) if (!b.has(value)) return false\n  return true\n}\n\n/**\n * Hook for reporting in use documents to Presentation\n * @internal\n */\nexport function useReportDocuments(\n  comlink: VisualEditingNode | undefined,\n  elements: ElementState[],\n  perspective: ClientPerspective,\n): void {\n  const lastReported = useRef<\n    | {\n        nodeIds: Set<string>\n        perspective: ClientPerspective\n      }\n    | undefined\n  >(undefined)\n\n  const reportDocuments = useCallback(\n    (documents: ContentSourceMapDocuments, perspective: ClientPerspective) => {\n      comlink?.post('visual-editing/documents', {\n        documents,\n        perspective,\n      })\n    },\n    [comlink],\n  )\n\n  useEffect(() => {\n    // Report only nodes of type `SanityNode`. Untransformed `SanityStegaNode`\n    // nodes without an `id`, are not reported as they will not contain the\n    // necessary document data.\n    const nodes = elements\n      .map((e) => {\n        const {sanity} = e\n        if (!('id' in sanity)) return null\n        return {\n          ...sanity,\n          id: 'isDraft' in sanity ? `${DRAFTS_PREFIX}${sanity.id}` : sanity.id,\n        }\n      })\n      .filter((s) => !!s) as SanityNode[]\n\n    const nodeIds = new Set<string>(nodes.map((e) => e.id))\n    // Report if:\n    // - Documents not yet reported\n    // - Document IDs changed\n    // - Perspective changed\n    if (\n      !lastReported.current ||\n      !isEqualSets(nodeIds, lastReported.current.nodeIds) ||\n      perspective !== lastReported.current.perspective\n    ) {\n      const documentsOnPage: ContentSourceMapDocuments = Array.from(nodeIds).map((_id) => {\n        const node = nodes.find((node) => node.id === _id)!\n        const {type, projectId: _projectId, dataset: _dataset} = node\n        return _projectId && _dataset\n          ? {_id, _type: type!, _projectId, _dataset}\n          : {_id, _type: type!}\n      })\n      lastReported.current = {nodeIds, perspective}\n      reportDocuments(documentsOnPage, perspective)\n    }\n  }, [elements, perspective, reportDocuments])\n}\n","import {isAltKey, isHotkey, type VisualEditingControllerMsg} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport type {Status} from '@sanity/comlink'\nimport {\n  isHTMLAnchorElement,\n  isHTMLElement,\n  LayerProvider,\n  PortalProvider,\n  studioTheme,\n  ThemeProvider,\n  usePrefersDark,\n} from '@sanity/ui'\nimport {\n  useCallback,\n  useEffect,\n  useMemo,\n  useReducer,\n  useRef,\n  useState,\n  type FunctionComponent,\n} from 'react'\nimport {styled} from 'styled-components'\nimport type {\n  OverlayComponentResolver,\n  OverlayEventHandler,\n  OverlayMsg,\n  VisualEditingNode,\n} from '../types'\nimport {getDraftId, getPublishedId} from '../util/documents'\nimport {sanityNodesExistInSameArray} from '../util/findSanityNodes.ts'\nimport {useDragEndEvents} from '../util/useDragEvents'\nimport {ContextMenu} from './context-menu/ContextMenu'\nimport {ElementOverlay} from './ElementOverlay'\nimport {useOptimisticActor, useOptimisticActorReady} from './optimistic-state/useOptimisticActor'\nimport {OverlayDragGroupRect} from './OverlayDragGroupRect'\nimport {OverlayDragInsertMarker} from './OverlayDragInsertMarker'\nimport {OverlayDragPreview} from './OverlayDragPreview'\nimport {OverlayMinimapPrompt} from './OverlayMinimapPrompt'\nimport {overlayStateReducer} from './overlayStateReducer'\nimport {PreviewSnapshotsProvider} from './preview/PreviewSnapshotsProvider'\nimport {SchemaProvider} from './schema/SchemaProvider'\nimport {SharedStateProvider} from './shared-state/SharedStateProvider.tsx'\nimport {useController} from './useController'\nimport {usePerspectiveSync} from './usePerspectiveSync'\nimport {useReportDocuments} from './useReportDocuments'\n\nconst Root = styled.div<{\n  $zIndex?: string | number\n}>`\n  background-color: transparent;\n  direction: ltr;\n  inset: 0;\n  pointer-events: none;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: ${({$zIndex}) => $zIndex ?? '9999999'};\n`\n\nfunction raf2(fn: () => void) {\n  let r0: number | undefined = undefined\n  let r1: number | undefined = undefined\n\n  r0 = requestAnimationFrame(() => {\n    r1 = requestAnimationFrame(fn)\n  })\n\n  return () => {\n    if (r0 !== undefined) cancelAnimationFrame(r0)\n    if (r1 !== undefined) cancelAnimationFrame(r1)\n  }\n}\n\nconst DocumentReporter: FunctionComponent<{\n  documentIds: string[]\n  perspective: ClientPerspective\n}> = (props) => {\n  const {documentIds} = props\n  const [uniqueIds, setUniqueIds] = useState<string[]>([])\n\n  useEffect(() => {\n    setUniqueIds((prev) => {\n      const next = Array.from(new Set(documentIds))\n      return prev.length === next.length &&\n        prev.reduce((acc, prevId) => acc.filter((id) => id !== prevId), next)?.length === 0\n        ? prev\n        : next\n    })\n  }, [documentIds])\n\n  const actor = useOptimisticActor()\n\n  useEffect(() => {\n    for (const id of uniqueIds) {\n      actor.send({type: 'observe', documentId: getDraftId(id)})\n      actor.send({type: 'observe', documentId: getPublishedId(id)})\n    }\n    return () => {\n      for (const id of uniqueIds) {\n        actor.send({type: 'unobserve', documentId: getDraftId(id)})\n        actor.send({type: 'unobserve', documentId: getPublishedId(id)})\n      }\n    }\n  }, [actor, uniqueIds])\n\n  return null\n}\n\nconst OverlaysController: FunctionComponent<{\n  comlink?: VisualEditingNode\n  dispatch: (value: OverlayMsg | VisualEditingControllerMsg) => void\n  inFrame: boolean\n  onDrag: (x: number, y: number) => void\n  overlayEnabled: boolean\n  rootElement: HTMLElement | null\n}> = (props) => {\n  const {comlink, dispatch, inFrame, onDrag, overlayEnabled, rootElement} = props\n  const {dispatchDragEndEvent} = useDragEndEvents()\n\n  const overlayEventHandler: OverlayEventHandler = useCallback(\n    (message) => {\n      if (message.type === 'element/click') {\n        const {sanity} = message\n        comlink?.post('visual-editing/focus', sanity)\n      } else if (message.type === 'overlay/activate') {\n        comlink?.post('visual-editing/toggle', {enabled: true})\n      } else if (message.type === 'overlay/deactivate') {\n        comlink?.post('visual-editing/toggle', {enabled: false})\n      } else if (message.type === 'overlay/dragEnd') {\n        const {insertPosition, target, dragGroup, flow, preventInsertDefault} = message\n        dispatchDragEndEvent({insertPosition, target, dragGroup, flow, preventInsertDefault})\n      } else if (message.type === 'overlay/dragUpdateCursorPosition') {\n        onDrag(message.x, message.y)\n\n        return\n      } else if (message.type === 'overlay/setCursor') {\n        const {element, cursor} = message\n\n        if (cursor) {\n          element.style.cursor = cursor\n        } else {\n          element.style.removeProperty('cursor')\n        }\n      }\n\n      dispatch(message)\n    },\n    [comlink, dispatch, dispatchDragEndEvent, onDrag],\n  )\n\n  const controller = useController(rootElement, overlayEventHandler, inFrame)\n\n  useEffect(() => {\n    if (overlayEnabled) {\n      controller.current?.activate()\n    } else {\n      controller.current?.deactivate()\n    }\n  }, [controller, overlayEnabled])\n\n  return null\n}\n\n/**\n * @internal\n */\nexport const Overlays: FunctionComponent<{\n  comlink?: VisualEditingNode\n  componentResolver?: OverlayComponentResolver\n  inFrame: boolean\n  zIndex?: string | number\n}> = (props) => {\n  const {comlink, componentResolver: _componentResolver, inFrame, zIndex} = props\n\n  const [status, setStatus] = useState<Status>()\n\n  const prefersDark = usePrefersDark()\n\n  const [\n    {\n      contextMenu,\n      dragInsertPosition,\n      dragShowMinimap,\n      dragShowMinimapPrompt,\n      dragSkeleton,\n      elements,\n      isDragging,\n      perspective,\n      wasMaybeCollapsed,\n      dragMinimapTransition,\n      dragGroupRect,\n    },\n    dispatch,\n  ] = useReducer(overlayStateReducer, {\n    contextMenu: null,\n    dragInsertPosition: null,\n    dragShowMinimap: false,\n    dragShowMinimapPrompt: false,\n    dragSkeleton: null,\n    elements: [],\n    focusPath: '',\n    isDragging: false,\n    perspective: 'published',\n    wasMaybeCollapsed: false,\n    dragMinimapTransition: false,\n    dragGroupRect: null,\n  })\n  const [rootElement, setRootElement] = useState<HTMLElement | null>(null)\n  const [overlayEnabled, setOverlayEnabled] = useState(true)\n\n  useEffect(() => {\n    const unsubs = [\n      comlink?.on('presentation/focus', (data) => {\n        dispatch({type: 'presentation/focus', data})\n      }),\n      comlink?.on('presentation/blur', (data) => {\n        dispatch({type: 'presentation/blur', data})\n      }),\n      comlink?.on('presentation/toggle-overlay', () => {\n        setOverlayEnabled((enabled) => !enabled)\n      }),\n      comlink?.onStatus((status) => {\n        setStatus(status as Status)\n      }),\n    ].filter(Boolean)\n\n    return () => unsubs.forEach((unsub) => unsub!())\n  }, [comlink])\n\n  usePerspectiveSync(comlink, dispatch)\n\n  useReportDocuments(comlink, elements, perspective)\n\n  const updateDragPreviewCustomProps = useCallback(\n    (x: number, y: number) => {\n      if (!rootElement) return\n\n      rootElement.style.setProperty('--drag-preview-x', `${x}px`)\n      rootElement.style.setProperty('--drag-preview-y', `${y - window.scrollY}px`)\n    },\n    [rootElement],\n  )\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      const target = event.target\n\n      // We only need to modify the default behavior if the target is a link\n      const targetsLink = Boolean(\n        isHTMLAnchorElement(target) || (isHTMLElement(target) && target.closest('a')),\n      )\n\n      if (targetsLink && event.altKey) {\n        event.preventDefault()\n        event.stopPropagation()\n        const newEvent = new MouseEvent(event.type, {\n          ...event,\n          altKey: false,\n          bubbles: true,\n          cancelable: true,\n        })\n        event.target?.dispatchEvent(newEvent)\n      }\n    }\n\n    const handleKeyUp = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    const handleKeydown = (e: KeyboardEvent) => {\n      if (isAltKey(e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n\n      if (isHotkey(['mod', '\\\\'], e)) {\n        setOverlayEnabled((enabled) => !enabled)\n      }\n    }\n\n    window.addEventListener('click', handleClick)\n    window.addEventListener('keydown', handleKeydown)\n    window.addEventListener('keyup', handleKeyUp)\n\n    return () => {\n      window.removeEventListener('click', handleClick)\n      window.removeEventListener('keydown', handleKeydown)\n      window.removeEventListener('keyup', handleKeyUp)\n    }\n  }, [setOverlayEnabled])\n\n  const [overlaysFlash, setOverlaysFlash] = useState(false)\n  const [fadingOut, setFadingOut] = useState(false)\n  const fadeOutTimeoutRef = useRef<NodeJS.Timeout | undefined>(undefined)\n\n  // Flash overlays when they are enabled\n  useEffect(() => {\n    if (overlayEnabled) {\n      return raf2(() => {\n        setOverlaysFlash(true)\n        raf2(() => {\n          setFadingOut(true)\n          fadeOutTimeoutRef.current = setTimeout(() => {\n            setFadingOut(false)\n            setOverlaysFlash(false)\n          }, 1500)\n        })\n      })\n    } else if (fadeOutTimeoutRef.current) {\n      clearTimeout(fadeOutTimeoutRef.current)\n      setOverlaysFlash(false)\n      setFadingOut(false)\n    }\n\n    return\n  }, [overlayEnabled])\n\n  const documentIds = useMemo(() => {\n    return elements.flatMap((element) => ('id' in element.sanity ? [element.sanity.id] : []))\n  }, [elements])\n\n  const closeContextMenu = useCallback(() => {\n    dispatch({type: 'overlay/blur'})\n  }, [])\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  const componentResolver = useMemo(() => {\n    return optimisticActorReady ? _componentResolver : undefined\n  }, [_componentResolver, optimisticActorReady])\n\n  const elementsToRender = useMemo(() => {\n    if ((inFrame && status !== 'connected') || isDragging) {\n      return []\n    }\n\n    return elements\n      .filter((e) => e.activated || e.focused)\n      .map(({id, element, focused, hovered, rect, sanity, dragDisabled}) => {\n        const draggable =\n          !dragDisabled &&\n          !!element.getAttribute('data-sanity') &&\n          optimisticActorReady &&\n          elements.some((e) =>\n            'id' in e.sanity && 'id' in sanity\n              ? sanityNodesExistInSameArray(e.sanity, sanity) && e.sanity.path !== sanity.path\n              : false,\n          )\n\n        return (\n          <ElementOverlay\n            componentResolver={componentResolver}\n            element={element}\n            enableScrollIntoView={!isDragging && !dragMinimapTransition && !dragShowMinimap}\n            key={id}\n            focused={focused}\n            hovered={hovered}\n            node={sanity}\n            rect={rect}\n            showActions={!inFrame}\n            draggable={draggable}\n            isDragging={isDragging || dragMinimapTransition}\n            wasMaybeCollapsed={focused && wasMaybeCollapsed}\n          />\n        )\n      })\n  }, [\n    componentResolver,\n    dragMinimapTransition,\n    dragShowMinimap,\n    elements,\n    inFrame,\n    isDragging,\n    optimisticActorReady,\n    status,\n    wasMaybeCollapsed,\n  ])\n\n  return (\n    <ThemeProvider scheme={prefersDark ? 'dark' : 'light'} theme={studioTheme} tone=\"transparent\">\n      <LayerProvider>\n        <PortalProvider element={rootElement}>\n          <SchemaProvider comlink={comlink} elements={elements}>\n            <PreviewSnapshotsProvider comlink={comlink}>\n              <SharedStateProvider comlink={comlink}>\n                <Root\n                  data-fading-out={fadingOut ? '' : undefined}\n                  data-overlays={overlaysFlash ? '' : undefined}\n                  ref={setRootElement}\n                  $zIndex={zIndex}\n                >\n                  <DocumentReporter documentIds={documentIds} perspective={perspective} />\n                  <OverlaysController\n                    comlink={comlink}\n                    dispatch={dispatch}\n                    inFrame={inFrame}\n                    onDrag={updateDragPreviewCustomProps}\n                    overlayEnabled={overlayEnabled}\n                    rootElement={rootElement}\n                  />\n                  {contextMenu && <ContextMenu {...contextMenu} onDismiss={closeContextMenu} />}\n                  {elementsToRender}\n\n                  {isDragging && !dragMinimapTransition && (\n                    <>\n                      {dragInsertPosition && (\n                        <OverlayDragInsertMarker dragInsertPosition={dragInsertPosition} />\n                      )}\n                      {dragShowMinimapPrompt && <OverlayMinimapPrompt />}\n                      {dragGroupRect && <OverlayDragGroupRect dragGroupRect={dragGroupRect} />}\n                    </>\n                  )}\n                  {isDragging && dragSkeleton && <OverlayDragPreview skeleton={dragSkeleton} />}\n                </Root>\n              </SharedStateProvider>\n            </PreviewSnapshotsProvider>\n          </SchemaProvider>\n        </PortalProvider>\n      </LayerProvider>\n    </ThemeProvider>\n  )\n}\n","import {useEffect, useRef, type MutableRefObject} from 'react'\nimport {createOverlayController} from '../controller'\nimport type {OverlayController, OverlayEventHandler} from '../types'\nimport {useOptimisticActorReady} from './optimistic-state/useOptimisticActor'\n\n/**\n * Hook for using an overlay controller\n * @internal\n */\nexport function useController(\n  element: HTMLElement | null,\n  handler: OverlayEventHandler,\n  inFrame: boolean,\n): MutableRefObject<OverlayController | undefined> {\n  const overlayController = useRef<OverlayController | undefined>()\n\n  const optimisticActorReady = useOptimisticActorReady()\n\n  useEffect(() => {\n    if (!element) return undefined\n\n    overlayController.current = createOverlayController({\n      handler,\n      overlayElement: element,\n      inFrame,\n      optimisticActorReady,\n    })\n\n    return () => {\n      overlayController.current?.destroy()\n      overlayController.current = undefined\n    }\n  }, [element, handler, inFrame, optimisticActorReady])\n\n  return overlayController\n}\n","import {useEffect, useRef, type FunctionComponent} from 'react'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\n\n/**\n * @internal\n */\nexport const Refresh: FunctionComponent<\n  {\n    comlink: VisualEditingNode\n  } & Required<Pick<VisualEditingOptions, 'refresh'>>\n> = (props) => {\n  const {comlink, refresh} = props\n\n  const manualRefreshRef = useRef(0)\n  const mutationRefreshRef = useRef(0)\n\n  useEffect(\n    () =>\n      comlink.on('presentation/refresh', (data) => {\n        if (data.source === 'manual') {\n          clearTimeout(manualRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          let timedOut = false\n          manualRefreshRef.current = window.setTimeout(() => {\n            comlink.post('visual-editing/refreshed', data)\n            timedOut = true\n          }, 3000)\n          promise?.finally?.(() => {\n            if (timedOut) return\n            clearTimeout(manualRefreshRef.current)\n            comlink.post('visual-editing/refreshed', data)\n          })\n        } else if (data.source === 'mutation') {\n          clearTimeout(mutationRefreshRef.current)\n          const promise = refresh(data)\n          if (promise === false) return\n          comlink.post('visual-editing/refreshing', data)\n          // Send an additional refresh to account for Content Lake eventual consistency\n          mutationRefreshRef.current = window.setTimeout(() => {\n            const promise = refresh(data)\n            if (promise === false) return\n            comlink.post('visual-editing/refreshing', data)\n            promise?.finally?.(() => {\n              comlink.post('visual-editing/refreshed', data)\n            }) || comlink.post('visual-editing/refreshed', data)\n          }, 1000)\n          promise?.finally?.(() => {\n            comlink.post('visual-editing/refreshed', data)\n          }) || comlink.post('visual-editing/refreshed', data)\n        }\n      }),\n    [comlink, refresh],\n  )\n\n  return null\n}\n","import {\n  createCompatibilityActors,\n  type VisualEditingControllerMsg,\n  type VisualEditingNodeMsg,\n} from '@repo/visual-editing-helpers'\nimport {createNode, createNodeMachine} from '@sanity/comlink'\nimport {useEffect, useState, type FunctionComponent} from 'react'\nimport {createActor} from 'xstate'\nimport type {VisualEditingNode, VisualEditingOptions} from '../types'\nimport {createDatasetMutator} from './comlink'\nimport {History} from './History'\nimport {Meta} from './Meta'\nimport {setActor} from './optimistic-state/context'\nimport {createSharedListener} from './optimistic-state/machines/createSharedListener'\nimport {Overlays} from './Overlays'\nimport {Refresh} from './Refresh'\n\n/**\n * @public\n */\nexport const VisualEditing: FunctionComponent<VisualEditingOptions> = (props) => {\n  const {components, history, refresh, zIndex} = props\n  const inFrame = window.self !== window.top || window.opener\n\n  const [comlink, setComlink] = useState<VisualEditingNode | undefined>(undefined)\n\n  useEffect(() => {\n    if (!inFrame) return\n    const comlink = createNode<VisualEditingNodeMsg, VisualEditingControllerMsg>(\n      {\n        name: 'visual-editing',\n        connectTo: 'presentation',\n      },\n      createNodeMachine<VisualEditingNodeMsg, VisualEditingControllerMsg>().provide({\n        actors: createCompatibilityActors<VisualEditingNodeMsg>(),\n      }),\n    )\n    setComlink(comlink)\n\n    const listener = createSharedListener(comlink)\n    const datasetMutator = createDatasetMutator(comlink)\n    const actor = createActor(datasetMutator, {\n      // @ts-expect-error @todo\n      input: {client: {withConfig: () => {}}, sharedListener: listener},\n    })\n\n    // Fetch features to determine if optimistic updates are supported\n    const controller = new AbortController()\n    comlink\n      .fetch('visual-editing/features', undefined, {\n        signal: controller.signal,\n        suppressWarnings: true,\n      })\n      .then((data) => {\n        if (data.features['optimistic']) {\n          setActor(actor)\n        }\n      })\n      .catch(() => {\n        // eslint-disable-next-line no-console\n        console.warn(\n          '[@sanity/visual-editing] Package version mismatch detected: Please update your Sanity studio to prevent potential compatibility issues.',\n        )\n      })\n\n    actor.start()\n    comlink.start()\n\n    return () => {\n      controller.abort()\n      actor.stop()\n      comlink.stop()\n    }\n  }, [inFrame])\n\n  return (\n    <>\n      <Overlays\n        comlink={comlink}\n        componentResolver={components}\n        inFrame={inFrame}\n        zIndex={zIndex}\n      />\n      {comlink && (\n        <>\n          <History comlink={comlink} history={history} />\n          <Meta comlink={comlink} />\n          {refresh && <Refresh comlink={comlink} refresh={refresh} />}\n        </>\n      )}\n    </>\n  )\n}\nVisualEditing.displayName = 'VisualEditing'\n","import {type ListenEvent} from '@sanity/client'\nimport {merge, ReplaySubject, Subject, type Observable, type ObservedValueOf} from 'rxjs'\nimport type {VisualEditingNode} from '../../../types'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SharedListenEvent = ListenEvent<Record<string, any>>\n\n/**\n * Creates a single, shared, listener EventSource that strems remote mutations, and notifies when it's online (welcome), offline (reconnect).\n */\nexport function createSharedListener(comlink: VisualEditingNode): Observable<SharedListenEvent> {\n  // Welcome events could be received before the listener has been subscribed\n  // to. Using a ReplaySubject will ensure the welcome event is re-emitted when\n  // a new subscriber arrives.\n  const incomingConnection$ = new ReplaySubject<SharedListenEvent>(1)\n  const incomingMutations$ = new Subject<SharedListenEvent>()\n\n  comlink\n    .fetch('visual-editing/snapshot-welcome', undefined, {suppressWarnings: true})\n    .then((data) => {\n      incomingConnection$.next(data.event)\n    })\n    .catch(() => {\n      // Fail silently as the app may be communicating with a version of\n      // Presentation that does not support this feature\n    })\n\n  comlink.on('presentation/snapshot-event', (data) => {\n    // Welcome events are still emitted by Presentation for backwards\n    // compatibility. We don't need them anymore as we explicitly fetch the\n    // welcome event, so filter them out here.\n    if (data.event.type === 'reconnect') {\n      incomingConnection$.next(data.event)\n    }\n    if (data.event.type === 'mutation') {\n      incomingMutations$.next(data.event)\n    }\n  })\n\n  return merge(incomingConnection$, incomingMutations$)\n}\n\nexport type SharedListenerEvents = ObservedValueOf<ReturnType<typeof createSharedListener>>\n"],"names":["datasetMutatorMachine","setup","types","actions","emit","event","assertEvent","assign","documents","context","spawn","id","documentId","input","client","sharedListener","createSharedListener","stopChild","_","actors","documentMutatorMachine","createMachine","on","sync","mutation","pristine","observe","unobserve","initial","states","createDocumentMutator","comlink","fetchSnapshot","fromPromise","async","signal","snapshot","fetch","submitMutations","transactions","transaction","data","SanityEncoder","encodeTransaction","post","provide","enqueueActions","enqueue","sendParent","type","document","remote","local","History","props","$","_c","history","t0","t1","t2","t3","update","useEffect","subscribe","title","Meta","sendMeta","observer","MutationObserver","target","nodeName","head","subtree","characterData","childList","disconnect","_temp","customEvent","CustomEvent","detail","cancelable","window","dispatchEvent","SchemaContext","createContext","useSchema","useContext","Error","getArrayRemoveAction","node","doc","patch","getSnapshot","getArrayRemovePatches","getArrayInsertAction","insertType","position","getArrayInsertPatches","getDuplicateAction","getArrayDuplicatePatches","getContextMenuItems","field","parent","items","push","getDuplicateItem","getRemoveItems","getMoveItems","label","icon","InsertAboveIcon","action","name","InsertBelowIcon","getContextMenuArrayItems","options","insertMenu","width","views","some","view","undefined","component","boundaryElement","InsertMenuWrapper","onSelect","schemaType","of","filter","item","map","t","getNodeIcon","getContextMenuUnionItems","Promise","resolve","CopyIcon","RemoveIcon","withDivider","groupItems","moveUpPatches","moveDownPatches","moveFirstPatches","moveLastPatches","all","getArrayMovePatches","length","PublishIcon","ArrowUpIcon","ArrowDownIcon","UnpublishIcon","SortIcon","t4","Symbol","for","arrow","constrainSize","floatingBoundary","padding","placement","fallbackPlacements","preventOverflow","__unstable_margins","jsx","InsertMenu","MenuGroup","fontSize","popover","space","POPOVER_MARGINS","ContextMenuItem","onDismiss","onClick","MenuDivider","hotkeys","MenuItem","text","disabled","t5","itemIndex","Component","ContextMenu","x","y","setBoundaryElement","useState","getField","getDocument","useDocuments","setItems","t6","fetchContextMenuItems","items_0","getBoundingClientRect","bottom","left","right","top","height","contextMenuReferenceElement","t7","t8","t9","t10","minWidth","maxWidth","Box","flex","Text","size","Spinner","t11","t12","t13","t14","t15","Stack","children","weight","jsxs","Flex","gap","Fragment","i","Menu","style","t16","t17","t18","t19","t20","Popover","open","content","PopoverPortal","getLinkHref","href","referer","parsed","URL","location","origin","hash","slice","pathname","search","searchParams","set","toString","PreviewSnapshotsContext","Root","styled","Card","Actions","ActionOpen","Tab","Labels","ElementOverlayInner","element","focused","componentResolver","showActions","draggable","getType","path","baseUrl","tool","workspace","createEditUrl","pathToUrlString","studioPath","fromString","createIntentLink","previewSnapshots","usePreviewSnapshots","bb0","find","_id","bb1","value","componentContext","customComponents","resolved","isReactElementOverlayComponent","isValidElement","Array","isArray","useCustomComponents","dangerouslySetInnerHTML","__html","DocumentIcon","paddingBottom","Link","marginRight","className","DragHandleIcon","props_0","PointerEvents","ElementOverlay","memo","hovered","rect","wasMaybeCollapsed","enableScrollIntoView","ref","useRef","scrolledIntoViewRef","w","h","transform","current","scrollIntoView","behavior","block","inline","scrollMode","useSyncExternalStore","_temp2","_temp3","as","rel","onStoreChange","handlePopState","addEventListener","removeEventListener","OverlayDragGroupRect","dragGroupRect","border","pointerEvents","lerp","v0","v1","OverlayDragInsertMarker","dragInsertPosition","offsetMultiplier","markerThickness","startX","endX","offset","Math","min","startY","endY","max","background","borderRadius","zIndex","div","$scaleFactor","$width","$height","OverlayDragPreview","skeleton","maxSkeletonWidth","innerWidth","scaleFactor","offsetX","offsetY","prefersDark","usePrefersDark","theme","useTheme_v2","radius","number","inMin","inMax","outMin","outMax","clamp","childRects","imageRects","textRects","color","from","r_1","r","fill","viewBox","shadow","overflow","tone","scheme","tagName","r_0","OverlayMinimapPrompt","align","Hotkeys","keys","ExpandIcon","elementsReducer","elements","message","e","activated","sanity","dragDisabled","clickedElement","overlayStateReducer","state","contextMenu","focusPath","perspective","isDragging","dragShowMinimap","dragShowMinimapPrompt","dragSkeleton","dragMinimapTransition","prevFocusPath","startsWith","insertPosition","display","groupRect","PreviewSnapshotsProvider","setPreviewSnapshots","snapshots","Provider","isSanityNode","isDocumentSchemaType","isTypeSchemaType","SchemaProvider","Map","resolvedTypes","setResolvedTypes","schema","setSchema","response","suppressWarnings","fetchSchema","controller","AbortController","abort","reportedPathsRef","reportPaths","controller_0","paths_0","reduce","acc","includes","split","toReversed","part","join","popUnkeyedPathSegments","getPathsWithUnresolvedTypes","paths","p","signal_0","response_0","_type","node_0","schemaType_0","nodePath","flatMap","fieldFromPath","schemaType_1","path_0","prevPath","next","rest","objectField","fields","name_0","get","Boolean","console","warn","store","initialState","listeners","Set","getState","setState","fn","forEach","l","add","listener","delete","createStore","SharedStateProvider","catch","value_0","SharedStateContext","prev","key","Object","fromEntries","entries","reason","debug","e_0","s","DRAFTS_PREFIX","$zIndex","raf2","r0","r1","requestAnimationFrame","cancelAnimationFrame","DocumentReporter","documentIds","uniqueIds","setUniqueIds","actor","useOptimisticActor","id_0","send","getDraftId","getPublishedId","id_1","OverlaysController","dispatch","inFrame","onDrag","overlayEnabled","rootElement","dispatchDragEndEvent","handler","preventInsertDefault","reference","getReferenceNodeAndInsertPosition","targetKey","hasExplicitKey","getArrayItemKeyAndParentPath","arrayPath","referenceItemKey","elementValue","getFromPath","at","remove","_key","insert","useDragEndEvents","enabled","dragGroup","flow","cursor","removeProperty","useController","overlayController","optimisticActorReady","useOptimisticActorReady","createOverlayController","overlayElement","destroy","activate","deactivate","Overlays","_componentResolver","status","setStatus","useReducer","setRootElement","setOverlayEnabled","unsubs","data_0","onStatus","status_0","usePerspectiveSync","then","unsub","useReportDocuments","lastReported","perspective_0","reportDocuments","nodes","nodeIds","a","b","has","isEqualSets","documentsOnPage","projectId","_projectId","dataset","_dataset","setProperty","scrollY","updateDragPreviewCustomProps","handleClick","_temp4","handleKeyUp","_temp5","handleKeydown","isAltKey","_temp6","isHotkey","_temp7","overlaysFlash","setOverlaysFlash","fadingOut","setFadingOut","fadeOutTimeoutRef","setTimeout","clearTimeout","_temp8","closeContextMenu","_temp9","element_0","getAttribute","e_2","sanityNodesExistInSameArray","elementsToRender","t21","t22","t23","t24","t25","t26","t27","LayerProvider","PortalProvider","ThemeProvider","studioTheme","prevId","isHTMLAnchorElement","isHTMLElement","closest","altKey","preventDefault","stopPropagation","newEvent","MouseEvent","bubbles","enabled_0","enabled_1","enabled_2","e_1","Refresh","refresh","manualRefreshRef","mutationRefreshRef","source","promise","timedOut","finally","promise_0","promise_1","VisualEditing","components","self","opener","setComlink","comlink_0","createNode","connectTo","createNodeMachine","createCompatibilityActors","incomingConnection$","ReplaySubject","incomingMutations$","Subject","merge","datasetMutator","createDatasetMutator","createActor","withConfig","features","optimistic","setActor","start","stop","displayName"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28]}},
    {"offset": {"line": 1993, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}