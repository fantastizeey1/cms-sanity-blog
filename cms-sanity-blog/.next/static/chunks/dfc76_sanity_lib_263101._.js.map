{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"_createContext.mjs","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_createContext/createGlobalScopedContext.ts"],"sourcesContent":["import {type Context, createContext} from 'react'\n\nimport {SANITY_VERSION} from '../core/version'\n\nconst MISSING_CONTEXT_HELP_URL = 'https://www.sanity.io/help/missing-context-error'\n\n/**\n * @internal\n * @hidden\n */\nexport function createGlobalScopedContext<ContextType, const T extends ContextType = ContextType>(\n  /**\n   * It's important to prefix these keys as they are global\n   */\n  key: `sanity/_singletons/context/${string}`,\n  defaultValue: T,\n): Context<ContextType> {\n  const symbol = Symbol.for(key)\n\n  /**\n   * Prevent errors about re-renders on React SSR on Next.js App Router\n   */\n  if (typeof document === 'undefined') {\n    return createContext<ContextType>(defaultValue)\n  }\n\n  if (!globalScope[symbol]) {\n    globalScope[symbol] = {context: createContext<T>(defaultValue), version: SANITY_VERSION}\n  } else if (globalScope[symbol].version !== SANITY_VERSION) {\n    throw new TypeError(\n      `Duplicate instances of context \"${key}\" with incompatible versions detected: Expected ${SANITY_VERSION} but got ${globalScope[symbol].version}.\\n\\n` +\n        `For more information, please visit ${MISSING_CONTEXT_HELP_URL}`,\n    )\n  } else if (!warned.has(SANITY_VERSION)) {\n    console.warn(\n      `Duplicate instances of context \"${key}\" detected. This is likely a mistake and may cause unexpected behavior.\\n\\n` +\n        `For more information, please visit ${MISSING_CONTEXT_HELP_URL}`,\n    )\n    warned.add(SANITY_VERSION)\n  }\n\n  return globalScope[symbol].context\n}\n\nconst warned = new Set<typeof SANITY_VERSION>()\n\n/**\n * Gets the global scope instance in a given environment.\n *\n * The strategy is to return the most modern, and if not, the most common:\n * - The `globalThis` variable is the modern approach to accessing the global scope\n * - The `window` variable is the global scope in a web browser\n * - The `self` variable is the global scope in workers and others\n * - The `global` variable is the global scope in Node.js\n */\nfunction getGlobalScope() {\n  if (typeof globalThis !== 'undefined') return globalThis\n  if (typeof window !== 'undefined') return window\n  if (typeof self !== 'undefined') return self\n  if (typeof global !== 'undefined') return global\n\n  throw new Error('sanity: could not locate global scope')\n}\n\nconst globalScope = getGlobalScope() as any\n"],"names":["MISSING_CONTEXT_HELP_URL","createGlobalScopedContext","key","defaultValue","symbol","Symbol","for","document","createContext","globalScope","context","version","SANITY_VERSION","TypeError","warned","has","console","warn","add","Set","getGlobalScope","globalThis","window","self","global","Error"],"mappings":";;;;;;;AAIA,MAAMA,2BAA2B;AAMjBC,SAAAA,0BAIdC,GAAAA,EACAC,YAAAA,EACsB;IAChBC,MAAAA,SAASC,OAAOC,GAAAA,CAAIJ,GAAG;IAK7B,IAAI,OAAOK,WAAa,KACtB,WAAOC,+UAAAA,EAA2BL,YAAY;IAG5C,IAAA,CAACM,WAAAA,CAAYL,MAAM,CAAA,EACrBK,WAAAA,CAAYL,MAAM,CAAA,GAAI;QAACM,4UAASF,gBAAAA,EAAiBL,YAAY;QAAGQ,SAASC,oYAAAA;IAAc;SAClF;QAAIH,IAAAA,WAAAA,CAAYL,MAAM,CAAA,CAAEO,OAAAA,wXAAYC,iBAAAA,EACnC,MAAA,IAAIC,UACR,CAAA,gCAAA,EAAmCX,GAAG,CAAA,gDAAA,qXAAmDU,iBAAc,CAAA,SAAA,EAAYH,WAAAA,CAAYL,MAAM,CAAA,CAAEO,OAAO,CAAA;;mCAAA,EACtGX,wBAAwB,EAClE;QACUc,OAAOC,GAAAA,oXAAIH,iBAAc,KAAA,CACnCI,QAAQC,IAAAA,CACN,CAAA,gCAAA,EAAmCf,GAAG,CAAA;;mCAAA,EACEF,wBAAwB,EAClE,GACAc,OAAOI,GAAAA,CAAIN,oYAAc,CAAA;IAAA;IAGpBH,OAAAA,WAAAA,CAAYL,MAAM,CAAA,CAAEM,OAAAA;AAC7B;AAEA,MAAMI,SAAAA,aAAAA,GAAAA,IAAaK,IAA2B;AAW9C,SAASC,iBAAiB;IACpB,IAAA,OAAOC,aAAe,IAAoBA,CAAAA,OAAAA;IAC1C,IAAA,OAAOC,SAAW,IAAoBA,CAAAA,OAAAA;IACtC,IAAA,OAAOC,OAAS,IAAoBA,CAAAA,OAAAA;IACpC,IAAA,OAAOC,SAAW,IAAoBA,CAAAA,OAAAA;IAEpC,MAAA,IAAIC,MAAM,uCAAuC;AACzD;AAEA,MAAMhB,cAAcW,eAAe","ignoreList":[0]}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"file":"_singletons.mjs","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ActiveWorkspaceMatcherContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/AddonDatasetContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CalendarContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ChangeIndicatorTrackerContexts.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ColorSchemeSetValueContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ColorSchemeValueContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentInputContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsAuthoringPathContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsEnabledContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsIntentContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsOnboardingContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsSelectedPathContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CommentsUpsellContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ConnectorContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/CopyPasteContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DiffContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DocumentActionPropsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DocumentChangeContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DocumentFieldActionsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DocumentIdContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DocumentPaneContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/DocumentSheetListContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/FieldActionsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/FormBuilderContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/FormCallbacksContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/FormFieldPresenceContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/FormValueContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/FreeTrialContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/GetFormValueContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/HoveredFieldContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/IsLastPaneContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/LocaleContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/MentionUserContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/NavbarContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PaneContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PaneLayoutContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PaneRouterContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PortableTextMarkersContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PortableTextMemberItemElementRefsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PortableTextMemberItemsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PresenceContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PresenceTrackerContexts.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/PreviewCardContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ReferenceInputOptionsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ReferenceItemRefContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ResourceCacheContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ReviewChangesContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/RouterContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/RouterHistoryContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/SanityCreateConfigContext.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ScheduledPublishingEnabledContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/SchedulePublishingUpsellContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/Schedules.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ScrollContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/SearchContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/SortableItemIdContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/SourceContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/StructureToolContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/StudioAnnouncementsContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/TasksContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/TasksEnabledContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/TasksNavigationContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/TasksUpsellContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/TreeEditingEnabledContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/UserColorManagerContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ValidationContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/VirtualizerScrollInstanceContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/WorkspaceContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/WorkspacesContext.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/_singletons/context/ZIndexContext.ts"],"sourcesContent":["import {createContext} from 'sanity/_createContext'\n\nimport type {ActiveWorkspaceMatcherContextValue} from '../../core/studio/activeWorkspaceMatcher/ActiveWorkspaceMatcherContext'\n\n/** @internal */\nexport const ActiveWorkspaceMatcherContext =\n  createContext<ActiveWorkspaceMatcherContextValue | null>(\n    'sanity/_singletons/context/active-workspace-matcher',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {AddonDatasetContextValue} from '../../core/studio/addonDataset/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const AddonDatasetContext = createContext<AddonDatasetContextValue | null>(\n  'sanity/_singletons/context/addon-dataset',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CalendarContextValue} from '../../core/studio/components/navbar/search/components/filters/filter/inputs/date/datePicker/calendar/contexts/CalendarContext'\n\n/**\n * @internal\n */\nexport const CalendarContext = createContext<CalendarContextValue | undefined>(\n  'sanity/_singletons/context/calendar',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {\n  ChangeIndicatorTrackerContextStoreType,\n  ChangeIndicatorTrackerGetSnapshotType,\n} from '../../core/changeIndicators/ChangeIndicatorTrackerContexts'\n\n/** @internal */\nexport const ChangeIndicatorTrackerContextStore =\n  createContext<ChangeIndicatorTrackerContextStoreType>(\n    'sanity/_singletons/context/change-indicator-tracker-store',\n    null,\n  )\n\n/** @internal */\nexport const ChangeIndicatorTrackerContextGetSnapshot =\n  createContext<ChangeIndicatorTrackerGetSnapshotType>(\n    'sanity/_singletons/context/change-indicator-tracker-get-snapshot',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioThemeColorSchemeKey} from '../../core/theme/types'\n\n/**\n * The setter for ColorSchemeValueContext, in a separate context to avoid unnecessary re-renders\n * If set to false then the UI should adjust to reflect that the Studio can't change the color scheme\n * @internal\n */\nexport const ColorSchemeSetValueContext = createContext<\n  ((nextScheme: StudioThemeColorSchemeKey) => void) | false | null\n>('sanity/_singletons/context/color-scheme-set-value', null)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioThemeColorSchemeKey} from '../../core/theme/types'\n\n/**\n * Used to keep track of the internal value, which can be \"system\" in addition to \"light\" and \"dark\"\n * @internal\n */\nexport const ColorSchemeValueContext = createContext<StudioThemeColorSchemeKey | null>(\n  'sanity/_singletons/context/color-scheme-value',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentInputContextValue} from '../../core/comments/components/pte/comment-input/CommentInputProvider'\n\n/**\n * @internal\n */\nexport const CommentInputContext = createContext<CommentInputContextValue | null>(\n  'sanity/_singletons/context/comment-input',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsAuthoringPathContextValue} from '../../core/comments/context/authoring-path/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const CommentsAuthoringPathContext = createContext<CommentsAuthoringPathContextValue | null>(\n  'sanity/_singletons/context/comments-authoring-path',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsContextValue} from '../../core/comments/context/comments/types'\n\n/**\n * @internal\n */\nexport const CommentsContext = createContext<CommentsContextValue | null>(\n  'sanity/_singletons/context/comments',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsEnabledContextValue} from '../../core/comments/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the comments feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// comments functionality is included by default in all new studio\n// configurations. Therefore, in the absence of a specific provider\n// (CommentsEnabledProvider), we assume that the feature is disabled.\n/**\n * @internal\n */\nexport const CommentsEnabledContext = createContext<CommentsEnabledContextValue>(\n  'sanity/_singletons/context/comments-enabled',\n  {\n    enabled: false,\n    mode: null,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsIntentContextValue} from '../../core/comments/context/intent/types'\n\n/**\n * @internal\n */\nexport const CommentsIntentContext = createContext<CommentsIntentContextValue | undefined>(\n  'sanity/_singletons/context/comments-intent',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsOnboardingContextValue} from '../../core/comments/context/onboarding/types'\n\n/**\n * @internal\n */\nexport const CommentsOnboardingContext = createContext<CommentsOnboardingContextValue | null>(\n  'sanity/_singletons/context/comments-onboarding',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsSelectedPathContextValue} from '../../core/comments/context/selected-path/types'\n\n/**\n * @internal\n */\nexport const CommentsSelectedPathContext = createContext<CommentsSelectedPathContextValue | null>(\n  'sanity/_singletons/context/comments-selected-path',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CommentsUpsellContextValue} from '../../core/comments/context/upsell/types'\n\n/**\n * @internal\n */\nexport const CommentsUpsellContext = createContext<CommentsUpsellContextValue | null>(\n  'sanity/_singletons/context/comments-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ConnectorContextValue} from '../../core/changeIndicators/ConnectorContext'\n\n/** @internal */\nexport const ConnectorContext = createContext<ConnectorContextValue>(\n  'sanity/_singletons/context/connector',\n  {\n    isReviewChangesOpen: false,\n    onOpenReviewChanges: () => undefined,\n    onSetFocus: () => undefined,\n  } as ConnectorContextValue,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {CopyPasteContextType} from '../../core/studio/copyPaste'\n\n/**\n * @beta\n * @hidden\n */\nexport const CopyPasteContext = createContext<CopyPasteContextType | null>(\n  'sanity/_singletons/context/copy-paste',\n  null,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport const DiffContext = createContext<{\n  path: Path\n}>('sanity/_singletons/context/diff', {\n  path: [],\n})\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentActionProps} from '../../core/config/document/actions'\n\n/**\n * @internal\n */\nexport const DocumentActionPropsContext = createContext<DocumentActionProps | undefined>(\n  'sanity/_singletons/context/document-action-props',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentChangeContextInstance} from '../../core/field/diff/contexts/DocumentChangeContext'\n\n/** @internal */\nexport const DocumentChangeContext = createContext<DocumentChangeContextInstance | null>(\n  'sanity/_singletons/context/document-change',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentFieldAction} from '../../core/config/document/fieldActions/types'\n\n/**\n * @internal\n */\nexport interface DocumentFieldActionsContextValue {\n  actions: DocumentFieldAction[]\n}\n\n/**\n * @internal\n */\nexport const DocumentFieldActionsContext = createContext<DocumentFieldActionsContextValue | null>(\n  'sanity/_singletons/context/document-field-actions',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport interface DocumentIdContextValue {\n  id: string\n}\n\n/**\n * @internal\n */\nexport const DocumentIdContext = createContext<DocumentIdContextValue | null>(\n  'sanity/_singletons/context/document-id',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentPaneContextValue} from '../../structure/panes/document/DocumentPaneContext'\n\n/** @internal */\nexport const DocumentPaneContext = createContext<DocumentPaneContextValue | null>(\n  'sanity/_singletons/context/document-pane',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentSheetListContextValue} from '../../structure/panes/documentList/sheetList/DocumentSheetListProvider'\n\n/** @internal */\nexport const DocumentSheetListContext = createContext<DocumentSheetListContextValue | undefined>(\n  'sanity/_singletons/context/document-sheet-list',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {DocumentFieldActionNode} from '../../core/config/document/fieldActions/types'\n\n/** @internal */\nexport interface FieldActionsContextValue {\n  actions: DocumentFieldActionNode[]\n  focused?: boolean\n  hovered: boolean\n  onMouseEnter: () => void\n  onMouseLeave: () => void\n}\n\n/** @internal */\nexport const FieldActionsContext = createContext<FieldActionsContextValue>(\n  'sanity/_singletons/context/field-actions',\n  {\n    actions: [],\n    focused: false,\n    hovered: false,\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormBuilderContextValue} from '../../core/form/FormBuilderContext'\n\n/**\n * @internal\n */\nexport const FormBuilderContext = createContext<FormBuilderContextValue | null>(\n  'sanity/_singletons/context/form-builder',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormCallbacksValue} from '../../core/form/studio/contexts/FormCallbacks'\n\n/**\n * @internal\n */\nexport const FormCallbacksContext = createContext<FormCallbacksValue | null>(\n  'sanity/_singletons/context/form-callbacks',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormNodePresence} from '../../core/presence/types'\n\n/** @internal */\nexport const FormFieldPresenceContext = createContext<FormNodePresence[]>(\n  'sanity/_singletons/context/form-field-presence',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormValueContextValue} from '../../core/form/contexts/FormValue'\n\n/**\n * @internal\n */\nexport const FormValueContext = createContext<FormValueContextValue | null>(\n  'sanity/_singletons/context/form-value',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FreeTrialContextProps} from '../../core/studio/components/navbar/free-trial/FreeTrialContext'\n\n/**\n * @internal\n */\nexport const FreeTrialContext = createContext<FreeTrialContextProps | undefined>(\n  'sanity/_singletons/context/free-trial',\n  undefined,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n * @hidden\n */\nexport type GetFormValueContextValue = (path: Path) => unknown\n\n/**\n * @internal\n */\nexport const GetFormValueContext = createContext<GetFormValueContextValue | null>(\n  'sanity/_singletons/context/get-form-value',\n  null,\n)\n","import type {Path} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport interface HoveredFieldContextValue {\n  hoveredStack: string[]\n  onMouseEnter: (path: Path) => void\n  onMouseLeave: (path: Path) => void\n}\n\n/** @internal */\nexport const HoveredFieldContext = createContext<HoveredFieldContextValue>(\n  'sanity/_singletons/context/hovered-field',\n  {\n    hoveredStack: [],\n    onMouseEnter: () => undefined,\n    onMouseLeave: () => undefined,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * TODO: remove this context when alternate document-specific context are\n * introduced.\n *\n * The following context is used in the structure tool to set the active\n * document if it's the last pane open in the structure tool. This is a\n * temporary context provider that was introduced when the comments and tasks\n * plugins were refactor and decoupled from the structure tool. ideally this\n * should be removed and replaced with a document-specific context that gives\n * plugin authors access to what the `usePane`, `usePaneRouter`, and\n * `useDocumentPane` provides without exposing specifics from the structure tool\n */\n/**\n * @internal\n */\nexport const IsLastPaneContext = createContext<boolean>(\n  'sanity/_singletons/context/is-last-pane',\n  false,\n)\n","import type {i18n} from 'i18next'\nimport {createContext} from 'sanity/_createContext'\n\nimport type {Locale} from '../../core/i18n/types'\n\n/**\n * @internal\n * @hidden\n */\nexport interface LocaleContextValue {\n  locales: Locale[]\n  currentLocale: Locale\n  __internal: {\n    i18next: i18n\n  }\n  changeLocale: (newLocale: string) => Promise<void>\n}\n\n/**\n * @internal\n * @hidden\n */\nexport const LocaleContext = createContext<LocaleContextValue | undefined>(\n  'sanity/_singletons/context/locale',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {MentionUserContextValue} from '../../core/tasks/context/mentionUser/types'\n\n/**\n * @internal\n */\nexport const MentionUserContext = createContext<MentionUserContextValue | null>(\n  'sanity/_singletons/context/mention-user',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {NavbarContextValue} from '../../core/studio/StudioLayout'\n\n/** @internal */\nexport const NavbarContext = createContext<NavbarContextValue>(\n  'sanity/_singletons/context/navbar',\n  {\n    onSearchFullscreenOpenChange: () => '',\n    onSearchOpenChange: () => '',\n    searchFullscreenOpen: false,\n    searchFullscreenPortalEl: null,\n    searchOpen: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneContextValue} from '../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneContext = createContext<PaneContextValue | null>(\n  'sanity/_singletons/context/pane',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneLayoutContextValue} from '../../structure/components/pane/types'\n\n/**\n * @internal\n */\nexport const PaneLayoutContext = createContext<PaneLayoutContextValue | null>(\n  'sanity/_singletons/context/pane-layout',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PaneRouterContextValue} from '../../structure/components/paneRouter/types'\n\nfunction missingContext<T = unknown>(): T {\n  throw new Error('Pane is missing router context')\n}\n\n/**\n *\n * @hidden\n * @beta\n */\nexport const PaneRouterContext = createContext<PaneRouterContextValue>(\n  'sanity/_singletons/context/pane-router',\n  {\n    index: 0,\n    groupIndex: 0,\n    siblingIndex: 0,\n    payload: undefined,\n    params: {},\n    hasGroupSiblings: false,\n    groupLength: 0,\n    routerPanesState: [],\n    BackLink: () => missingContext(),\n    ChildLink: () => missingContext(),\n    ReferenceChildLink: () => missingContext(),\n    handleEditReference: () => missingContext(),\n    ParameterizedLink: () => missingContext(),\n    replaceCurrent: () => missingContext(),\n    closeCurrentAndAfter: () => missingContext(),\n    closeCurrent: () => missingContext(),\n    duplicateCurrent: () => missingContext(),\n    setView: () => missingContext(),\n    setParams: () => missingContext(),\n    setPayload: () => missingContext(),\n    navigateIntent: () => missingContext(),\n    createPathWithParams: () => missingContext(),\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PortableTextMarker} from '../../core/form/types/_transitional'\n\n/**\n * @internal\n */\nexport const PortableTextMarkersContext = createContext<PortableTextMarker[]>(\n  'sanity/_singletons/context/portable-text-markers',\n  [],\n)\n","import {BehaviorSubject} from 'rxjs'\nimport {createContext} from 'sanity/_createContext'\n\n/** @internal */\nexport type PortableTextEditorElement = HTMLDivElement | HTMLSpanElement\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemElementRefsContext = createContext<\n  BehaviorSubject<Record<string, PortableTextEditorElement | null | undefined>>\n>('sanity/_singletons/context/portable-text-member-item-element-refs', new BehaviorSubject({}))\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PortableTextMemberItem} from '../../core/form/inputs/PortableText/PortableTextInput'\n\n/**\n * @internal\n */\nexport const PortableTextMemberItemsContext = createContext<PortableTextMemberItem[]>(\n  'sanity/_singletons/context/portable-text-member-items',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {FormNodePresence} from '../../core/presence/types'\n\n/**\n * @internal\n */\nexport const PresenceContext = createContext<FormNodePresence[]>(\n  'sanity/_singletons/context/presence',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {\n  PresenceTrackerContextStoreType,\n  PresenceTrackerGetSnapshotType,\n} from '../../core/presence/overlay/PresenceTrackerContexts'\n\n/** @internal */\nexport const PresenceTrackerContextStore = createContext<PresenceTrackerContextStoreType>(\n  'sanity/_singletons/context/presence-tracker-store',\n  null,\n)\n\n/** @internal */\nexport const PresenceTrackerContextGetSnapshot = createContext<PresenceTrackerGetSnapshotType>(\n  'sanity/_singletons/context/presence-tracker-get-snapshot',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {PreviewCardContextValue} from '../../core/components/previewCard/PreviewCard'\n\n/**\n * @internal\n */\nexport const PreviewCardContext = createContext<PreviewCardContextValue>(\n  'sanity/_singletons/context/preview-card',\n  {\n    selected: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReferenceInputOptions} from '../../core/form/studio/contexts/ReferenceInputOptions'\n\n/**\n * @internal\n */\nexport const ReferenceInputOptionsContext = createContext<ReferenceInputOptions>(\n  'sanity/_singletons/context/reference-input-options',\n  {},\n)\n","/* eslint-disable import/no-duplicates */\nimport type {MutableRefObject} from 'react'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport interface ReferenceItemRef {\n  menuRef: MutableRefObject<HTMLDivElement | null>\n  menuButtonRef: MutableRefObject<HTMLButtonElement | null>\n  containerRef: MutableRefObject<HTMLDivElement | null>\n}\n\n/**\n * This is a way to store ref of the menu as well as the container of the ReferenceItem\n * so it can be used down the tree for clickOutside handling\n * @internal\n */\nexport const ReferenceItemRefContext = createContext<ReferenceItemRef | null>(\n  'sanity/_singletons/context/reference-item-ref',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ResourceCache} from '../../core/store/_legacy/ResourceCacheProvider'\n\n/**\n * @internal\n */\nexport const ResourceCacheContext = createContext<ResourceCache | null>(\n  'sanity/_singletons/context/resource-cache',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ReviewChangesContextValue} from '../../core/form/studio/contexts/reviewChanges/types'\n\n/**\n * @internal\n */\nexport const ReviewChangesContext = createContext<ReviewChangesContextValue | null>(\n  'sanity/_singletons/context/review-changes',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RouterContextValue} from '../../router/types'\n\n/**\n * @internal\n */\nexport const RouterContext = createContext<RouterContextValue | null>(\n  'sanity/_singletons/context/router',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {RouterHistory} from '../../core/studio/router'\n\n/**\n * Internal use only. Userland should leverage the public `useRouter` APIs.\n * @internal\n */\nexport const RouterHistoryContext = createContext<RouterHistory | null>(\n  'sanity/_singletons/context/router-history',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SanityCreateConfigContextValue} from '../../core'\n\n/**\n * @internal\n */\nexport const SanityCreateConfigContext = createContext<SanityCreateConfigContextValue>(\n  'sanity/_singletons/context/start-in-create-enabled',\n  {\n    startInCreateEnabled: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ScheduledPublishingEnabledContextValue} from '../../core/scheduledPublishing/tool/contexts/ScheduledPublishingEnabledProvider'\n\n/**\n * @internal\n */\nexport const ScheduledPublishingEnabledContext =\n  createContext<ScheduledPublishingEnabledContextValue | null>(\n    'sanity/_singletons/context/scheduled-publishing-enabled',\n    null,\n  )\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SchedulePublishUpsellContextValue} from '../../core/scheduledPublishing/tool/contexts/SchedulePublishingUpsellProvider'\n\n/**\n * @internal\n */\nexport const SchedulePublishUpsellContext = createContext<SchedulePublishUpsellContextValue>(\n  'sanity/_singletons/context/schedule-publish-upsell',\n  {\n    upsellData: null,\n    handleOpenDialog: () => null,\n    upsellDialogOpen: false,\n    telemetryLogs: {\n      dialogSecondaryClicked: () => null,\n      dialogPrimaryClicked: () => null,\n      panelViewed: () => null,\n      panelDismissed: () => null,\n      panelPrimaryClicked: () => null,\n      panelSecondaryClicked: () => null,\n    },\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SchedulesContextValue} from '../../core/scheduledPublishing/tool/contexts/schedules'\n\n/**\n * @internal\n */\nexport const SchedulesContext = createContext<SchedulesContextValue | undefined>(\n  'sanity/_singletons/context/schedules',\n  undefined,\n)\n","import type {PubSub} from 'nano-pubsub'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const ScrollContext = createContext<null | PubSub<Event>>(\n  'sanity/_singletons/context/scroll',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {SearchContextValue} from '../../core/studio/components/navbar/search/contexts/search/SearchContext'\n\n/**\n * @internal\n */\nexport const SearchContext = createContext<SearchContextValue | undefined>(\n  'sanity/_singletons/context/search',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const SortableItemIdContext = createContext<string | null>(\n  'sanity/_singletons/context/sortable-item-id',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {Source} from '../../core/config/types'\n\n/**\n * @internal\n */\nexport const SourceContext = createContext<Source | null>('sanity/_singletons/context/source', null)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StructureToolContextValue} from '../../structure/types'\n\n/**\n * @internal\n */\nexport const StructureToolContext = createContext<StructureToolContextValue | null>(\n  'sanity/_singletons/context/structure-tool',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {StudioAnnouncementsContextValue} from '../../core/studio/studioAnnouncements/types'\n\n/**\n * @internal\n */\nexport const StudioAnnouncementContext = createContext<StudioAnnouncementsContextValue | undefined>(\n  'sanity/_singletons/context/studioAnnouncements',\n  undefined,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksContextValue} from '../../core/tasks/context/tasks/types'\n\n/**\n * @internal\n */\nexport const TasksContext = createContext<TasksContextValue | null>(\n  'sanity/_singletons/context/tasks',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksEnabledContextValue} from '../../core/tasks/context/enabled/types'\n\n// NOTE: We initialize this context with a default value (`enabled: false`)\n// rather than `null` to handle cases where the tasks feature's availability\n// isn't explicitly provided by a surrounding provider component. Typically,\n// Tasks are included by default in all new Studio configurations. Therefore,\n// in the absence of a specific provider (TasksEnabledProvider), we assume that\n// the feature is disabled.\n/**\n * @internal\n */\nexport const TasksEnabledContext = createContext<TasksEnabledContextValue>(\n  'sanity/_singletons/context/tasks-enabled',\n  {\n    enabled: false,\n    mode: null,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksNavigationContextValue} from '../../core/tasks/context/navigation/types'\n\n/**\n * @internal\n */\nexport const TasksNavigationContext = createContext<TasksNavigationContextValue | null>(\n  'sanity/_singletons/context/tasks-navigation',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TasksUpsellContextValue} from '../../core/tasks/context/upsell/types'\n\n/**\n * @beta\n * @hidden\n */\nexport const TasksUpsellContext = createContext<TasksUpsellContextValue | null>(\n  'sanity/_singletons/context/tasks-upsell',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {TreeEditingEnabledContextValue} from '../../core/form/studio/tree-editing/context/enabled/useTreeEditingEnabled'\n\n/**\n * @internal\n */\nexport const TreeEditingEnabledContext = createContext<TreeEditingEnabledContextValue>(\n  'sanity/_singletons/context/tree-editing-enabled',\n  {\n    enabled: false,\n    legacyEditing: false,\n  },\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {UserColorManager} from '../../core/user-color/types'\n\n/**\n * @internal\n */\nexport const UserColorManagerContext = createContext<UserColorManager | null>(\n  'sanity/_singletons/context/user-color-manager',\n  null,\n)\n","import type {ValidationMarker} from '@sanity/types'\nimport {createContext} from 'sanity/_createContext'\n\n/**\n * @internal\n */\nexport const ValidationContext = createContext<ValidationMarker[]>(\n  'sanity/_singletons/context/validation',\n  [],\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {VirtualizerScrollInstance} from '../../core/form/inputs/arrays/ArrayOfObjectsInput/List/useVirtualizerScrollInstance'\n\n/**\n * This is used to store the reference to the scroll element for virtualizer\n * @internal\n */\nexport const VirtualizerScrollInstanceContext = createContext<VirtualizerScrollInstance | null>(\n  'sanity/_singletons/context/virtualizer-scroll-instance',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {Workspace} from '../../core/config/types'\n\n/**\n * @internal\n */\nexport const WorkspaceContext = createContext<Workspace | null>(\n  'sanity/_singletons/context/workspace',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {WorkspacesContextValue} from '../../core/studio/workspaces/WorkspacesContext'\n\n/** @internal */\nexport const WorkspacesContext = createContext<WorkspacesContextValue | null>(\n  'sanity/_singletons/context/workspaces',\n  null,\n)\n","import {createContext} from 'sanity/_createContext'\n\nimport type {ZIndexContextValue} from '../../core/components/zOffsets/types'\n\n/**\n * @internal\n */\nexport const zIndexContextDefaults: ZIndexContextValue = {\n  navbar: 200,\n  navbarPopover: 500000,\n  navbarDialog: 500001,\n  // pane\n  pane: 100,\n  paneHeader: [110, 15000],\n  paneFooter: [120, 20000],\n  paneResizer: [130, 25000],\n  paneDialog: [140, 5000],\n  //\n  popover: 200,\n  modal: 200,\n  movingItem: 10000,\n  drawershade: 1000000,\n  drawer: 1000001,\n  fullscreen: 1200000,\n  toast: [100, 11000],\n  // NOT IN USE\n  portal: 200,\n  dropdown: 200,\n  navbarFixed: 1010,\n  fullscreenEdit: 1050,\n  popoverBackground: 1060,\n  tooltip: 200,\n  modalBackground: 2000,\n  spinner: 3000,\n}\n\n/**\n * TODO: Rename to `ZOffsetsContext`\n *\n * @internal\n */\nexport const ZIndexContext = createContext<ZIndexContextValue>(\n  'sanity/_singletons/context/z-index',\n  zIndexContextDefaults,\n)\n"],"names":["ActiveWorkspaceMatcherContext","createContext","AddonDatasetContext","CalendarContext","undefined","ChangeIndicatorTrackerContextStore","ChangeIndicatorTrackerContextGetSnapshot","ColorSchemeSetValueContext","ColorSchemeValueContext","CommentInputContext","CommentsAuthoringPathContext","CommentsContext","CommentsEnabledContext","enabled","mode","CommentsIntentContext","CommentsOnboardingContext","CommentsSelectedPathContext","CommentsUpsellContext","ConnectorContext","isReviewChangesOpen","onOpenReviewChanges","onSetFocus","CopyPasteContext","DiffContext","path","DocumentActionPropsContext","DocumentChangeContext","DocumentFieldActionsContext","DocumentIdContext","DocumentPaneContext","DocumentSheetListContext","FieldActionsContext","actions","focused","hovered","onMouseEnter","onMouseLeave","FormBuilderContext","FormCallbacksContext","FormFieldPresenceContext","FormValueContext","FreeTrialContext","GetFormValueContext","HoveredFieldContext","hoveredStack","IsLastPaneContext","LocaleContext","MentionUserContext","NavbarContext","onSearchFullscreenOpenChange","onSearchOpenChange","searchFullscreenOpen","searchFullscreenPortalEl","searchOpen","PaneContext","PaneLayoutContext","missingContext","Error","PaneRouterContext","index","groupIndex","siblingIndex","payload","params","hasGroupSiblings","groupLength","routerPanesState","BackLink","ChildLink","ReferenceChildLink","handleEditReference","ParameterizedLink","replaceCurrent","closeCurrentAndAfter","closeCurrent","duplicateCurrent","setView","setParams","setPayload","navigateIntent","createPathWithParams","PortableTextMarkersContext","PortableTextMemberItemElementRefsContext","BehaviorSubject","PortableTextMemberItemsContext","PresenceContext","PresenceTrackerContextStore","PresenceTrackerContextGetSnapshot","PreviewCardContext","selected","ReferenceInputOptionsContext","ReferenceItemRefContext","ResourceCacheContext","ReviewChangesContext","RouterContext","RouterHistoryContext","SanityCreateConfigContext","startInCreateEnabled","ScheduledPublishingEnabledContext","SchedulePublishUpsellContext","upsellData","handleOpenDialog","upsellDialogOpen","telemetryLogs","dialogSecondaryClicked","dialogPrimaryClicked","panelViewed","panelDismissed","panelPrimaryClicked","panelSecondaryClicked","SchedulesContext","ScrollContext","SearchContext","SortableItemIdContext","SourceContext","StructureToolContext","StudioAnnouncementContext","TasksContext","TasksEnabledContext","TasksNavigationContext","TasksUpsellContext","TreeEditingEnabledContext","legacyEditing","UserColorManagerContext","ValidationContext","VirtualizerScrollInstanceContext","WorkspaceContext","WorkspacesContext","zIndexContextDefaults","navbar","navbarPopover","navbarDialog","pane","paneHeader","paneFooter","paneResizer","paneDialog","popover","modal","movingItem","drawershade","drawer","fullscreen","toast","portal","dropdown","navbarFixed","fullscreenEdit","popoverBackground","tooltip","modalBackground","spinner","ZIndexContext"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70]}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 254, "column": 0}, "map": {"version":3,"file":"router.mjs","sources":["file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/useRouter.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/useLink.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/useIntentLink.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/IntentLink.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/Link.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/_parseRoute.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/utils/arrayify.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/_findMatchingRoutes.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/encodeURIComponentExcept.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/utils/debug.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/_resolvePathFromState.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/utils/parseScopedParams.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/_resolveStateFromPath.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/utils/base64url.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/utils/jsonParamsEncoding.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/utils/paramsEncoding.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/route.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/RouterProvider.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/RouteScope.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/useStateLink.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/StateLink.tsx","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/useRouterState.ts","file://C%3A/Users/fanta/Desktop/blog/cms-sanity-blog/node_modules/.pnpm/sanity%403.67.1_%40emotion%2Bis-prop-valid%401.2.2_%40types%2Bnode%4022.10.2_%40types%2Breact%4018.3.17_react-dom_5ydo4m4kut47iawfyfyzcg2twu/node_modules/sanity/src/router/withRouter.tsx"],"sourcesContent":["import {useContext} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {type RouterContextValue} from './types'\n\n/**\n * Returns the router context value.\n * @public\n *\n * @returns The router context value.\n *  {@link RouterContextValue}\n * @throws An error if the router context value is missing.\n *\n * @example\n * ```tsx\n * const router = useRouter()\n * ```\n */\nexport function useRouter(): RouterContextValue {\n  const router = useContext(RouterContext)\n\n  if (!router) {\n    throw new Error('Router: missing context value')\n  }\n\n  return router\n}\n","import {useCallback} from 'react'\n\nimport {useRouter} from './useRouter'\n\nfunction isLeftClickEvent(event: React.MouseEvent) {\n  return event.button === 0\n}\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey)\n}\n\n/**\n * @public\n */\nexport interface UseLinkOptions {\n  /**\n   * The URL that the link should navigate to.\n   */\n  href?: string\n\n  /**\n   * The event handler function that should be called when the link is clicked.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>\n\n  /**\n   * Whether the link should replace the current URL in the browser history.\n   */\n  replace?: boolean\n\n  /**\n   * The target window or frame that the linked document will open in.\n   */\n  target?: string\n}\n\n/**\n * Returns an object with an `onClick` function that can be used as a click handler for a link.\n *\n * @public\n *\n * @param options - An object containing the properties for the link.\n *  See {@link UseLinkOptions}\n *\n * @returns An object with an `onClick` function.\n *\n * @example\n * ```tsx\n * const linkProps = useLink({\n *  href: 'https://www.sanity.io',\n *  target: '_blank'\n * })\n *\n * <a {...linkProps}>Link</a>\n * ```\n */\nexport function useLink(options: UseLinkOptions): {onClick: React.MouseEventHandler<HTMLElement>} {\n  const {onClick: onClickProp, href, target, replace = false} = options\n  const {navigateUrl} = useRouter()\n\n  const onClick = useCallback(\n    (event: React.MouseEvent<HTMLElement>): void => {\n      if (event.isDefaultPrevented()) {\n        return\n      }\n\n      if (!href) return\n\n      if (onClickProp) {\n        onClickProp(event)\n      }\n\n      if (isModifiedEvent(event) || !isLeftClickEvent(event)) {\n        return\n      }\n\n      // If target prop is set (e.g. to \"_blank\") let browser handle link.\n      if (target) {\n        return\n      }\n\n      event.preventDefault()\n\n      navigateUrl({path: href, replace})\n    },\n    [href, navigateUrl, onClickProp, replace, target],\n  )\n\n  return {onClick: onClick}\n}\n","import {useMemo} from 'react'\n\nimport {type IntentParameters, type SearchParam} from './types'\nimport {useLink} from './useLink'\nimport {useRouter} from './useRouter'\n\n/**\n * @public\n */\nexport interface UseIntentLinkOptions {\n  /**\n   * The name of the intent to trigger.\n   */\n  intent: string\n\n  /**\n   * An optional click event handler.\n   */\n  onClick?: React.MouseEventHandler<HTMLElement>\n\n  /**\n   * Optional parameters to pass to the intent. See {@link IntentParameters}\n   */\n  params?: IntentParameters\n\n  /**\n   * Whether to replace the current URL in the browser history.\n   */\n  replace?: boolean\n\n  /**\n   * The target window or frame to open the link in.\n   */\n  target?: string\n  searchParams?: SearchParam[]\n}\n\n/**\n *\n * Returns props for an anchor element that will trigger an intent when clicked.\n *\n * @example\n * ```tsx\n * const {onClick, href} = useIntentLink({\n *   intent: 'edit',\n *   params: {id: 'foo'}\n * })\n *\n * <a href={href} onClick={onClick}>Link to \"foo\" editor</a>\n * ```\n *\n * @public\n *\n * @param options - Options to use for the link\n *  {@link UseIntentLinkOptions}\n *\n * @returns - An object with `onClick` and `href` props to use for the link\n */\nexport function useIntentLink(options: UseIntentLinkOptions): {\n  onClick: React.MouseEventHandler<HTMLElement>\n  href: string\n} {\n  const {intent, onClick: onClickProp, params, replace, target, searchParams} = options\n  const {resolveIntentLink} = useRouter()\n  const href = useMemo(\n    () => resolveIntentLink(intent, params, searchParams),\n    [intent, params, searchParams, resolveIntentLink],\n  )\n  const {onClick} = useLink({href, onClick: onClickProp, replace, target})\n\n  return {onClick, href}\n}\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {type IntentParameters, type SearchParam} from './types'\nimport {useIntentLink} from './useIntentLink'\n\n/**\n * Props for the {@link IntentLink} component.\n *\n * @public\n */\nexport interface IntentLinkProps {\n  /**\n   * The name of the intent.\n   */\n  intent: string\n\n  /**\n   * The parameters to include in the intent.\n   * {@link IntentParameters}\n   */\n  params?: IntentParameters\n\n  /**\n   * Whether to replace the current URL in the browser history instead of adding a new entry.\n   */\n  replace?: boolean\n\n  /**\n   * search params to include in the intent.\n   */\n  searchParams?: SearchParam[]\n}\n\n/**\n * @public\n *\n * @param props - Props to pass to `IntentLink` component.\n *  See {@link IntentLinkProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return <IntentLink intent=\"edit\" params={{id: 'abc123'}}>Edit</IntentLink>\n * }\n * ```\n */\nexport const IntentLink = forwardRef(function IntentLink(\n  props: IntentLinkProps & HTMLProps<HTMLAnchorElement>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {intent, params, target, searchParams, ...restProps} = props\n  const {onClick, href} = useIntentLink({\n    intent,\n    params,\n    target,\n    onClick: props.onClick,\n    searchParams,\n  })\n\n  return <a {...restProps} href={href} onClick={onClick} ref={ref} target={target} />\n})\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {useLink} from './useLink'\n\n/**\n * Props for the {@link Link} component.\n *\n * @public\n */\nexport interface LinkProps {\n  /**\n   * Whether to replace the current URL in the browser history instead of adding a new entry.\n   */\n  replace?: boolean\n}\n\n/**\n * A component that creates an HTML anchor element.\n *\n * @public\n *\n * @param props - Props to pass to the `Link` component.\n *  See {@link LinkProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *   return (\n *    <Link href=\"https://www.sanity.io\" target=\"_blank\" replace>\n *      Go to Sanity\n *    </Link>\n *   )\n * }\n * ```\n */\nexport const Link = forwardRef(function Link(\n  props: LinkProps & HTMLProps<HTMLAnchorElement>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {onClick: onClickProp, href, target, replace, ...restProps} = props\n  const {onClick} = useLink({onClick: onClickProp, href, target, replace})\n\n  return <a {...restProps} onClick={onClick} href={href} target={target} ref={ref} />\n})\n","import {type Route, type RouteSegment} from './types'\n\nconst VALID_PARAM_SEGMENT = /^[a-zA-Z0-9_-]+$/\n\nfunction createSegment(segment: string): RouteSegment | null {\n  if (!segment) {\n    return null\n  }\n\n  if (segment.startsWith(':')) {\n    const paramName = segment.slice(1)\n\n    if (!VALID_PARAM_SEGMENT.test(paramName)) {\n      const addendum = segment.includes('*')\n        ? ' Splats are not supported. Consider using child routes instead'\n        : ''\n      // eslint-disable-next-line no-console\n      console.error(\n        new Error(`Warning: Param segments \"${segment}\" includes invalid characters.${addendum}`),\n      )\n    }\n\n    return {type: 'param', name: paramName}\n  }\n\n  return {type: 'dir', name: segment}\n}\n\n/** @internal */\nexport function _parseRoute(route: string): Route {\n  const [pathname] = route.split('?')\n\n  const segments = pathname.split('/').map(createSegment).filter(Boolean) as RouteSegment[]\n\n  return {\n    raw: route,\n    segments: segments,\n  }\n}\n","export function arrayify<T>(val: Array<T> | T): Array<T> {\n  if (Array.isArray(val)) {\n    return val\n  }\n\n  return val ? [val] : []\n}\n","import {difference, intersection, isPlainObject, pick} from 'lodash'\n\nimport {\n  type InternalSearchParam,\n  type MatchError,\n  type MatchOk,\n  type MatchResult,\n  type RouterNode,\n  type RouterState,\n} from './types'\nimport {arrayify} from './utils/arrayify'\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return isPlainObject(value)\n}\n\nfunction createMatchError(\n  node: RouterNode,\n  missingKeys: string[],\n  unmappableStateKeys: string[],\n): MatchError {\n  return {type: 'error', node, missingKeys, unmappableStateKeys}\n}\n\nfunction createMatchOk(\n  node: RouterNode,\n  matchedState: Record<string, string>,\n  searchParams: InternalSearchParam[],\n  child?: MatchOk | undefined,\n): MatchOk {\n  return {type: 'ok', node, matchedState, searchParams, child}\n}\n\n/** @internal */\nexport function _findMatchingRoutes(node: RouterNode, _state?: RouterState): MatchResult {\n  if (!_state) {\n    return createMatchOk(node, {}, [])\n  }\n\n  const scopedState = node.scope ? (_state[node.scope] as RouterState) : _state\n\n  const {_searchParams: searchParams = [], ...state} = scopedState || {}\n\n  const requiredParams = node.route.segments\n    .filter((seg) => seg.type === 'param')\n    .map((seg) => seg.name)\n\n  const stateKeys = isRecord(state) ? Object.keys(state) : []\n\n  // These are params found in both the state and the route definition\n  const consumedParams = intersection(stateKeys, requiredParams)\n\n  // these are params found in the route definition but not in the state, can't map them to a route\n  const missingParams = difference(requiredParams, consumedParams)\n\n  // these are params found in the state but not in the route definition\n  const remainingParams = difference(stateKeys, consumedParams)\n\n  if (missingParams.length > 0) {\n    return createMatchError(node, missingParams, [])\n  }\n\n  const scopedParams = searchParams.map(([key, value]): InternalSearchParam => [[key], value])\n\n  const consumedState = pick(state, consumedParams) as Record<string, string>\n\n  if (remainingParams.length === 0) {\n    return createMatchOk(node, consumedState, scopedParams)\n  }\n\n  const children = arrayify(\n    (typeof node.children === 'function'\n      ? node.children(isRecord(state) ? state : {})\n      : node.children) || [],\n  )\n\n  if (remainingParams.length > 0 && children.length === 0) {\n    // our state includes extra keys that's not consumed by child routes\n    return createMatchError(node, [], remainingParams)\n  }\n\n  const remainingState = pick(state, remainingParams)\n\n  const childResult = children.map((childNode) => _findMatchingRoutes(childNode, remainingState))\n\n  // Look for a matching route\n  const found = childResult.find((res): res is MatchOk => res.type === 'ok')\n  return found\n    ? createMatchOk(node, consumedState, scopedParams, found)\n    : createMatchError(node, [], remainingParams)\n}\n","/**\n * Like encodeURIComponent, but supports a custom set of unescaped characters.\n * @param uriComponent - A value representing an unencoded URI component.\n * @param unescaped - a string containing characters to not escape\n */\nexport function encodeURIComponentExcept(\n  uriComponent: string | number | boolean,\n  unescaped: string,\n): string {\n  const chars = [...String(uriComponent)]\n  let res = ''\n  for (let i = 0; i < chars.length; i++) {\n    const char = chars[i]\n    if (unescaped.includes(char)) {\n      res += char\n    } else {\n      res += encodeURIComponent(char)\n    }\n  }\n  return res\n}\n","import Debug from 'debug'\n\nexport const debug = Debug('state-router')\n","import {_findMatchingRoutes} from './_findMatchingRoutes'\nimport {encodeURIComponentExcept} from './encodeURIComponentExcept'\nimport {type InternalSearchParam, type MatchOk, type RouterNode, type RouterState} from './types'\nimport {debug} from './utils/debug'\n\n/** @internal */\nexport function _resolvePathFromState(node: RouterNode, _state: RouterState): string {\n  debug('Resolving path from state %o', _state)\n\n  const match = _findMatchingRoutes(node, _state)\n  if (match.type === 'error') {\n    const unmappable = match.unmappableStateKeys\n    if (unmappable.length > 0) {\n      throw new Error(\n        `Unable to find matching route for state. Could not map the following state key${\n          unmappable.length == 1 ? '' : 's'\n        } to a valid url: ${unmappable.map(quote).join(', ')}`,\n      )\n    }\n    const missingKeys = match.missingKeys\n    throw new Error(\n      `Unable to find matching route for state. State object is missing the following key${\n        missingKeys.length == 1 ? '' : 's'\n      } defined in route: ${missingKeys.map(quote).join(', ')}`,\n    )\n  }\n\n  const {path, searchParams} = pathFromMatchResult(match)\n\n  const search = searchParams.length > 0 ? encodeParams(searchParams) : ''\n\n  return `/${path.join('/')}${search ? `?${search}` : ''}`\n}\n\nfunction bracketify(value: string): string {\n  return `[${value}]`\n}\n\nfunction encodeParams(params: InternalSearchParam[]): string {\n  return params\n    .flatMap(([key, value]) => {\n      if (value === undefined) {\n        return []\n      }\n      return [encodeSearchParamKey(serializeScopedPath(key)), encodeSearchParamValue(value)].join(\n        '=',\n      )\n    })\n    .join('&')\n}\n\nfunction serializeScopedPath(scopedPath: string[]): string {\n  const [head, ...tail] = scopedPath\n\n  return tail.length > 0 ? [head, ...tail.map(bracketify)].join('') : head\n}\n\nfunction encodeSearchParamValue(value: string): string {\n  return encodeURIComponentExcept(value, '/')\n}\n\nfunction encodeSearchParamKey(value: string): string {\n  return encodeURIComponentExcept(value, '[]')\n}\n\nfunction pathFromMatchResult(match: MatchOk): {\n  path: string[]\n  searchParams: InternalSearchParam[]\n} {\n  const matchedState = match.matchedState\n\n  const base = match.node.route.segments.map((segment) => {\n    if (segment.type === 'dir') {\n      return segment.name\n    }\n\n    const transform = match.node.transform && match.node.transform[segment.name]\n\n    return transform\n      ? transform.toPath(matchedState[segment.name] as any)\n      : matchedState[segment.name]\n  })\n\n  const childMatch = match.child ? pathFromMatchResult(match.child) : undefined\n\n  const searchParams = childMatch?.searchParams\n    ? [...match.searchParams, ...childMatch.searchParams]\n    : match.searchParams\n\n  return {\n    searchParams: addNodeScope(match.node, searchParams),\n    path: [...(base || []), ...(childMatch?.path || [])],\n  }\n}\n\nfunction addNodeScope(\n  node: RouterNode,\n  searchParams: InternalSearchParam[],\n): InternalSearchParam[] {\n  const scope = node.scope\n  return scope && !node.__unsafe_disableScopedSearchParams\n    ? searchParams.map(([namespaces, value]) => [[scope, ...namespaces], value])\n    : searchParams\n}\n\nfunction quote(value: string): string {\n  return `\"${value}\"`\n}\n","import {type InternalSearchParam} from '../types'\n\nexport function parseScopedParams(params: [key: string, value: string][]): InternalSearchParam[] {\n  return params.map(([key, value]) => [parse(key), value])\n}\n\nconst OPEN = 1\nconst CLOSED = 0\n\nfunction parse(str: string) {\n  const result = []\n  let i = 0\n  let state = CLOSED\n  while (i < str.length) {\n    const nextBracketIdx = str.indexOf('[', i)\n    if (nextBracketIdx === -1) {\n      result.push(str.slice(i, str.length))\n      break\n    }\n    if (state === OPEN) {\n      throw new Error('Nested brackets not supported')\n    }\n    state = OPEN\n    if (nextBracketIdx > i) {\n      result.push(str.slice(i, nextBracketIdx))\n      i = nextBracketIdx\n    }\n\n    const nextClosing = str.indexOf(']', nextBracketIdx)\n    if (nextClosing === -1) {\n      if (state === OPEN) {\n        throw new Error('Unclosed bracket')\n      }\n      break\n    }\n    state = CLOSED\n    result.push(str.slice(i + 1, nextClosing))\n    i = nextClosing + 1\n  }\n  return result\n}\n","import {\n  type InternalSearchParam,\n  type RouterNode,\n  type RouterState,\n  type SearchParam,\n} from './types'\nimport {arrayify} from './utils/arrayify'\nimport {debug} from './utils/debug'\nimport {parseScopedParams} from './utils/parseScopedParams'\n\nfunction matchPath(\n  node: RouterNode,\n  path: string,\n  searchParams: InternalSearchParam[],\n): RouterState | null {\n  const parts = path.split('/').filter(Boolean)\n  const segmentsLength = node.route.segments.length\n\n  if (parts.length < segmentsLength) {\n    return null\n  }\n\n  const state: RouterState = {}\n  const isMatching = node.route.segments.every((segment, i) => {\n    if (segment.type === 'dir') {\n      return segment.name === parts[i]\n    }\n\n    const transform = node.transform && node.transform[segment.name]\n\n    state[segment.name] = transform ? transform.toState(parts[i]) : parts[i]\n\n    return true\n  })\n\n  if (!isMatching) {\n    return null\n  }\n\n  const rest = parts.slice(segmentsLength)\n\n  let childState: RouterState | null = null\n\n  const children =\n    typeof node.children === 'function' ? arrayify(node.children(state)) : node.children\n\n  const unscopedParams = removeScope(node.scope, searchParams)\n\n  children.some((childNode) => {\n    if (childNode) {\n      const childParams = childNode.scope\n        ? unscopedParams.filter(([namespaces]) => childNode.scope === namespaces[0])\n        : unscopedParams\n\n      childState = matchPath(childNode, rest.join('/'), childParams)\n      return childState\n    }\n    return undefined\n  })\n\n  if (rest.length > 0 && !childState) {\n    return null\n  }\n\n  const selfParams = unscopedParams.flatMap(([namespace, value]): SearchParam[] => {\n    return namespace.length === 1 ? [[namespace[0], value]] : []\n  })\n\n  const mergedState: RouterState = {\n    ...state,\n    ...(childState || {}),\n    ...(selfParams.length > 0 ? {_searchParams: selfParams} : {}),\n  }\n\n  return node.scope ? {[node.scope]: mergedState} : mergedState\n}\n\n/**\n * @internal\n */\nexport function _resolveStateFromPath(node: RouterNode, path: string): Record<string, any> | null {\n  debug('resolving state from path %s', path)\n\n  const [pathname, search] = path.split('?')\n  const urlSearchParams = Array.from(new URLSearchParams(search).entries())\n\n  const pathMatch = matchPath(node, pathname, parseScopedParams(urlSearchParams))\n\n  debug('resolved: %o', pathMatch || null)\n\n  return pathMatch || null\n}\n\nfunction removeScope(\n  scope: string | undefined,\n  searchParams: InternalSearchParam[],\n): InternalSearchParam[] {\n  return scope\n    ? searchParams.map(([namespaces, value]) => [\n        namespaces[0] === scope ? namespaces.slice(1) : namespaces,\n        value,\n      ])\n    : searchParams\n}\n","/**\n * `atob()` and `btoa()` do not support Unicode characters outside of the Latin1 range,\n * but we obviously want to support the full range of Unicode characters in our router.\n *\n * Additionally, we would prefer not to use characters like `+` and `=` in URLs, as they\n * have specific meanings there and may be misinterpreted. Thus, this uses base64url instead\n * of the more common base64.\n */\n\n/**\n * Encodes a string as base64url\n *\n * @param str - String to encode\n * @returns Encoded string\n * @internal\n */\nexport function encodeBase64Url(str: string): string {\n  return encodeBase64(str).replace(/\\//g, '_').replace(/\\+/g, '-').replace(/[=]+$/, '')\n}\n\n/**\n * Decodes a base64url-encoded string\n *\n * @param str - String to decode\n * @returns Decoded string\n * @internal\n */\nexport function decodeBase64Url(str: string): string {\n  return decodeBase64(str.replace(/-/g, '+').replace(/_/g, '/'))\n}\n\nfunction percentToByte(p: string) {\n  return String.fromCharCode(parseInt(p.slice(1), 16))\n}\n\nfunction encodeBase64(str: string): string {\n  return btoa(encodeURIComponent(str).replace(/%[0-9A-F]{2}/g, percentToByte))\n}\n\nfunction byteToPercent(b: string) {\n  return `%${`00${b.charCodeAt(0).toString(16)}`.slice(-2)}`\n}\n\nfunction decodeBase64(str: string): string {\n  return decodeURIComponent(Array.from(atob(str), byteToPercent).join(''))\n}\n","import {decodeBase64Url, encodeBase64Url} from './base64url'\n\n/**\n * Decode a path segment containing JSON parameters\n *\n * @param pathSegment - The path segment to decode\n * @returns The decoded parameters\n * @internal\n * @hidden\n */\nexport function decodeJsonParams(pathSegment = ''): Record<string, unknown> {\n  const segment = decodeURIComponent(pathSegment)\n\n  if (!segment) {\n    return {}\n  }\n\n  // Because of high-unicode characters (eg outside of the latin1 range), we prefer base64url\n  // since it also removes characters we'd rather not put in our URLs (eg '=' and '/')\n  try {\n    return JSON.parse(decodeBase64Url(segment))\n  } catch (err) {\n    // Fall-through: previously we used plain base64 encoding instead of base64url\n  }\n\n  try {\n    return JSON.parse(atob(segment))\n  } catch (err) {\n    // Fall-through: before _that_, we used plain URI encoding\n  }\n\n  try {\n    return JSON.parse(segment)\n  } catch (err) {\n    console.warn('Failed to parse JSON parameters')\n  }\n\n  return {}\n}\n\n/**\n * Encodes a set of parameters as a path segment, using base64url\n *\n * @param params - Paramters to encode\n * @returns The encoded parameters as a path segment\n * @internal\n * @hidden\n */\nexport function encodeJsonParams(params?: Record<string, unknown>): string {\n  return params ? encodeBase64Url(JSON.stringify(params)) : ''\n}\n","export function decodeParams(pathSegment: string): Record<string, string> {\n  return pathSegment.split(';').reduce<Record<string, string>>((params, pair) => {\n    const [key, value] = pair.split('=')\n\n    params[decodeURIComponent(key)] = decodeURIComponent(value)\n\n    return params\n  }, {})\n}\n\nexport function encodeParams(params: Record<string, string | undefined | null>): string {\n  return Object.entries(params)\n    .filter(([, value]) => value !== undefined && value !== null)\n    .map(([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value as string)}`)\n    .join(';')\n}\n","import {_parseRoute} from './_parseRoute'\nimport {_resolvePathFromState} from './_resolvePathFromState'\nimport {_resolveStateFromPath} from './_resolveStateFromPath'\nimport {type RouteChildren, type Router, type RouteTransform} from './types'\nimport {decodeJsonParams, encodeJsonParams} from './utils/jsonParamsEncoding'\nimport {decodeParams, encodeParams} from './utils/paramsEncoding'\n\n/**\n * @public\n */\nexport interface RouteNodeOptions {\n  /**\n   * The path of the route node.\n   */\n  path?: string\n  /**\n   * The children of the route node. See {@link RouteChildren}\n   */\n  children?: RouteChildren\n  /**\n   * The transforms to apply to the route node. See {@link RouteTransform}\n   */\n  transform?: {\n    [key: string]: RouteTransform<any>\n  }\n  /**\n   * The scope of the route node.\n   */\n  scope?: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n}\n\n/**\n * Interface for the {@link route} object.\n *\n * @public\n */\nexport interface RouteObject {\n  /**\n   * Creates a new router.\n   * Returns {@link Router}\n   * See {@link RouteNodeOptions} and {@link RouteChildren}\n   */\n  create: (\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ) => Router\n\n  /**\n   * Creates a new router for handling intents.\n   * Returns {@link Router}\n   */\n  intents: (base: string) => Router\n\n  /**\n   * Creates a new router scope.\n   * Returns {@link Router}\n   */\n  scope(\n    scopeName: string,\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ): Router\n}\n\n/**\n * An object containing functions for creating routers and router scopes.\n * See {@link RouteObject}\n *\n * @public\n *\n * @example\n * ```ts\n * const router = route.create({\n *   path: \"/foo\",\n *   children: [\n *     route.create({\n *       path: \"/bar\",\n *       children: [\n *         route.create({\n *           path: \"/:baz\",\n *           transform: {\n *             baz: {\n *               toState: (id) => ({ id }),\n *               toPath: (state) => state.id,\n *             },\n *           },\n *         }),\n *       ],\n *     }),\n *   ],\n * });\n * ```\n */\nexport const route: RouteObject = {\n  create: (routeOrOpts, childrenOrOpts, children) =>\n    _createNode(normalizeArgs(routeOrOpts, childrenOrOpts, children)),\n  intents: (base: string) => {\n    const basePath = normalize(base).join('/')\n\n    return route.create(`${basePath}/:intent`, [\n      route.create(\n        ':params',\n        {\n          transform: {\n            params: {\n              toState: decodeParams,\n              toPath: encodeParams,\n            },\n          },\n        },\n        [\n          route.create(':payload', {\n            transform: {\n              payload: {\n                toState: decodeJsonParams,\n                toPath: encodeJsonParams,\n              },\n            },\n          }),\n        ],\n      ),\n    ])\n  },\n  scope(\n    scopeName: string,\n    routeOrOpts: RouteNodeOptions | string,\n    childrenOrOpts?: RouteNodeOptions | RouteChildren | null,\n    children?: Router | RouteChildren,\n  ) {\n    const options = normalizeArgs(routeOrOpts, childrenOrOpts, children)\n\n    return _createNode({\n      ...options,\n      scope: scopeName,\n    })\n  },\n}\n\nfunction normalizeChildren(children: any): RouteChildren {\n  if (Array.isArray(children) || typeof children === 'function') {\n    return children\n  }\n  return children ? [children] : []\n}\n\nfunction isRoute(val?: RouteNodeOptions | Router | RouteChildren) {\n  return val && '_isRoute' in val\n}\n\nfunction normalizeArgs(...args: any[]): RouteNodeOptions\nfunction normalizeArgs(\n  path: string | RouteNodeOptions,\n  childrenOrOpts?: RouteNodeOptions | Router | RouteChildren,\n  children?: Router | RouteChildren,\n): RouteNodeOptions {\n  if (typeof path === 'object') {\n    return path\n  }\n\n  if (\n    Array.isArray(childrenOrOpts) ||\n    typeof childrenOrOpts === 'function' ||\n    isRoute(childrenOrOpts)\n  ) {\n    return {path, children: normalizeChildren(childrenOrOpts)}\n  }\n\n  if (children) {\n    return {path, ...childrenOrOpts, children: normalizeChildren(children)}\n  }\n\n  return {path, ...childrenOrOpts}\n}\n\nfunction normalize(...paths: string[]) {\n  return paths.reduce<string[]>((acc, path) => acc.concat(path.split('/')), []).filter(Boolean)\n}\n\nconst EMPTY_STATE = {}\n\nfunction isRoot(pathname: string): boolean {\n  // it is the root if every segment is an empty string\n  return pathname.split('/').every((segment) => !segment)\n}\n\n/**\n * @internal\n * @param options - Route node options\n */\nexport function _createNode(options: RouteNodeOptions): Router {\n  // eslint-disable-next-line camelcase\n  const {path, scope, transform, children, __unsafe_disableScopedSearchParams} = options\n\n  if (!path) {\n    throw new TypeError('Missing path')\n  }\n\n  const parsedRoute = _parseRoute(path)\n\n  return {\n    _isRoute: true, // todo: make a Router class instead\n    scope,\n    // eslint-disable-next-line camelcase\n    __unsafe_disableScopedSearchParams,\n    route: parsedRoute,\n    children: children || [],\n    transform,\n    encode(state) {\n      return _resolvePathFromState(this, state)\n    },\n    decode(_path) {\n      return _resolveStateFromPath(this, _path)\n    },\n    isRoot: isRoot,\n    isNotFound(pathname: string): boolean {\n      return this.decode(pathname) === null\n    },\n    getBasePath(): string {\n      return this.encode(EMPTY_STATE)\n    },\n    getRedirectBase(pathname: string): string | null {\n      if (isRoot(pathname)) {\n        const basePath = this.getBasePath()\n        // Check if basepath is something different than given\n        if (pathname !== basePath) {\n          return basePath\n        }\n      }\n      return null\n    },\n  }\n}\n","import {type ReactElement, type ReactNode, useCallback, useMemo} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {\n  type IntentParameters,\n  type NavigateOptions,\n  type Router,\n  type RouterContextValue,\n  type RouterState,\n  type SearchParam,\n} from './types'\n\n/**\n * The props for the {@link RouterProvider} component.\n *\n * @public\n */\nexport interface RouterProviderProps {\n  /**\n   * A function that is called when the user navigates to a new path.\n   * Takes an object containing the path to navigate to and an optional `replace` flag.\n   */\n  onNavigate: (opts: {path: string; replace?: boolean}) => void\n  /**\n   * The router object that is used to handle navigation. See {@link Router}\n   */\n  router: Router\n  /**\n   * The current state of the router. See {@link RouterState}\n   */\n  state: RouterState\n  /**\n   * The child elements to render.\n   */\n  children: ReactNode\n}\n\n/**\n * @example\n * ```tsx\n * import {\n *   NavigateOptions,\n *   route,\n *   RouterProvider,\n *   RouterState\n * } from 'sanity'\n * import {useCallback, useMemo} from 'react'\n *\n * function Root() {\n *   const router = useMemo(() => route.create('/'), [])\n *\n *   const [state, setState] = useState<RouterState>({})\n *\n *   const handleNavigate = useCallback((\n *     path: string,\n *     options?: NavigateOptions\n *   ) => {\n *     console.log('navigate', path, options)\n *\n *     setState(router.decode(path))\n *   }, [router])\n *\n *   return (\n *     <RouterProvider\n *       onNavigate={handleNavigate}\n *       router={router}\n *       state={state}\n *     >\n *       <div>This is a routed application</div>\n *     </RouterProvider>\n *   )\n * }\n * ```\n *\n * @param props - The component props.\n *  {@link RouterProviderProps}\n *\n * @public\n */\nexport function RouterProvider(props: RouterProviderProps): ReactElement {\n  const {onNavigate, router: routerProp, state} = props\n\n  const resolveIntentLink = useCallback(\n    (intentName: string, parameters?: IntentParameters, _searchParams?: SearchParam[]): string => {\n      const [params, payload] = Array.isArray(parameters) ? parameters : [parameters]\n      return routerProp.encode({\n        intent: intentName,\n        params,\n        payload,\n        _searchParams,\n      })\n    },\n    [routerProp],\n  )\n\n  const resolvePathFromState = useCallback(\n    (nextState: Record<string, unknown>): string => {\n      return routerProp.encode(nextState)\n    },\n    [routerProp],\n  )\n\n  const navigate = useCallback(\n    (nextState: Record<string, unknown>, options: NavigateOptions = {}) => {\n      onNavigate({path: resolvePathFromState(nextState), replace: options.replace})\n    },\n    [onNavigate, resolvePathFromState],\n  )\n\n  const navigateIntent = useCallback(\n    (intentName: string, params?: IntentParameters, options: NavigateOptions = {}) => {\n      onNavigate({path: resolveIntentLink(intentName, params), replace: options.replace})\n    },\n    [onNavigate, resolveIntentLink],\n  )\n\n  const router: RouterContextValue = useMemo(\n    () => ({\n      navigate,\n      navigateIntent,\n      navigateUrl: onNavigate,\n      resolveIntentLink,\n      resolvePathFromState,\n      state,\n    }),\n    [navigate, navigateIntent, onNavigate, resolveIntentLink, resolvePathFromState, state],\n  )\n\n  return <RouterContext.Provider value={router}>{props.children}</RouterContext.Provider>\n}\n","/* eslint-disable camelcase */\nimport {type ReactElement, type ReactNode, useCallback, useMemo, useRef} from 'react'\nimport {RouterContext} from 'sanity/_singletons'\n\nimport {type NavigateOptions, type RouterContextValue, type RouterState} from './types'\nimport {useRouter} from './useRouter'\n\nfunction addScope(\n  routerState: Record<string, any>,\n  scope: string,\n  scopedState: Record<string, any>,\n) {\n  return (\n    scopedState && {\n      ...routerState,\n      [scope]: scopedState,\n    }\n  )\n}\n\n/**\n * Props for the {@link RouteScope} component.\n *\n * @public\n */\nexport interface RouteScopeProps {\n  /**\n   * The scope for the nested routes.\n   */\n  scope: string\n\n  /**\n   * Optionally disable scoping of search params\n   * Scoped search params will be represented as scope[param]=value in the url\n   * Disabling this will still scope search params based on any parent scope unless the parent scope also has disabled search params scoping\n   * Caution: enabling this can cause conflicts with multiple plugins defining search params with the same name\n   */\n  __unsafe_disableScopedSearchParams?: boolean\n  /**\n   * The content to display inside the route scope.\n   */\n  children: ReactNode\n}\n\n/**\n * A component that wraps a scoped router context, so that calls to\n * `useRouter()`, `useRouterState()`, and usage of `<StateLink />`\n * will be prefixed with the scope segment.\n *\n * @public\n *\n * @param props - Props to pass `RouteScope` component.\n *  See {@link RouteScopeProps}\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return (\n *    <RouteScope scope=\"foo\">\n *      <StateLink state={{bar: 'baz'}}>Link</StateLink>\n *    </RouteScope>\n *  )\n * }\n * ```\n */\nexport function RouteScope(props: RouteScopeProps): ReactElement {\n  const {children, scope, __unsafe_disableScopedSearchParams} = props\n  const parentRouter = useRouter()\n  const {resolvePathFromState: parent_resolvePathFromState, navigate: parent_navigate} =\n    parentRouter\n\n  const parentStateRef = useRef(parentRouter.state)\n\n  parentStateRef.current = parentRouter.state\n\n  const resolveNextParentState = useCallback(\n    (_nextState: RouterState) => {\n      const {_searchParams, ...nextState} = _nextState\n      const nextParentState = addScope(parentStateRef.current, scope, nextState)\n      if (__unsafe_disableScopedSearchParams) {\n        // Move search params to parent scope\n        nextParentState._searchParams = _searchParams\n      } else {\n        nextParentState[scope]._searchParams = _searchParams\n      }\n      return nextParentState\n    },\n    [scope, __unsafe_disableScopedSearchParams],\n  )\n\n  const resolvePathFromState = useCallback(\n    (nextState: RouterState) => parent_resolvePathFromState(resolveNextParentState(nextState)),\n    [parent_resolvePathFromState, resolveNextParentState],\n  )\n\n  const navigate = useCallback(\n    (nextState: RouterState, options?: NavigateOptions) =>\n      parent_navigate(resolveNextParentState(nextState), options),\n    [parent_navigate, resolveNextParentState],\n  )\n\n  const childRouter: RouterContextValue = useMemo(() => {\n    const parentState = parentRouter.state\n    const childState = {...(parentState[scope] || {})} as RouterState\n    if (__unsafe_disableScopedSearchParams) {\n      childState._searchParams = parentState._searchParams\n    }\n    return {\n      ...parentRouter,\n      navigate,\n      resolvePathFromState,\n      state: childState,\n    }\n  }, [scope, parentRouter, navigate, resolvePathFromState, __unsafe_disableScopedSearchParams])\n\n  return <RouterContext.Provider value={childRouter}>{children}</RouterContext.Provider>\n}\n","import {type MouseEventHandler, useMemo} from 'react'\n\nimport {useLink} from './useLink'\nimport {useRouter} from './useRouter'\n\nconst EMPTY_STATE = {}\n\n/**\n * @public\n */\nexport interface UseStateLinkOptions {\n  /**\n   * The click event handler for the link.\n   */\n  onClick?: MouseEventHandler<HTMLElement>\n  /**\n   * Whether to replace the current history entry instead of adding a new one.\n   */\n  replace?: boolean\n  /**\n   * The state object to update when the link is clicked.\n   */\n  state?: Record<string, unknown>\n  /**\n   * The target window or frame to open the linked document in.\n   */\n  target?: string\n  /**\n   * Whether to navigate to the index page of the linked document.\n   */\n  toIndex?: boolean\n}\n\n/**\n * @public\n *\n * @param options - Options to use for the link\n *  {@link UseStateLinkOptions}\n *\n * @returns - An object with `onClick` and `href` props to use for the link\n *\n * @example\n * ```tsx\n * const {onClick, href} = useStateLink({state: {foo: 'bar'}})\n * ```\n */\nexport function useStateLink(options: UseStateLinkOptions): {\n  onClick: MouseEventHandler<HTMLElement>\n  href: string\n} {\n  const {onClick: onClickProp, replace, state, target, toIndex = false} = options\n\n  if (state && toIndex) {\n    throw new Error('Passing both `state` and `toIndex={true}` as props to StateLink is invalid')\n  }\n\n  if (!state && !toIndex) {\n    // eslint-disable-next-line no-console\n    console.error(\n      new Error(\n        'No state passed to StateLink. If you want to link to an empty state, its better to use the the `toIndex` property',\n      ),\n    )\n  }\n\n  const {resolvePathFromState} = useRouter()\n\n  const href = useMemo(\n    () => resolvePathFromState(toIndex ? EMPTY_STATE : state || EMPTY_STATE),\n    [resolvePathFromState, state, toIndex],\n  )\n\n  const {onClick} = useLink({href, onClick: onClickProp, replace, target})\n\n  return {onClick, href}\n}\n","import {type ForwardedRef, forwardRef, type HTMLProps} from 'react'\n\nimport {useStateLink} from './useStateLink'\n\n/**\n * Props for the {@link StateLink} component.\n *\n * @public\n */\nexport interface StateLinkProps {\n  /**\n   * Whether to replace the current history entry instead of adding a new one.\n   */\n  replace?: boolean\n  /**\n   * The state to associate with the link.\n   */\n  state?: Record<string, unknown>\n  /**\n   * Whether to navigate to the index page of the app.\n   */\n  toIndex?: boolean\n}\n\n/**\n * A component that creates a link that updates the URL state.\n *\n * @remarks\n * This component uses the {@link useStateLink} hook\n * to create a link that updates the URL state.\n *\n * @param props - Props to pass to the `StateLink` component.\n *  See {@link StateLinkProps}.\n *\n * @public\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *  return <StateLink state={{foo: 'bar'}}>Link</StateLink>\n * }\n * ```\n */\nexport const StateLink = forwardRef(function StateLink(\n  props: StateLinkProps & Omit<HTMLProps<HTMLAnchorElement>, 'href'>,\n  ref: ForwardedRef<HTMLAnchorElement>,\n) {\n  const {onClick: onClickProp, replace, state, target, toIndex = false, ...restProps} = props\n  const {onClick, href} = useStateLink({\n    onClick: onClickProp,\n    replace,\n    state,\n    target,\n    toIndex,\n  })\n\n  return <a {...restProps} href={href} onClick={onClick} ref={ref} />\n})\n","import {identity} from 'lodash'\nimport {useMemo} from 'react'\n\nimport {type RouterState} from './types'\nimport {useRouter} from './useRouter'\n\n/**\n * @public\n *\n * @param selector - A selector function that receives the router state and returns a value. See {@link RouterState}\n *\n * @returns The value returned by the selector function or RouterState. See {@link RouterState}\n *\n * @example\n * ```tsx\n * const {activeTool} = useRouterState(state => state.tool)\n * ```\n */\nexport function useRouterState<R = RouterState>(selector: (routerState: RouterState) => R): R\n\n/**\n * @public\n *\n * @returns The router state. See {@link RouterState}\n *\n * @example\n * ```tsx\n * const routerState = useRouterState()\n * ```\n */\nexport function useRouterState(): RouterState\n\n/**\n * @public\n */\nexport function useRouterState(\n  selector: (routerState: RouterState) => unknown = identity,\n): unknown {\n  const {state} = useRouter()\n  return useMemo(() => selector(state), [selector, state])\n}\n","import {type ComponentType, type FunctionComponent, type ReactElement} from 'react'\n\nimport {type RouterContextValue} from './types'\nimport {useRouter} from './useRouter'\n\n/**\n * A higher-order component that injects the `router` object from the `useRouter` hook\n * into the props of the wrapped component.\n *\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n *\n * @param Component - The component to wrap.\n *\n * @returns The wrapped component.\n *\n * @example\n * ```tsx\n * function MyComponent(props) {\n *  return <div>{props.router.state.myParam}</div>\n * }\n *\n * export default withRouter(MyComponent)\n * ```\n */\nexport function withRouter<Props extends {router: RouterContextValue}>(\n  Component: ComponentType<Props>,\n): FunctionComponent<Omit<Props, 'router'>> {\n  function WithRouter(props: Omit<Props, 'router'>) {\n    const router = useRouter()\n\n    return <Component {...(props as Props)} router={router} />\n  }\n\n  WithRouter.displayName = `withRouter(${Component.displayName || Component.name})`\n\n  return WithRouter\n}\n\n/**\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n */\nexport interface WithRouterProps {\n  /**\n   * The `router` object from the `useRouter` hook.\n   *  {@link RouterContextValue}\n   */\n  router: RouterContextValue\n  /**\n   * A function that renders the wrapped component with the `router` object as a parameter.\n   */\n  children: (router: RouterContextValue) => ReactElement\n}\n\n/**\n * A higher-order component that injects the router object into its child component.\n *\n * @internal\n * @deprecated - Use the `useRouter` hook instead.\n *\n * @returns The rendered component.\n *\n * @example\n * ```tsx\n * function MyComponent(props: {router: Router}) {\n *   const {location} = props.router\n *   const {pathname} = location\n *   return <p>The current path is: {pathname}</p>\n * }\n *\n * function App() {\n *   return (\n *     <Router>\n *       <WithRouter>\n *         {router => <MyComponent router={router} />}\n *       </WithRouter>\n *     </Router>\n *   )\n * }\n * ```\n */\nexport const WithRouter = withRouter((props: WithRouterProps) => props.children(props.router))\n"],"names":["useRouter","router","useContext","RouterContext","Error","isLeftClickEvent","event","button","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","useLink","options","$","_c","onClick","onClickProp","href","target","replace","t0","undefined","navigateUrl","t1","isDefaultPrevented","preventDefault","path","t2","useIntentLink","intent","params","searchParams","resolveIntentLink","t3","IntentLink","forwardRef","props","ref","restProps","Link","VALID_PARAM_SEGMENT","createSegment","segment","startsWith","paramName","slice","test","addendum","includes","error","type","name","_parseRoute","route","pathname","split","segments","map","filter","Boolean","raw","arrayify","val","Array","isArray","isRecord","value","isPlainObject","createMatchError","node","missingKeys","unmappableStateKeys","createMatchOk","matchedState","child","_findMatchingRoutes","_state","scopedState","scope","_searchParams","state","requiredParams","seg","stateKeys","Object","keys","consumedParams","intersection","missingParams","difference","remainingParams","length","scopedParams","key","consumedState","pick","children","remainingState","found","childNode","find","res","encodeURIComponentExcept","uriComponent","unescaped","chars","String","i","char","encodeURIComponent","debug","Debug","_resolvePathFromState","match","unmappable","quote","join","pathFromMatchResult","search","encodeParams","bracketify","flatMap","encodeSearchParamKey","serializeScopedPath","encodeSearchParamValue","scopedPath","head","tail","base","transform","toPath","childMatch","addNodeScope","__unsafe_disableScopedSearchParams","namespaces","parseScopedParams","parse","OPEN","CLOSED","str","result","nextBracketIdx","indexOf","push","nextClosing","matchPath","parts","segmentsLength","every","toState","rest","childState","unscopedParams","removeScope","some","childParams","selfParams","namespace","mergedState","__spreadValues","_resolveStateFromPath","urlSearchParams","from","URLSearchParams","entries","pathMatch","encodeBase64Url","encodeBase64","decodeBase64Url","decodeBase64","percentToByte","p","fromCharCode","parseInt","btoa","byteToPercent","b","charCodeAt","toString","decodeURIComponent","atob","decodeJsonParams","pathSegment","JSON","err","console","warn","encodeJsonParams","stringify","decodeParams","reduce","pair","create","routeOrOpts","childrenOrOpts","_createNode","normalizeArgs","intents","basePath","normalize","payload","scopeName","__spreadProps","normalizeChildren","isRoute","paths","acc","concat","EMPTY_STATE","isRoot","TypeError","parsedRoute","_isRoute","encode","decode","_path","isNotFound","getBasePath","getRedirectBase","RouterProvider","onNavigate","routerProp","intentName","parameters","nextState","resolvePathFromState","nextState_0","navigate","intentName_0","params_0","t4","options_0","navigateIntent","t5","t6","addScope","routerState","RouteScope","parentRouter","parent_resolvePathFromState","parent_navigate","parentStateRef","useRef","current","resolveNextParentState","useCallback","_nextState","nextParentState","childRouter","useMemo","parentState","useStateLink","toIndex","StateLink","useRouterState","selector","identity","withRouter","Component","WithRouter","displayName"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]}},
    {"offset": {"line": 1010, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}